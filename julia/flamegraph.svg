<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1158" onload="init(evt)" viewBox="0 0 1200 1158" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1158" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1141.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1141.00"> </text><svg id="frames" x="10" width="1180" total_samples="557"><g><title>[libc.so.6] (1 samples, 0.18%)</title><rect x="1.9749%" y="1061" width="0.1795%" height="15" fill="rgb(227,0,7)" fg:x="11" fg:w="1"/><text x="2.2249%" y="1071.50"></text></g><g><title>syscall (1 samples, 0.18%)</title><rect x="1.9749%" y="1045" width="0.1795%" height="15" fill="rgb(217,0,24)" fg:x="11" fg:w="1"/><text x="2.2249%" y="1055.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="1.9749%" y="1029" width="0.1795%" height="15" fill="rgb(221,193,54)" fg:x="11" fg:w="1"/><text x="2.2249%" y="1039.50"></text></g><g><title>[unknown] (13 samples, 2.33%)</title><rect x="0.0000%" y="1077" width="2.3339%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="13"/><text x="0.2500%" y="1087.50">[..</text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="2.1544%" y="1061" width="0.1795%" height="15" fill="rgb(208,68,35)" fg:x="12" fg:w="1"/><text x="2.4044%" y="1071.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="2.1544%" y="1045" width="0.1795%" height="15" fill="rgb(232,128,0)" fg:x="12" fg:w="1"/><text x="2.4044%" y="1055.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="2.1544%" y="1029" width="0.1795%" height="15" fill="rgb(207,160,47)" fg:x="12" fg:w="1"/><text x="2.4044%" y="1039.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="2.1544%" y="1013" width="0.1795%" height="15" fill="rgb(228,23,34)" fg:x="12" fg:w="1"/><text x="2.4044%" y="1023.50"></text></g><g><title>_mid_memalign.isra.0 (1 samples, 0.18%)</title><rect x="2.3339%" y="1077" width="0.1795%" height="15" fill="rgb(218,30,26)" fg:x="13" fg:w="1"/><text x="2.5839%" y="1087.50"></text></g><g><title>_int_memalign (1 samples, 0.18%)</title><rect x="2.3339%" y="1061" width="0.1795%" height="15" fill="rgb(220,122,19)" fg:x="13" fg:w="1"/><text x="2.5839%" y="1071.50"></text></g><g><title>_int_malloc (1 samples, 0.18%)</title><rect x="2.3339%" y="1045" width="0.1795%" height="15" fill="rgb(250,228,42)" fg:x="13" fg:w="1"/><text x="2.5839%" y="1055.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="2.3339%" y="1029" width="0.1795%" height="15" fill="rgb(240,193,28)" fg:x="13" fg:w="1"/><text x="2.5839%" y="1039.50"></text></g><g><title>[unknown] (2 samples, 0.36%)</title><rect x="2.5135%" y="1061" width="0.3591%" height="15" fill="rgb(216,20,37)" fg:x="14" fg:w="2"/><text x="2.7635%" y="1071.50"></text></g><g><title>image::buffer_::ImageBuffer&lt;P,Container&gt;::save (4 samples, 0.72%)</title><rect x="2.8725%" y="805" width="0.7181%" height="15" fill="rgb(206,188,39)" fg:x="16" fg:w="4"/><text x="3.1225%" y="815.50"></text></g><g><title>image::dynimage::save_buffer (4 samples, 0.72%)</title><rect x="2.8725%" y="789" width="0.7181%" height="15" fill="rgb(217,207,13)" fg:x="16" fg:w="4"/><text x="3.1225%" y="799.50"></text></g><g><title>image::io::free_functions::save_buffer_impl (4 samples, 0.72%)</title><rect x="2.8725%" y="773" width="0.7181%" height="15" fill="rgb(231,73,38)" fg:x="16" fg:w="4"/><text x="3.1225%" y="783.50"></text></g><g><title>image::io::free_functions::save_buffer_with_format_impl (4 samples, 0.72%)</title><rect x="2.8725%" y="757" width="0.7181%" height="15" fill="rgb(225,20,46)" fg:x="16" fg:w="4"/><text x="3.1225%" y="767.50"></text></g><g><title>&lt;image::codecs::png::PngEncoder&lt;W&gt; as image::image::ImageEncoder&gt;::write_image (4 samples, 0.72%)</title><rect x="2.8725%" y="741" width="0.7181%" height="15" fill="rgb(210,31,41)" fg:x="16" fg:w="4"/><text x="3.1225%" y="751.50"></text></g><g><title>image::codecs::png::PngEncoder&lt;W&gt;::encode (4 samples, 0.72%)</title><rect x="2.8725%" y="725" width="0.7181%" height="15" fill="rgb(221,200,47)" fg:x="16" fg:w="4"/><text x="3.1225%" y="735.50"></text></g><g><title>png::encoder::Writer&lt;W&gt;::write_image_data (4 samples, 0.72%)</title><rect x="2.8725%" y="709" width="0.7181%" height="15" fill="rgb(226,26,5)" fg:x="16" fg:w="4"/><text x="3.1225%" y="719.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.72%)</title><rect x="2.8725%" y="693" width="0.7181%" height="15" fill="rgb(249,33,26)" fg:x="16" fg:w="4"/><text x="3.1225%" y="703.50"></text></g><g><title>&lt;deflate::writer::ZlibEncoder&lt;W&gt; as std::io::Write&gt;::write (4 samples, 0.72%)</title><rect x="2.8725%" y="677" width="0.7181%" height="15" fill="rgb(235,183,28)" fg:x="16" fg:w="4"/><text x="3.1225%" y="687.50"></text></g><g><title>deflate::compress::compress_data_dynamic_n (4 samples, 0.72%)</title><rect x="2.8725%" y="661" width="0.7181%" height="15" fill="rgb(221,5,38)" fg:x="16" fg:w="4"/><text x="3.1225%" y="671.50"></text></g><g><title>deflate::lz77::lz77_compress_block (4 samples, 0.72%)</title><rect x="2.8725%" y="645" width="0.7181%" height="15" fill="rgb(247,18,42)" fg:x="16" fg:w="4"/><text x="3.1225%" y="655.50"></text></g><g><title>deflate::lz77::process_chunk (4 samples, 0.72%)</title><rect x="2.8725%" y="629" width="0.7181%" height="15" fill="rgb(241,131,45)" fg:x="16" fg:w="4"/><text x="3.1225%" y="639.50"></text></g><g><title>deflate::lz77::process_chunk_greedy (4 samples, 0.72%)</title><rect x="2.8725%" y="613" width="0.7181%" height="15" fill="rgb(249,31,29)" fg:x="16" fg:w="4"/><text x="3.1225%" y="623.50"></text></g><g><title>deflate::lz77::add_to_hash_table (4 samples, 0.72%)</title><rect x="2.8725%" y="597" width="0.7181%" height="15" fill="rgb(225,111,53)" fg:x="16" fg:w="4"/><text x="3.1225%" y="607.50"></text></g><g><title>deflate::chained_hash_table::ChainedHashTable::add_with_hash (4 samples, 0.72%)</title><rect x="2.8725%" y="581" width="0.7181%" height="15" fill="rgb(238,160,17)" fg:x="16" fg:w="4"/><text x="3.1225%" y="591.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (7 samples, 1.26%)</title><rect x="4.1293%" y="629" width="1.2567%" height="15" fill="rgb(214,148,48)" fg:x="23" fg:w="7"/><text x="4.3793%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.18%)</title><rect x="5.3860%" y="629" width="0.1795%" height="15" fill="rgb(232,36,49)" fg:x="30" fg:w="1"/><text x="5.6360%" y="639.50"></text></g><g><title>alloc::vec::from_elem (1 samples, 0.18%)</title><rect x="5.5655%" y="629" width="0.1795%" height="15" fill="rgb(209,103,24)" fg:x="31" fg:w="1"/><text x="5.8155%" y="639.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (1 samples, 0.18%)</title><rect x="5.5655%" y="613" width="0.1795%" height="15" fill="rgb(229,88,8)" fg:x="31" fg:w="1"/><text x="5.8155%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (1 samples, 0.18%)</title><rect x="5.5655%" y="597" width="0.1795%" height="15" fill="rgb(213,181,19)" fg:x="31" fg:w="1"/><text x="5.8155%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.18%)</title><rect x="5.5655%" y="581" width="0.1795%" height="15" fill="rgb(254,191,54)" fg:x="31" fg:w="1"/><text x="5.8155%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.18%)</title><rect x="5.5655%" y="565" width="0.1795%" height="15" fill="rgb(241,83,37)" fg:x="31" fg:w="1"/><text x="5.8155%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.18%)</title><rect x="5.5655%" y="549" width="0.1795%" height="15" fill="rgb(233,36,39)" fg:x="31" fg:w="1"/><text x="5.8155%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.18%)</title><rect x="5.5655%" y="533" width="0.1795%" height="15" fill="rgb(226,3,54)" fg:x="31" fg:w="1"/><text x="5.8155%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.18%)</title><rect x="5.5655%" y="517" width="0.1795%" height="15" fill="rgb(245,192,40)" fg:x="31" fg:w="1"/><text x="5.8155%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.18%)</title><rect x="5.5655%" y="501" width="0.1795%" height="15" fill="rgb(238,167,29)" fg:x="31" fg:w="1"/><text x="5.8155%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (1 samples, 0.18%)</title><rect x="5.5655%" y="485" width="0.1795%" height="15" fill="rgb(232,182,51)" fg:x="31" fg:w="1"/><text x="5.8155%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.18%)</title><rect x="5.5655%" y="469" width="0.1795%" height="15" fill="rgb(231,60,39)" fg:x="31" fg:w="1"/><text x="5.8155%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.18%)</title><rect x="5.5655%" y="453" width="0.1795%" height="15" fill="rgb(208,69,12)" fg:x="31" fg:w="1"/><text x="5.8155%" y="463.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.18%)</title><rect x="5.5655%" y="437" width="0.1795%" height="15" fill="rgb(235,93,37)" fg:x="31" fg:w="1"/><text x="5.8155%" y="447.50"></text></g><g><title>malloc (1 samples, 0.18%)</title><rect x="5.5655%" y="421" width="0.1795%" height="15" fill="rgb(213,116,39)" fg:x="31" fg:w="1"/><text x="5.8155%" y="431.50"></text></g><g><title>_int_malloc (1 samples, 0.18%)</title><rect x="5.5655%" y="405" width="0.1795%" height="15" fill="rgb(222,207,29)" fg:x="31" fg:w="1"/><text x="5.8155%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="5.5655%" y="389" width="0.1795%" height="15" fill="rgb(206,96,30)" fg:x="31" fg:w="1"/><text x="5.8155%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="5.5655%" y="373" width="0.1795%" height="15" fill="rgb(218,138,4)" fg:x="31" fg:w="1"/><text x="5.8155%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="5.5655%" y="357" width="0.1795%" height="15" fill="rgb(250,191,14)" fg:x="31" fg:w="1"/><text x="5.8155%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="5.5655%" y="341" width="0.1795%" height="15" fill="rgb(239,60,40)" fg:x="31" fg:w="1"/><text x="5.8155%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;std::sync::mutex::Mutex&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;image::color::Rgb&lt;u8&gt;&gt;&gt;&gt;&gt;&gt; (7 samples, 1.26%)</title><rect x="5.7451%" y="629" width="1.2567%" height="15" fill="rgb(206,27,48)" fg:x="32" fg:w="7"/><text x="5.9951%" y="639.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 1.26%)</title><rect x="5.7451%" y="613" width="1.2567%" height="15" fill="rgb(225,35,8)" fg:x="32" fg:w="7"/><text x="5.9951%" y="623.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (7 samples, 1.26%)</title><rect x="5.7451%" y="597" width="1.2567%" height="15" fill="rgb(250,213,24)" fg:x="32" fg:w="7"/><text x="5.9951%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::Mutex&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;image::color::Rgb&lt;u8&gt;&gt;&gt;&gt;&gt; (7 samples, 1.26%)</title><rect x="5.7451%" y="581" width="1.2567%" height="15" fill="rgb(247,123,22)" fg:x="32" fg:w="7"/><text x="5.9951%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;image::color::Rgb&lt;u8&gt;&gt;&gt;&gt;&gt; (7 samples, 1.26%)</title><rect x="5.7451%" y="565" width="1.2567%" height="15" fill="rgb(231,138,38)" fg:x="32" fg:w="7"/><text x="5.9951%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;image::color::Rgb&lt;u8&gt;&gt;&gt;&gt; (7 samples, 1.26%)</title><rect x="5.7451%" y="549" width="1.2567%" height="15" fill="rgb(231,145,46)" fg:x="32" fg:w="7"/><text x="5.9951%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 1.26%)</title><rect x="5.7451%" y="533" width="1.2567%" height="15" fill="rgb(251,118,11)" fg:x="32" fg:w="7"/><text x="5.9951%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;image::color::Rgb&lt;u8&gt;&gt;]&gt; (7 samples, 1.26%)</title><rect x="5.7451%" y="517" width="1.2567%" height="15" fill="rgb(217,147,25)" fg:x="32" fg:w="7"/><text x="5.9951%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;image::color::Rgb&lt;u8&gt;&gt;&gt; (7 samples, 1.26%)</title><rect x="5.7451%" y="501" width="1.2567%" height="15" fill="rgb(247,81,37)" fg:x="32" fg:w="7"/><text x="5.9951%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;image::color::Rgb&lt;u8&gt;&gt;&gt; (7 samples, 1.26%)</title><rect x="5.7451%" y="485" width="1.2567%" height="15" fill="rgb(209,12,38)" fg:x="32" fg:w="7"/><text x="5.9951%" y="495.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 1.26%)</title><rect x="5.7451%" y="469" width="1.2567%" height="15" fill="rgb(227,1,9)" fg:x="32" fg:w="7"/><text x="5.9951%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (7 samples, 1.26%)</title><rect x="5.7451%" y="453" width="1.2567%" height="15" fill="rgb(248,47,43)" fg:x="32" fg:w="7"/><text x="5.9951%" y="463.50"></text></g><g><title>alloc::alloc::dealloc (7 samples, 1.26%)</title><rect x="5.7451%" y="437" width="1.2567%" height="15" fill="rgb(221,10,30)" fg:x="32" fg:w="7"/><text x="5.9951%" y="447.50"></text></g><g><title>cfree@GLIBC_2.2.5 (7 samples, 1.26%)</title><rect x="5.7451%" y="421" width="1.2567%" height="15" fill="rgb(210,229,1)" fg:x="32" fg:w="7"/><text x="5.9951%" y="431.50"></text></g><g><title>_int_free (7 samples, 1.26%)</title><rect x="5.7451%" y="405" width="1.2567%" height="15" fill="rgb(222,148,37)" fg:x="32" fg:w="7"/><text x="5.9951%" y="415.50"></text></g><g><title>_int_free_maybe_consolidate.part.0 (7 samples, 1.26%)</title><rect x="5.7451%" y="389" width="1.2567%" height="15" fill="rgb(234,67,33)" fg:x="32" fg:w="7"/><text x="5.9951%" y="399.50"></text></g><g><title>malloc_consolidate (7 samples, 1.26%)</title><rect x="5.7451%" y="373" width="1.2567%" height="15" fill="rgb(247,98,35)" fg:x="32" fg:w="7"/><text x="5.9951%" y="383.50"></text></g><g><title>unlink_chunk.isra.0 (3 samples, 0.54%)</title><rect x="6.4632%" y="357" width="0.5386%" height="15" fill="rgb(247,138,52)" fg:x="36" fg:w="3"/><text x="6.7132%" y="367.50"></text></g><g><title>cfree@GLIBC_2.2.5 (3 samples, 0.54%)</title><rect x="7.0018%" y="453" width="0.5386%" height="15" fill="rgb(213,79,30)" fg:x="39" fg:w="3"/><text x="7.2518%" y="463.50"></text></g><g><title>_int_free (2 samples, 0.36%)</title><rect x="7.1813%" y="437" width="0.3591%" height="15" fill="rgb(246,177,23)" fg:x="40" fg:w="2"/><text x="7.4313%" y="447.50"></text></g><g><title>_int_free_merge_chunk (1 samples, 0.18%)</title><rect x="7.3609%" y="421" width="0.1795%" height="15" fill="rgb(230,62,27)" fg:x="41" fg:w="1"/><text x="7.6109%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::TaskIdGuard&gt; (2 samples, 0.36%)</title><rect x="8.4381%" y="309" width="0.3591%" height="15" fill="rgb(216,154,8)" fg:x="47" fg:w="2"/><text x="8.6881%" y="319.50"></text></g><g><title>&lt;tokio::runtime::task::core::TaskIdGuard as core::ops::drop::Drop&gt;::drop (2 samples, 0.36%)</title><rect x="8.4381%" y="293" width="0.3591%" height="15" fill="rgb(244,35,45)" fg:x="47" fg:w="2"/><text x="8.6881%" y="303.50"></text></g><g><title>&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 1.97%)</title><rect x="7.0018%" y="549" width="1.9749%" height="15" fill="rgb(251,115,12)" fg:x="39" fg:w="11"/><text x="7.2518%" y="559.50">&lt;..</text></g><g><title>futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt;::release_task (11 samples, 1.97%)</title><rect x="7.0018%" y="533" width="1.9749%" height="15" fill="rgb(240,54,50)" fg:x="39" fg:w="11"/><text x="7.2518%" y="543.50">f..</text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;futures_util::stream::futures_ordered::OrderWrapper&lt;tokio::runtime::task::join::JoinHandle&lt;()&gt;&gt;&gt;&gt; (11 samples, 1.97%)</title><rect x="7.0018%" y="517" width="1.9749%" height="15" fill="rgb(233,84,52)" fg:x="39" fg:w="11"/><text x="7.2518%" y="527.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;futures_util::stream::futures_ordered::OrderWrapper&lt;tokio::runtime::task::join::JoinHandle&lt;()&gt;&gt;&gt; (11 samples, 1.97%)</title><rect x="7.0018%" y="501" width="1.9749%" height="15" fill="rgb(207,117,47)" fg:x="39" fg:w="11"/><text x="7.2518%" y="511.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::join::JoinHandle&lt;()&gt;&gt; (11 samples, 1.97%)</title><rect x="7.0018%" y="485" width="1.9749%" height="15" fill="rgb(249,43,39)" fg:x="39" fg:w="11"/><text x="7.2518%" y="495.50">c..</text></g><g><title>&lt;tokio::runtime::task::join::JoinHandle&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 1.97%)</title><rect x="7.0018%" y="469" width="1.9749%" height="15" fill="rgb(209,38,44)" fg:x="39" fg:w="11"/><text x="7.2518%" y="479.50">&lt;..</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::drop_join_handle_slow (8 samples, 1.44%)</title><rect x="7.5404%" y="453" width="1.4363%" height="15" fill="rgb(236,212,23)" fg:x="42" fg:w="8"/><text x="7.7904%" y="463.50"></text></g><g><title>std::panic::catch_unwind (8 samples, 1.44%)</title><rect x="7.5404%" y="437" width="1.4363%" height="15" fill="rgb(242,79,21)" fg:x="42" fg:w="8"/><text x="7.7904%" y="447.50"></text></g><g><title>std::panicking::try (8 samples, 1.44%)</title><rect x="7.5404%" y="421" width="1.4363%" height="15" fill="rgb(211,96,35)" fg:x="42" fg:w="8"/><text x="7.7904%" y="431.50"></text></g><g><title>std::panicking::try::do_call (7 samples, 1.26%)</title><rect x="7.7199%" y="405" width="1.2567%" height="15" fill="rgb(253,215,40)" fg:x="43" fg:w="7"/><text x="7.9699%" y="415.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (7 samples, 1.26%)</title><rect x="7.7199%" y="389" width="1.2567%" height="15" fill="rgb(211,81,21)" fg:x="43" fg:w="7"/><text x="7.9699%" y="399.50"></text></g><g><title>core::ops::function::FnOnce::call_once (7 samples, 1.26%)</title><rect x="7.7199%" y="373" width="1.2567%" height="15" fill="rgb(208,190,38)" fg:x="43" fg:w="7"/><text x="7.9699%" y="383.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::drop_join_handle_slow::_{{closure}} (7 samples, 1.26%)</title><rect x="7.7199%" y="357" width="1.2567%" height="15" fill="rgb(235,213,38)" fg:x="43" fg:w="7"/><text x="7.9699%" y="367.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::drop_future_or_output (7 samples, 1.26%)</title><rect x="7.7199%" y="341" width="1.2567%" height="15" fill="rgb(237,122,38)" fg:x="43" fg:w="7"/><text x="7.9699%" y="351.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::set_stage (7 samples, 1.26%)</title><rect x="7.7199%" y="325" width="1.2567%" height="15" fill="rgb(244,218,35)" fg:x="43" fg:w="7"/><text x="7.9699%" y="335.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (1 samples, 0.18%)</title><rect x="8.7971%" y="309" width="0.1795%" height="15" fill="rgb(240,68,47)" fg:x="49" fg:w="1"/><text x="9.0471%" y="319.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::set_stage::_{{closure}} (1 samples, 0.18%)</title><rect x="8.7971%" y="293" width="0.1795%" height="15" fill="rgb(210,16,53)" fg:x="49" fg:w="1"/><text x="9.0471%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::Stage&lt;julia::generate_image_buffer::{{closure}}::{{closure}}&gt;&gt; (1 samples, 0.18%)</title><rect x="8.7971%" y="277" width="0.1795%" height="15" fill="rgb(235,124,12)" fg:x="49" fg:w="1"/><text x="9.0471%" y="287.50"></text></g><g><title>core::mem::drop (1 samples, 0.18%)</title><rect x="8.9767%" y="405" width="0.1795%" height="15" fill="rgb(224,169,11)" fg:x="50" fg:w="1"/><text x="9.2267%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Weak&lt;futures_util::stream::futures_unordered::task::Task&lt;futures_util::stream::futures_ordered::OrderWrapper&lt;tokio::runtime::task::join::JoinHandle&lt;()&gt;&gt;&gt;,&amp;alloc::alloc::Global&gt;&gt; (1 samples, 0.18%)</title><rect x="8.9767%" y="389" width="0.1795%" height="15" fill="rgb(250,166,2)" fg:x="50" fg:w="1"/><text x="9.2267%" y="399.50"></text></g><g><title>&lt;alloc::sync::Weak&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.18%)</title><rect x="8.9767%" y="373" width="0.1795%" height="15" fill="rgb(242,216,29)" fg:x="50" fg:w="1"/><text x="9.2267%" y="383.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (2 samples, 0.36%)</title><rect x="8.9767%" y="421" width="0.3591%" height="15" fill="rgb(230,116,27)" fg:x="50" fg:w="2"/><text x="9.2267%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;futures_util::stream::futures_unordered::task::Task&lt;futures_util::stream::futures_ordered::OrderWrapper&lt;tokio::runtime::task::join::JoinHandle&lt;()&gt;&gt;&gt;&gt; (1 samples, 0.18%)</title><rect x="9.1562%" y="405" width="0.1795%" height="15" fill="rgb(228,99,48)" fg:x="51" fg:w="1"/><text x="9.4062%" y="415.50"></text></g><g><title>&lt;futures_util::stream::futures_unordered::task::Task&lt;Fut&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.18%)</title><rect x="9.1562%" y="389" width="0.1795%" height="15" fill="rgb(253,11,6)" fg:x="51" fg:w="1"/><text x="9.4062%" y="399.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (1 samples, 0.18%)</title><rect x="9.1562%" y="373" width="0.1795%" height="15" fill="rgb(247,143,39)" fg:x="51" fg:w="1"/><text x="9.4062%" y="383.50"></text></g><g><title>core::mem::drop (4 samples, 0.72%)</title><rect x="8.9767%" y="469" width="0.7181%" height="15" fill="rgb(236,97,10)" fg:x="50" fg:w="4"/><text x="9.2267%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;futures_util::stream::futures_unordered::task::Task&lt;futures_util::stream::futures_ordered::OrderWrapper&lt;tokio::runtime::task::join::JoinHandle&lt;()&gt;&gt;&gt;&gt;&gt; (4 samples, 0.72%)</title><rect x="8.9767%" y="453" width="0.7181%" height="15" fill="rgb(233,208,19)" fg:x="50" fg:w="4"/><text x="9.2267%" y="463.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.72%)</title><rect x="8.9767%" y="437" width="0.7181%" height="15" fill="rgb(216,164,2)" fg:x="50" fg:w="4"/><text x="9.2267%" y="447.50"></text></g><g><title>cfree@GLIBC_2.2.5 (2 samples, 0.36%)</title><rect x="9.3357%" y="421" width="0.3591%" height="15" fill="rgb(220,129,5)" fg:x="52" fg:w="2"/><text x="9.5857%" y="431.50"></text></g><g><title>_int_free (1 samples, 0.18%)</title><rect x="9.5153%" y="405" width="0.1795%" height="15" fill="rgb(242,17,10)" fg:x="53" fg:w="1"/><text x="9.7653%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;futures_util::future::join_all::JoinAll&lt;tokio::runtime::task::join::JoinHandle&lt;()&gt;&gt;&gt; (16 samples, 2.87%)</title><rect x="7.0018%" y="629" width="2.8725%" height="15" fill="rgb(242,107,0)" fg:x="39" fg:w="16"/><text x="7.2518%" y="639.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;futures_util::future::join_all::JoinAllKind&lt;tokio::runtime::task::join::JoinHandle&lt;()&gt;&gt;&gt; (16 samples, 2.87%)</title><rect x="7.0018%" y="613" width="2.8725%" height="15" fill="rgb(251,28,31)" fg:x="39" fg:w="16"/><text x="7.2518%" y="623.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;futures_util::stream::stream::collect::Collect&lt;futures_util::stream::futures_ordered::FuturesOrdered&lt;tokio::runtime::task::join::JoinHandle&lt;()&gt;&gt;,alloc::vec::Vec&lt;core::result::Result&lt;(),tokio::runtime::task::error::JoinError&gt;&gt;&gt;&gt; (16 samples, 2.87%)</title><rect x="7.0018%" y="597" width="2.8725%" height="15" fill="rgb(233,223,10)" fg:x="39" fg:w="16"/><text x="7.2518%" y="607.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;futures_util::stream::futures_ordered::FuturesOrdered&lt;tokio::runtime::task::join::JoinHandle&lt;()&gt;&gt;&gt; (16 samples, 2.87%)</title><rect x="7.0018%" y="581" width="2.8725%" height="15" fill="rgb(215,21,27)" fg:x="39" fg:w="16"/><text x="7.2518%" y="591.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;futures_util::stream::futures_ordered::OrderWrapper&lt;tokio::runtime::task::join::JoinHandle&lt;()&gt;&gt;&gt;&gt; (16 samples, 2.87%)</title><rect x="7.0018%" y="565" width="2.8725%" height="15" fill="rgb(232,23,21)" fg:x="39" fg:w="16"/><text x="7.2518%" y="575.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;futures_util::stream::futures_unordered::ready_to_run_queue::ReadyToRunQueue&lt;futures_util::stream::futures_ordered::OrderWrapper&lt;tokio::runtime::task::join::JoinHandle&lt;()&gt;&gt;&gt;&gt;&gt; (5 samples, 0.90%)</title><rect x="8.9767%" y="549" width="0.8977%" height="15" fill="rgb(244,5,23)" fg:x="50" fg:w="5"/><text x="9.2267%" y="559.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.90%)</title><rect x="8.9767%" y="533" width="0.8977%" height="15" fill="rgb(226,81,46)" fg:x="50" fg:w="5"/><text x="9.2267%" y="543.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (5 samples, 0.90%)</title><rect x="8.9767%" y="517" width="0.8977%" height="15" fill="rgb(247,70,30)" fg:x="50" fg:w="5"/><text x="9.2267%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;futures_util::stream::futures_unordered::ready_to_run_queue::ReadyToRunQueue&lt;futures_util::stream::futures_ordered::OrderWrapper&lt;tokio::runtime::task::join::JoinHandle&lt;()&gt;&gt;&gt;&gt; (5 samples, 0.90%)</title><rect x="8.9767%" y="501" width="0.8977%" height="15" fill="rgb(212,68,19)" fg:x="50" fg:w="5"/><text x="9.2267%" y="511.50"></text></g><g><title>&lt;futures_util::stream::futures_unordered::ready_to_run_queue::ReadyToRunQueue&lt;Fut&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.90%)</title><rect x="8.9767%" y="485" width="0.8977%" height="15" fill="rgb(240,187,13)" fg:x="50" fg:w="5"/><text x="9.2267%" y="495.50"></text></g><g><title>futures_util::stream::futures_unordered::ready_to_run_queue::ReadyToRunQueue&lt;Fut&gt;::dequeue (1 samples, 0.18%)</title><rect x="9.6948%" y="469" width="0.1795%" height="15" fill="rgb(223,113,26)" fg:x="54" fg:w="1"/><text x="9.9448%" y="479.50"></text></g><g><title>futures_util::stream::futures_unordered::ready_to_run_queue::ReadyToRunQueue&lt;Fut&gt;::stub (1 samples, 0.18%)</title><rect x="9.6948%" y="453" width="0.1795%" height="15" fill="rgb(206,192,2)" fg:x="54" fg:w="1"/><text x="9.9448%" y="463.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::as_ptr (1 samples, 0.18%)</title><rect x="9.6948%" y="437" width="0.1795%" height="15" fill="rgb(241,108,4)" fg:x="54" fg:w="1"/><text x="9.9448%" y="447.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (8 samples, 1.44%)</title><rect x="10.2334%" y="517" width="1.4363%" height="15" fill="rgb(247,173,49)" fg:x="57" fg:w="8"/><text x="10.4834%" y="527.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (6 samples, 1.08%)</title><rect x="10.5925%" y="501" width="1.0772%" height="15" fill="rgb(224,114,35)" fg:x="59" fg:w="6"/><text x="10.8425%" y="511.50"></text></g><g><title>alloc::alloc::exchange_malloc (6 samples, 1.08%)</title><rect x="10.5925%" y="485" width="1.0772%" height="15" fill="rgb(245,159,27)" fg:x="59" fg:w="6"/><text x="10.8425%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6 samples, 1.08%)</title><rect x="10.5925%" y="469" width="1.0772%" height="15" fill="rgb(245,172,44)" fg:x="59" fg:w="6"/><text x="10.8425%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6 samples, 1.08%)</title><rect x="10.5925%" y="453" width="1.0772%" height="15" fill="rgb(236,23,11)" fg:x="59" fg:w="6"/><text x="10.8425%" y="463.50"></text></g><g><title>alloc::alloc::alloc (6 samples, 1.08%)</title><rect x="10.5925%" y="437" width="1.0772%" height="15" fill="rgb(205,117,38)" fg:x="59" fg:w="6"/><text x="10.8425%" y="447.50"></text></g><g><title>malloc (6 samples, 1.08%)</title><rect x="10.5925%" y="421" width="1.0772%" height="15" fill="rgb(237,72,25)" fg:x="59" fg:w="6"/><text x="10.8425%" y="431.50"></text></g><g><title>_int_malloc (3 samples, 0.54%)</title><rect x="11.1311%" y="405" width="0.5386%" height="15" fill="rgb(244,70,9)" fg:x="62" fg:w="3"/><text x="11.3811%" y="415.50"></text></g><g><title>unlink_chunk.isra.0 (2 samples, 0.36%)</title><rect x="11.3106%" y="389" width="0.3591%" height="15" fill="rgb(217,125,39)" fg:x="63" fg:w="2"/><text x="11.5606%" y="399.50"></text></g><g><title>futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt;::link (1 samples, 0.18%)</title><rect x="11.6697%" y="517" width="0.1795%" height="15" fill="rgb(235,36,10)" fg:x="65" fg:w="1"/><text x="11.9197%" y="527.50"></text></g><g><title>futures_util::future::join_all::join_all (12 samples, 2.15%)</title><rect x="9.8743%" y="629" width="2.1544%" height="15" fill="rgb(251,123,47)" fg:x="55" fg:w="12"/><text x="10.1243%" y="639.50">f..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (12 samples, 2.15%)</title><rect x="9.8743%" y="613" width="2.1544%" height="15" fill="rgb(221,13,13)" fg:x="55" fg:w="12"/><text x="10.1243%" y="623.50">c..</text></g><g><title>&lt;futures_util::stream::futures_ordered::FuturesOrdered&lt;Fut&gt; as core::iter::traits::collect::FromIterator&lt;Fut&gt;&gt;::from_iter (12 samples, 2.15%)</title><rect x="9.8743%" y="597" width="2.1544%" height="15" fill="rgb(238,131,9)" fg:x="55" fg:w="12"/><text x="10.1243%" y="607.50">&lt;..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (12 samples, 2.15%)</title><rect x="9.8743%" y="581" width="2.1544%" height="15" fill="rgb(211,50,8)" fg:x="55" fg:w="12"/><text x="10.1243%" y="591.50">c..</text></g><g><title>&lt;futures_util::stream::futures_ordered::FuturesOrdered&lt;Fut&gt; as core::iter::traits::collect::FromIterator&lt;Fut&gt;&gt;::from_iter::_{{closure}} (11 samples, 1.97%)</title><rect x="10.0539%" y="565" width="1.9749%" height="15" fill="rgb(245,182,24)" fg:x="56" fg:w="11"/><text x="10.3039%" y="575.50">&lt;..</text></g><g><title>futures_util::stream::futures_ordered::FuturesOrdered&lt;Fut&gt;::push_back (11 samples, 1.97%)</title><rect x="10.0539%" y="549" width="1.9749%" height="15" fill="rgb(242,14,37)" fg:x="56" fg:w="11"/><text x="10.3039%" y="559.50">f..</text></g><g><title>futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt;::push (11 samples, 1.97%)</title><rect x="10.0539%" y="533" width="1.9749%" height="15" fill="rgb(246,228,12)" fg:x="56" fg:w="11"/><text x="10.3039%" y="543.50">f..</text></g><g><title>futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt;::pending_next_all (1 samples, 0.18%)</title><rect x="11.8492%" y="517" width="0.1795%" height="15" fill="rgb(213,55,15)" fg:x="66" fg:w="1"/><text x="12.0992%" y="527.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::as_ptr (1 samples, 0.18%)</title><rect x="11.8492%" y="501" width="0.1795%" height="15" fill="rgb(209,9,3)" fg:x="66" fg:w="1"/><text x="12.0992%" y="511.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.36%)</title><rect x="13.2855%" y="533" width="0.3591%" height="15" fill="rgb(230,59,30)" fg:x="74" fg:w="2"/><text x="13.5355%" y="543.50"></text></g><g><title>tokio::runtime::context::CONTEXT::__getit (1 samples, 0.18%)</title><rect x="14.1831%" y="453" width="0.1795%" height="15" fill="rgb(209,121,21)" fg:x="79" fg:w="1"/><text x="14.4331%" y="463.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (1 samples, 0.18%)</title><rect x="14.1831%" y="437" width="0.1795%" height="15" fill="rgb(220,109,13)" fg:x="79" fg:w="1"/><text x="14.4331%" y="447.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (2 samples, 0.36%)</title><rect x="14.3627%" y="437" width="0.3591%" height="15" fill="rgb(232,18,1)" fg:x="80" fg:w="2"/><text x="14.6127%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;tokio::runtime::scheduler::multi_thread::worker::Synced&gt;&gt; (2 samples, 0.36%)</title><rect x="15.2603%" y="373" width="0.3591%" height="15" fill="rgb(215,41,42)" fg:x="85" fg:w="2"/><text x="15.5103%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::scheduler::multi_thread::worker::Synced&gt;&gt; (2 samples, 0.36%)</title><rect x="15.2603%" y="357" width="0.3591%" height="15" fill="rgb(224,123,36)" fg:x="85" fg:w="2"/><text x="15.5103%" y="367.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.36%)</title><rect x="15.2603%" y="341" width="0.3591%" height="15" fill="rgb(240,125,3)" fg:x="85" fg:w="2"/><text x="15.5103%" y="351.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (2 samples, 0.36%)</title><rect x="15.2603%" y="325" width="0.3591%" height="15" fill="rgb(205,98,50)" fg:x="85" fg:w="2"/><text x="15.5103%" y="335.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_ok (2 samples, 0.36%)</title><rect x="15.2603%" y="309" width="0.3591%" height="15" fill="rgb(205,185,37)" fg:x="85" fg:w="2"/><text x="15.5103%" y="319.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_err (12 samples, 2.15%)</title><rect x="15.7989%" y="325" width="2.1544%" height="15" fill="rgb(238,207,15)" fg:x="88" fg:w="12"/><text x="16.0489%" y="335.50">c..</text></g><g><title>core::result::Result&lt;T,E&gt;::is_ok (12 samples, 2.15%)</title><rect x="15.7989%" y="309" width="2.1544%" height="15" fill="rgb(213,199,42)" fg:x="88" fg:w="12"/><text x="16.0489%" y="319.50">c..</text></g><g><title>core::sync::atomic::AtomicU8::load (1 samples, 0.18%)</title><rect x="18.1329%" y="309" width="0.1795%" height="15" fill="rgb(235,201,11)" fg:x="101" fg:w="1"/><text x="18.3829%" y="319.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.18%)</title><rect x="18.1329%" y="293" width="0.1795%" height="15" fill="rgb(207,46,11)" fg:x="101" fg:w="1"/><text x="18.3829%" y="303.50"></text></g><g><title>core::hint::spin_loop (1 samples, 0.18%)</title><rect x="18.3124%" y="277" width="0.1795%" height="15" fill="rgb(241,35,35)" fg:x="102" fg:w="1"/><text x="18.5624%" y="287.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (1 samples, 0.18%)</title><rect x="18.3124%" y="261" width="0.1795%" height="15" fill="rgb(243,32,47)" fg:x="102" fg:w="1"/><text x="18.5624%" y="271.50"></text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::with (22 samples, 3.95%)</title><rect x="14.7217%" y="437" width="3.9497%" height="15" fill="rgb(247,202,23)" fg:x="82" fg:w="22"/><text x="14.9717%" y="447.50">toki..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::with_current::_{{closure}} (20 samples, 3.59%)</title><rect x="15.0808%" y="421" width="3.5907%" height="15" fill="rgb(219,102,11)" fg:x="84" fg:w="20"/><text x="15.3308%" y="431.50">toki..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::_&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task::_{{closure}} (20 samples, 3.59%)</title><rect x="15.0808%" y="405" width="3.5907%" height="15" fill="rgb(243,110,44)" fg:x="84" fg:w="20"/><text x="15.3308%" y="415.50">toki..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::push_remote_task (19 samples, 3.41%)</title><rect x="15.2603%" y="389" width="3.4111%" height="15" fill="rgb(222,74,54)" fg:x="85" fg:w="19"/><text x="15.5103%" y="399.50">tok..</text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (17 samples, 3.05%)</title><rect x="15.6194%" y="373" width="3.0521%" height="15" fill="rgb(216,99,12)" fg:x="87" fg:w="17"/><text x="15.8694%" y="383.50">tok..</text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (17 samples, 3.05%)</title><rect x="15.6194%" y="357" width="3.0521%" height="15" fill="rgb(226,22,26)" fg:x="87" fg:w="17"/><text x="15.8694%" y="367.50">loc..</text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (17 samples, 3.05%)</title><rect x="15.6194%" y="341" width="3.0521%" height="15" fill="rgb(217,163,10)" fg:x="87" fg:w="17"/><text x="15.8694%" y="351.50">&lt;pa..</text></g><g><title>parking_lot::raw_mutex::RawMutex::lock_slow (4 samples, 0.72%)</title><rect x="17.9533%" y="325" width="0.7181%" height="15" fill="rgb(213,25,53)" fg:x="100" fg:w="4"/><text x="18.2033%" y="335.50"></text></g><g><title>parking_lot_core::spinwait::SpinWait::spin (2 samples, 0.36%)</title><rect x="18.3124%" y="309" width="0.3591%" height="15" fill="rgb(252,105,26)" fg:x="102" fg:w="2"/><text x="18.5624%" y="319.50"></text></g><g><title>parking_lot_core::spinwait::cpu_relax (2 samples, 0.36%)</title><rect x="18.3124%" y="293" width="0.3591%" height="15" fill="rgb(220,39,43)" fg:x="102" fg:w="2"/><text x="18.5624%" y="303.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.18%)</title><rect x="18.4919%" y="277" width="0.1795%" height="15" fill="rgb(229,68,48)" fg:x="103" fg:w="1"/><text x="18.7419%" y="287.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.18%)</title><rect x="18.4919%" y="261" width="0.1795%" height="15" fill="rgb(252,8,32)" fg:x="103" fg:w="1"/><text x="18.7419%" y="271.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_option_task_without_yield (36 samples, 6.46%)</title><rect x="13.6445%" y="533" width="6.4632%" height="15" fill="rgb(223,20,43)" fg:x="76" fg:w="36"/><text x="13.8945%" y="543.50">tokio::r..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task (35 samples, 6.28%)</title><rect x="13.8241%" y="517" width="6.2837%" height="15" fill="rgb(229,81,49)" fg:x="77" fg:w="35"/><text x="14.0741%" y="527.50">tokio::r..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::with_current (35 samples, 6.28%)</title><rect x="13.8241%" y="501" width="6.2837%" height="15" fill="rgb(236,28,36)" fg:x="77" fg:w="35"/><text x="14.0741%" y="511.50">tokio::r..</text></g><g><title>tokio::runtime::context::with_scheduler (35 samples, 6.28%)</title><rect x="13.8241%" y="485" width="6.2837%" height="15" fill="rgb(249,185,26)" fg:x="77" fg:w="35"/><text x="14.0741%" y="495.50">tokio::r..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (33 samples, 5.92%)</title><rect x="14.1831%" y="469" width="5.9246%" height="15" fill="rgb(249,174,33)" fg:x="79" fg:w="33"/><text x="14.4331%" y="479.50">std::thr..</text></g><g><title>tokio::runtime::context::with_scheduler::_{{closure}} (32 samples, 5.75%)</title><rect x="14.3627%" y="453" width="5.7451%" height="15" fill="rgb(233,201,37)" fg:x="80" fg:w="32"/><text x="14.6127%" y="463.50">tokio::..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::notify_parked_remote (8 samples, 1.44%)</title><rect x="18.6715%" y="437" width="1.4363%" height="15" fill="rgb(221,78,26)" fg:x="104" fg:w="8"/><text x="18.9215%" y="447.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::worker_to_notify (8 samples, 1.44%)</title><rect x="18.6715%" y="421" width="1.4363%" height="15" fill="rgb(250,127,30)" fg:x="104" fg:w="8"/><text x="18.9215%" y="431.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::notify_should_wakeup (8 samples, 1.44%)</title><rect x="18.6715%" y="405" width="1.4363%" height="15" fill="rgb(230,49,44)" fg:x="104" fg:w="8"/><text x="18.9215%" y="415.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (5 samples, 0.90%)</title><rect x="19.2101%" y="389" width="0.8977%" height="15" fill="rgb(229,67,23)" fg:x="107" fg:w="5"/><text x="19.4601%" y="399.50"></text></g><g><title>core::sync::atomic::atomic_add (5 samples, 0.90%)</title><rect x="19.2101%" y="373" width="0.8977%" height="15" fill="rgb(249,83,47)" fg:x="107" fg:w="5"/><text x="19.4601%" y="383.50"></text></g><g><title>tokio::runtime::task::core::Header::set_owner_id (5 samples, 0.90%)</title><rect x="20.2873%" y="501" width="0.8977%" height="15" fill="rgb(215,43,3)" fg:x="113" fg:w="5"/><text x="20.5373%" y="511.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (5 samples, 0.90%)</title><rect x="20.2873%" y="485" width="0.8977%" height="15" fill="rgb(238,154,13)" fg:x="113" fg:w="5"/><text x="20.5373%" y="495.50"></text></g><g><title>tokio::runtime::task::core::Header::set_owner_id::_{{closure}} (5 samples, 0.90%)</title><rect x="20.2873%" y="469" width="0.8977%" height="15" fill="rgb(219,56,2)" fg:x="113" fg:w="5"/><text x="20.5373%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::util::sharded_list::ShardGuard&lt;tokio::runtime::task::Task&lt;alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;,tokio::runtime::task::core::Header&gt;&gt; (5 samples, 0.90%)</title><rect x="21.1849%" y="485" width="0.8977%" height="15" fill="rgb(233,0,4)" fg:x="118" fg:w="5"/><text x="21.4349%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;tokio::util::linked_list::LinkedList&lt;tokio::runtime::task::Task&lt;alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;,tokio::runtime::task::core::Header&gt;&gt;&gt; (5 samples, 0.90%)</title><rect x="21.1849%" y="469" width="0.8977%" height="15" fill="rgb(235,30,7)" fg:x="118" fg:w="5"/><text x="21.4349%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::util::linked_list::LinkedList&lt;tokio::runtime::task::Task&lt;alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;,tokio::runtime::task::core::Header&gt;&gt;&gt; (5 samples, 0.90%)</title><rect x="21.1849%" y="453" width="0.8977%" height="15" fill="rgb(250,79,13)" fg:x="118" fg:w="5"/><text x="21.4349%" y="463.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.90%)</title><rect x="21.1849%" y="437" width="0.8977%" height="15" fill="rgb(211,146,34)" fg:x="118" fg:w="5"/><text x="21.4349%" y="447.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (5 samples, 0.90%)</title><rect x="21.1849%" y="421" width="0.8977%" height="15" fill="rgb(228,22,38)" fg:x="118" fg:w="5"/><text x="21.4349%" y="431.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_ok (5 samples, 0.90%)</title><rect x="21.1849%" y="405" width="0.8977%" height="15" fill="rgb(235,168,5)" fg:x="118" fg:w="5"/><text x="21.4349%" y="415.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (4 samples, 0.72%)</title><rect x="22.0826%" y="485" width="0.7181%" height="15" fill="rgb(221,155,16)" fg:x="123" fg:w="4"/><text x="22.3326%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_add (4 samples, 0.72%)</title><rect x="22.0826%" y="469" width="0.7181%" height="15" fill="rgb(215,215,53)" fg:x="123" fg:w="4"/><text x="22.3326%" y="479.50"></text></g><g><title>tokio::util::sharded_list::ShardGuard&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::push (12 samples, 2.15%)</title><rect x="21.1849%" y="501" width="2.1544%" height="15" fill="rgb(223,4,10)" fg:x="118" fg:w="12"/><text x="21.4349%" y="511.50">t..</text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::push_front (3 samples, 0.54%)</title><rect x="22.8007%" y="485" width="0.5386%" height="15" fill="rgb(234,103,6)" fg:x="127" fg:w="3"/><text x="23.0507%" y="495.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_none (1 samples, 0.18%)</title><rect x="23.1598%" y="469" width="0.1795%" height="15" fill="rgb(227,97,0)" fg:x="129" fg:w="1"/><text x="23.4098%" y="479.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (1 samples, 0.18%)</title><rect x="23.1598%" y="453" width="0.1795%" height="15" fill="rgb(234,150,53)" fg:x="129" fg:w="1"/><text x="23.4098%" y="463.50"></text></g><g><title>&lt;tokio::runtime::task::Task&lt;S&gt; as tokio::util::sharded_list::ShardedListItem&gt;::get_shard_id (3 samples, 0.54%)</title><rect x="23.3393%" y="485" width="0.5386%" height="15" fill="rgb(228,201,54)" fg:x="130" fg:w="3"/><text x="23.5893%" y="495.50"></text></g><g><title>tokio::runtime::task::core::Header::get_id (3 samples, 0.54%)</title><rect x="23.3393%" y="469" width="0.5386%" height="15" fill="rgb(222,22,37)" fg:x="130" fg:w="3"/><text x="23.5893%" y="479.50"></text></g><g><title>tokio::runtime::task::core::Header::get_id_ptr (2 samples, 0.36%)</title><rect x="23.5189%" y="453" width="0.3591%" height="15" fill="rgb(237,53,32)" fg:x="131" fg:w="2"/><text x="23.7689%" y="463.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (1 samples, 0.18%)</title><rect x="24.0575%" y="469" width="0.1795%" height="15" fill="rgb(233,25,53)" fg:x="134" fg:w="1"/><text x="24.3075%" y="479.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1 samples, 0.18%)</title><rect x="24.0575%" y="453" width="0.1795%" height="15" fill="rgb(210,40,34)" fg:x="134" fg:w="1"/><text x="24.3075%" y="463.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.18%)</title><rect x="24.0575%" y="437" width="0.1795%" height="15" fill="rgb(241,220,44)" fg:x="134" fg:w="1"/><text x="24.3075%" y="447.50"></text></g><g><title>tokio::runtime::task::list::OwnedTasks&lt;S&gt;::bind_inner (26 samples, 4.67%)</title><rect x="20.1077%" y="517" width="4.6679%" height="15" fill="rgb(235,28,35)" fg:x="112" fg:w="26"/><text x="20.3577%" y="527.50">tokio..</text></g><g><title>tokio::util::sharded_list::ShardedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::lock_shard (8 samples, 1.44%)</title><rect x="23.3393%" y="501" width="1.4363%" height="15" fill="rgb(210,56,17)" fg:x="130" fg:w="8"/><text x="23.5893%" y="511.50"></text></g><g><title>tokio::util::sharded_list::ShardedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::shard_inner (5 samples, 0.90%)</title><rect x="23.8779%" y="485" width="0.8977%" height="15" fill="rgb(224,130,29)" fg:x="133" fg:w="5"/><text x="24.1279%" y="495.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (3 samples, 0.54%)</title><rect x="24.2370%" y="469" width="0.5386%" height="15" fill="rgb(235,212,8)" fg:x="135" fg:w="3"/><text x="24.4870%" y="479.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (3 samples, 0.54%)</title><rect x="24.2370%" y="453" width="0.5386%" height="15" fill="rgb(223,33,50)" fg:x="135" fg:w="3"/><text x="24.4870%" y="463.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (3 samples, 0.54%)</title><rect x="24.2370%" y="437" width="0.5386%" height="15" fill="rgb(219,149,13)" fg:x="135" fg:w="3"/><text x="24.4870%" y="447.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_err (3 samples, 0.54%)</title><rect x="24.2370%" y="421" width="0.5386%" height="15" fill="rgb(250,156,29)" fg:x="135" fg:w="3"/><text x="24.4870%" y="431.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_ok (3 samples, 0.54%)</title><rect x="24.2370%" y="405" width="0.5386%" height="15" fill="rgb(216,193,19)" fg:x="135" fg:w="3"/><text x="24.4870%" y="415.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.18%)</title><rect x="24.9551%" y="453" width="0.1795%" height="15" fill="rgb(216,135,14)" fg:x="139" fg:w="1"/><text x="25.2051%" y="463.50"></text></g><g><title>_int_free_merge_chunk (2 samples, 0.36%)</title><rect x="26.0323%" y="293" width="0.3591%" height="15" fill="rgb(241,47,5)" fg:x="145" fg:w="2"/><text x="26.2823%" y="303.50"></text></g><g><title>[unknown] (14 samples, 2.51%)</title><rect x="27.2890%" y="277" width="2.5135%" height="15" fill="rgb(233,42,35)" fg:x="152" fg:w="14"/><text x="27.5390%" y="287.50">[u..</text></g><g><title>[unknown] (11 samples, 1.97%)</title><rect x="27.8276%" y="261" width="1.9749%" height="15" fill="rgb(231,13,6)" fg:x="155" fg:w="11"/><text x="28.0776%" y="271.50">[..</text></g><g><title>[unknown] (8 samples, 1.44%)</title><rect x="28.3662%" y="245" width="1.4363%" height="15" fill="rgb(207,181,40)" fg:x="158" fg:w="8"/><text x="28.6162%" y="255.50"></text></g><g><title>[unknown] (5 samples, 0.90%)</title><rect x="28.9048%" y="229" width="0.8977%" height="15" fill="rgb(254,173,49)" fg:x="161" fg:w="5"/><text x="29.1548%" y="239.50"></text></g><g><title>[unknown] (3 samples, 0.54%)</title><rect x="29.2639%" y="213" width="0.5386%" height="15" fill="rgb(221,1,38)" fg:x="163" fg:w="3"/><text x="29.5139%" y="223.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="29.8025%" y="261" width="0.1795%" height="15" fill="rgb(206,124,46)" fg:x="166" fg:w="1"/><text x="30.0525%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="29.8025%" y="245" width="0.1795%" height="15" fill="rgb(249,21,11)" fg:x="166" fg:w="1"/><text x="30.0525%" y="255.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="29.8025%" y="229" width="0.1795%" height="15" fill="rgb(222,201,40)" fg:x="166" fg:w="1"/><text x="30.0525%" y="239.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="29.8025%" y="213" width="0.1795%" height="15" fill="rgb(235,61,29)" fg:x="166" fg:w="1"/><text x="30.0525%" y="223.50"></text></g><g><title>__posix_memalign (28 samples, 5.03%)</title><rect x="25.1346%" y="341" width="5.0269%" height="15" fill="rgb(219,207,3)" fg:x="140" fg:w="28"/><text x="25.3846%" y="351.50">__posi..</text></g><g><title>_mid_memalign.isra.0 (28 samples, 5.03%)</title><rect x="25.1346%" y="325" width="5.0269%" height="15" fill="rgb(222,56,46)" fg:x="140" fg:w="28"/><text x="25.3846%" y="335.50">_mid_m..</text></g><g><title>_int_memalign (25 samples, 4.49%)</title><rect x="25.6732%" y="309" width="4.4883%" height="15" fill="rgb(239,76,54)" fg:x="143" fg:w="25"/><text x="25.9232%" y="319.50">_int_..</text></g><g><title>_int_malloc (21 samples, 3.77%)</title><rect x="26.3914%" y="293" width="3.7702%" height="15" fill="rgb(231,124,27)" fg:x="147" fg:w="21"/><text x="26.6414%" y="303.50">_int..</text></g><g><title>sysmalloc (2 samples, 0.36%)</title><rect x="29.8025%" y="277" width="0.3591%" height="15" fill="rgb(249,195,6)" fg:x="166" fg:w="2"/><text x="30.0525%" y="287.50"></text></g><g><title>__default_morecore@GLIBC_2.2.5 (1 samples, 0.18%)</title><rect x="29.9820%" y="261" width="0.1795%" height="15" fill="rgb(237,174,47)" fg:x="167" fg:w="1"/><text x="30.2320%" y="271.50"></text></g><g><title>__sbrk (1 samples, 0.18%)</title><rect x="29.9820%" y="245" width="0.1795%" height="15" fill="rgb(206,201,31)" fg:x="167" fg:w="1"/><text x="30.2320%" y="255.50"></text></g><g><title>__brk (1 samples, 0.18%)</title><rect x="29.9820%" y="229" width="0.1795%" height="15" fill="rgb(231,57,52)" fg:x="167" fg:w="1"/><text x="30.2320%" y="239.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="29.9820%" y="213" width="0.1795%" height="15" fill="rgb(248,177,22)" fg:x="167" fg:w="1"/><text x="30.2320%" y="223.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="29.9820%" y="197" width="0.1795%" height="15" fill="rgb(215,211,37)" fg:x="167" fg:w="1"/><text x="30.2320%" y="207.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="29.9820%" y="181" width="0.1795%" height="15" fill="rgb(241,128,51)" fg:x="167" fg:w="1"/><text x="30.2320%" y="191.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="29.9820%" y="165" width="0.1795%" height="15" fill="rgb(227,165,31)" fg:x="167" fg:w="1"/><text x="30.2320%" y="175.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="29.9820%" y="149" width="0.1795%" height="15" fill="rgb(228,167,24)" fg:x="167" fg:w="1"/><text x="30.2320%" y="159.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="29.9820%" y="133" width="0.1795%" height="15" fill="rgb(228,143,12)" fg:x="167" fg:w="1"/><text x="30.2320%" y="143.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="29.9820%" y="117" width="0.1795%" height="15" fill="rgb(249,149,8)" fg:x="167" fg:w="1"/><text x="30.2320%" y="127.50"></text></g><g><title>tokio::runtime::scheduler::Handle::spawn (96 samples, 17.24%)</title><rect x="13.1059%" y="581" width="17.2352%" height="15" fill="rgb(243,35,44)" fg:x="73" fg:w="96"/><text x="13.3559%" y="591.50">tokio::runtime::scheduler::..</text></g><g><title>tokio::runtime::scheduler::multi_thread::handle::Handle::spawn (96 samples, 17.24%)</title><rect x="13.1059%" y="565" width="17.2352%" height="15" fill="rgb(246,89,9)" fg:x="73" fg:w="96"/><text x="13.3559%" y="575.50">tokio::runtime::scheduler::..</text></g><g><title>tokio::runtime::scheduler::multi_thread::handle::Handle::bind_new_task (96 samples, 17.24%)</title><rect x="13.1059%" y="549" width="17.2352%" height="15" fill="rgb(233,213,13)" fg:x="73" fg:w="96"/><text x="13.3559%" y="559.50">tokio::runtime::scheduler::..</text></g><g><title>tokio::runtime::task::list::OwnedTasks&lt;S&gt;::bind (57 samples, 10.23%)</title><rect x="20.1077%" y="533" width="10.2334%" height="15" fill="rgb(233,141,41)" fg:x="112" fg:w="57"/><text x="20.3577%" y="543.50">tokio::runtime:..</text></g><g><title>tokio::runtime::task::new_task (31 samples, 5.57%)</title><rect x="24.7756%" y="517" width="5.5655%" height="15" fill="rgb(239,167,4)" fg:x="138" fg:w="31"/><text x="25.0256%" y="527.50">tokio::..</text></g><g><title>tokio::runtime::task::raw::RawTask::new (31 samples, 5.57%)</title><rect x="24.7756%" y="501" width="5.5655%" height="15" fill="rgb(209,217,16)" fg:x="138" fg:w="31"/><text x="25.0256%" y="511.50">tokio::..</text></g><g><title>tokio::runtime::task::core::Cell&lt;T,S&gt;::new (31 samples, 5.57%)</title><rect x="24.7756%" y="485" width="5.5655%" height="15" fill="rgb(219,88,35)" fg:x="138" fg:w="31"/><text x="25.0256%" y="495.50">tokio::..</text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (30 samples, 5.39%)</title><rect x="24.9551%" y="469" width="5.3860%" height="15" fill="rgb(220,193,23)" fg:x="139" fg:w="30"/><text x="25.2051%" y="479.50">alloc::..</text></g><g><title>alloc::alloc::exchange_malloc (29 samples, 5.21%)</title><rect x="25.1346%" y="453" width="5.2065%" height="15" fill="rgb(230,90,52)" fg:x="140" fg:w="29"/><text x="25.3846%" y="463.50">alloc:..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (29 samples, 5.21%)</title><rect x="25.1346%" y="437" width="5.2065%" height="15" fill="rgb(252,106,19)" fg:x="140" fg:w="29"/><text x="25.3846%" y="447.50">&lt;alloc..</text></g><g><title>alloc::alloc::Global::alloc_impl (29 samples, 5.21%)</title><rect x="25.1346%" y="421" width="5.2065%" height="15" fill="rgb(206,74,20)" fg:x="140" fg:w="29"/><text x="25.3846%" y="431.50">alloc:..</text></g><g><title>alloc::alloc::alloc (29 samples, 5.21%)</title><rect x="25.1346%" y="405" width="5.2065%" height="15" fill="rgb(230,138,44)" fg:x="140" fg:w="29"/><text x="25.3846%" y="415.50">alloc:..</text></g><g><title>__rdl_alloc (29 samples, 5.21%)</title><rect x="25.1346%" y="389" width="5.2065%" height="15" fill="rgb(235,182,43)" fg:x="140" fg:w="29"/><text x="25.3846%" y="399.50">__rdl_..</text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (29 samples, 5.21%)</title><rect x="25.1346%" y="373" width="5.2065%" height="15" fill="rgb(242,16,51)" fg:x="140" fg:w="29"/><text x="25.3846%" y="383.50">std::s..</text></g><g><title>std::sys::pal::unix::alloc::aligned_malloc (29 samples, 5.21%)</title><rect x="25.1346%" y="357" width="5.2065%" height="15" fill="rgb(248,9,4)" fg:x="140" fg:w="29"/><text x="25.3846%" y="367.50">std::s..</text></g><g><title>core::cmp::Ord::max (1 samples, 0.18%)</title><rect x="30.1616%" y="341" width="0.1795%" height="15" fill="rgb(210,31,22)" fg:x="168" fg:w="1"/><text x="30.4116%" y="351.50"></text></g><g><title>core::cmp::max_by (1 samples, 0.18%)</title><rect x="30.1616%" y="325" width="0.1795%" height="15" fill="rgb(239,54,39)" fg:x="168" fg:w="1"/><text x="30.4116%" y="335.50"></text></g><g><title>__libc_start_main@@GLIBC_2.34 (154 samples, 27.65%)</title><rect x="2.8725%" y="1061" width="27.6481%" height="15" fill="rgb(230,99,41)" fg:x="16" fg:w="154"/><text x="3.1225%" y="1071.50">__libc_start_main@@GLIBC_2.34</text></g><g><title>__libc_start_call_main (154 samples, 27.65%)</title><rect x="2.8725%" y="1045" width="27.6481%" height="15" fill="rgb(253,106,12)" fg:x="16" fg:w="154"/><text x="3.1225%" y="1055.50">__libc_start_call_main</text></g><g><title>main (154 samples, 27.65%)</title><rect x="2.8725%" y="1029" width="27.6481%" height="15" fill="rgb(213,46,41)" fg:x="16" fg:w="154"/><text x="3.1225%" y="1039.50">main</text></g><g><title>std::rt::lang_start_internal (154 samples, 27.65%)</title><rect x="2.8725%" y="1013" width="27.6481%" height="15" fill="rgb(215,133,35)" fg:x="16" fg:w="154"/><text x="3.1225%" y="1023.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (154 samples, 27.65%)</title><rect x="2.8725%" y="997" width="27.6481%" height="15" fill="rgb(213,28,5)" fg:x="16" fg:w="154"/><text x="3.1225%" y="1007.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (154 samples, 27.65%)</title><rect x="2.8725%" y="981" width="27.6481%" height="15" fill="rgb(215,77,49)" fg:x="16" fg:w="154"/><text x="3.1225%" y="991.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (154 samples, 27.65%)</title><rect x="2.8725%" y="965" width="27.6481%" height="15" fill="rgb(248,100,22)" fg:x="16" fg:w="154"/><text x="3.1225%" y="975.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::_{{closure}} (154 samples, 27.65%)</title><rect x="2.8725%" y="949" width="27.6481%" height="15" fill="rgb(208,67,9)" fg:x="16" fg:w="154"/><text x="3.1225%" y="959.50">std::rt::lang_start_internal::_{{closure}}</text></g><g><title>std::panic::catch_unwind (154 samples, 27.65%)</title><rect x="2.8725%" y="933" width="27.6481%" height="15" fill="rgb(219,133,21)" fg:x="16" fg:w="154"/><text x="3.1225%" y="943.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (154 samples, 27.65%)</title><rect x="2.8725%" y="917" width="27.6481%" height="15" fill="rgb(246,46,29)" fg:x="16" fg:w="154"/><text x="3.1225%" y="927.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (154 samples, 27.65%)</title><rect x="2.8725%" y="901" width="27.6481%" height="15" fill="rgb(246,185,52)" fg:x="16" fg:w="154"/><text x="3.1225%" y="911.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (154 samples, 27.65%)</title><rect x="2.8725%" y="885" width="27.6481%" height="15" fill="rgb(252,136,11)" fg:x="16" fg:w="154"/><text x="3.1225%" y="895.50">core::ops::function::impls::&lt;impl core::ops:..</text></g><g><title>std::rt::lang_start::_{{closure}} (154 samples, 27.65%)</title><rect x="2.8725%" y="869" width="27.6481%" height="15" fill="rgb(219,138,53)" fg:x="16" fg:w="154"/><text x="3.1225%" y="879.50">std::rt::lang_start::_{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (154 samples, 27.65%)</title><rect x="2.8725%" y="853" width="27.6481%" height="15" fill="rgb(211,51,23)" fg:x="16" fg:w="154"/><text x="3.1225%" y="863.50">std::sys_common::backtrace::__rust_begin_sho..</text></g><g><title>core::ops::function::FnOnce::call_once (154 samples, 27.65%)</title><rect x="2.8725%" y="837" width="27.6481%" height="15" fill="rgb(247,221,28)" fg:x="16" fg:w="154"/><text x="3.1225%" y="847.50">core::ops::function::FnOnce::call_once</text></g><g><title>julia::main (154 samples, 27.65%)</title><rect x="2.8725%" y="821" width="27.6481%" height="15" fill="rgb(251,222,45)" fg:x="16" fg:w="154"/><text x="3.1225%" y="831.50">julia::main</text></g><g><title>julia::generate_image_buffer (150 samples, 26.93%)</title><rect x="3.5907%" y="805" width="26.9300%" height="15" fill="rgb(217,162,53)" fg:x="20" fg:w="150"/><text x="3.8407%" y="815.50">julia::generate_image_buffer</text></g><g><title>tokio::runtime::runtime::Runtime::block_on (150 samples, 26.93%)</title><rect x="3.5907%" y="789" width="26.9300%" height="15" fill="rgb(229,93,14)" fg:x="20" fg:w="150"/><text x="3.8407%" y="799.50">tokio::runtime::runtime::Runtime::block_on</text></g><g><title>tokio::runtime::scheduler::multi_thread::MultiThread::block_on (150 samples, 26.93%)</title><rect x="3.5907%" y="773" width="26.9300%" height="15" fill="rgb(209,67,49)" fg:x="20" fg:w="150"/><text x="3.8407%" y="783.50">tokio::runtime::scheduler::multi_thread::Mu..</text></g><g><title>tokio::runtime::context::runtime::enter_runtime (150 samples, 26.93%)</title><rect x="3.5907%" y="757" width="26.9300%" height="15" fill="rgb(213,87,29)" fg:x="20" fg:w="150"/><text x="3.8407%" y="767.50">tokio::runtime::context::runtime::enter_run..</text></g><g><title>tokio::runtime::scheduler::multi_thread::MultiThread::block_on::_{{closure}} (150 samples, 26.93%)</title><rect x="3.5907%" y="741" width="26.9300%" height="15" fill="rgb(205,151,52)" fg:x="20" fg:w="150"/><text x="3.8407%" y="751.50">tokio::runtime::scheduler::multi_thread::Mu..</text></g><g><title>tokio::runtime::context::blocking::BlockingRegionGuard::block_on (150 samples, 26.93%)</title><rect x="3.5907%" y="725" width="26.9300%" height="15" fill="rgb(253,215,39)" fg:x="20" fg:w="150"/><text x="3.8407%" y="735.50">tokio::runtime::context::blocking::Blocking..</text></g><g><title>tokio::runtime::park::CachedParkThread::block_on (150 samples, 26.93%)</title><rect x="3.5907%" y="709" width="26.9300%" height="15" fill="rgb(221,220,41)" fg:x="20" fg:w="150"/><text x="3.8407%" y="719.50">tokio::runtime::park::CachedParkThread::blo..</text></g><g><title>tokio::runtime::coop::budget (150 samples, 26.93%)</title><rect x="3.5907%" y="693" width="26.9300%" height="15" fill="rgb(218,133,21)" fg:x="20" fg:w="150"/><text x="3.8407%" y="703.50">tokio::runtime::coop::budget</text></g><g><title>tokio::runtime::coop::with_budget (150 samples, 26.93%)</title><rect x="3.5907%" y="677" width="26.9300%" height="15" fill="rgb(221,193,43)" fg:x="20" fg:w="150"/><text x="3.8407%" y="687.50">tokio::runtime::coop::with_budget</text></g><g><title>tokio::runtime::park::CachedParkThread::block_on::_{{closure}} (150 samples, 26.93%)</title><rect x="3.5907%" y="661" width="26.9300%" height="15" fill="rgb(240,128,52)" fg:x="20" fg:w="150"/><text x="3.8407%" y="671.50">tokio::runtime::park::CachedParkThread::blo..</text></g><g><title>julia::generate_image_buffer::_{{closure}} (150 samples, 26.93%)</title><rect x="3.5907%" y="645" width="26.9300%" height="15" fill="rgb(253,114,12)" fg:x="20" fg:w="150"/><text x="3.8407%" y="655.50">julia::generate_image_buffer::_{{closure}}</text></g><g><title>tokio::runtime::runtime::Runtime::spawn (103 samples, 18.49%)</title><rect x="12.0287%" y="629" width="18.4919%" height="15" fill="rgb(215,223,47)" fg:x="67" fg:w="103"/><text x="12.2787%" y="639.50">tokio::runtime::runtime::Runt..</text></g><g><title>tokio::runtime::handle::Handle::spawn (103 samples, 18.49%)</title><rect x="12.0287%" y="613" width="18.4919%" height="15" fill="rgb(248,225,23)" fg:x="67" fg:w="103"/><text x="12.2787%" y="623.50">tokio::runtime::handle::Handl..</text></g><g><title>tokio::runtime::handle::Handle::spawn_named (103 samples, 18.49%)</title><rect x="12.0287%" y="597" width="18.4919%" height="15" fill="rgb(250,108,0)" fg:x="67" fg:w="103"/><text x="12.2787%" y="607.50">tokio::runtime::handle::Handl..</text></g><g><title>tokio::runtime::task::id::Id::next (1 samples, 0.18%)</title><rect x="30.3411%" y="581" width="0.1795%" height="15" fill="rgb(228,208,7)" fg:x="169" fg:w="1"/><text x="30.5911%" y="591.50"></text></g><g><title>[unknown] (2 samples, 0.36%)</title><rect x="30.5206%" y="1045" width="0.3591%" height="15" fill="rgb(244,45,10)" fg:x="170" fg:w="2"/><text x="30.7706%" y="1055.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="30.7002%" y="1029" width="0.1795%" height="15" fill="rgb(207,125,25)" fg:x="171" fg:w="1"/><text x="30.9502%" y="1039.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="30.7002%" y="1013" width="0.1795%" height="15" fill="rgb(210,195,18)" fg:x="171" fg:w="1"/><text x="30.9502%" y="1023.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="30.7002%" y="997" width="0.1795%" height="15" fill="rgb(249,80,12)" fg:x="171" fg:w="1"/><text x="30.9502%" y="1007.50"></text></g><g><title>_dl_start_final (1 samples, 0.18%)</title><rect x="30.8797%" y="1045" width="0.1795%" height="15" fill="rgb(221,65,9)" fg:x="172" fg:w="1"/><text x="31.1297%" y="1055.50"></text></g><g><title>_dl_sysdep_start (1 samples, 0.18%)</title><rect x="30.8797%" y="1029" width="0.1795%" height="15" fill="rgb(235,49,36)" fg:x="172" fg:w="1"/><text x="31.1297%" y="1039.50"></text></g><g><title>dl_main (1 samples, 0.18%)</title><rect x="30.8797%" y="1013" width="0.1795%" height="15" fill="rgb(225,32,20)" fg:x="172" fg:w="1"/><text x="31.1297%" y="1023.50"></text></g><g><title>dl_main (1 samples, 0.18%)</title><rect x="30.8797%" y="997" width="0.1795%" height="15" fill="rgb(215,141,46)" fg:x="172" fg:w="1"/><text x="31.1297%" y="1007.50"></text></g><g><title>_dl_init_paths (1 samples, 0.18%)</title><rect x="30.8797%" y="981" width="0.1795%" height="15" fill="rgb(250,160,47)" fg:x="172" fg:w="1"/><text x="31.1297%" y="991.50"></text></g><g><title>_dl_important_hwcaps (1 samples, 0.18%)</title><rect x="30.8797%" y="965" width="0.1795%" height="15" fill="rgb(216,222,40)" fg:x="172" fg:w="1"/><text x="31.1297%" y="975.50"></text></g><g><title>_dl_hwcaps_subdirs_active (1 samples, 0.18%)</title><rect x="30.8797%" y="949" width="0.1795%" height="15" fill="rgb(234,217,39)" fg:x="172" fg:w="1"/><text x="31.1297%" y="959.50"></text></g><g><title>_dl_hwcaps_subdirs_active (1 samples, 0.18%)</title><rect x="30.8797%" y="933" width="0.1795%" height="15" fill="rgb(207,178,40)" fg:x="172" fg:w="1"/><text x="31.1297%" y="943.50"></text></g><g><title>elf_get_dynamic_info (1 samples, 0.18%)</title><rect x="31.0592%" y="1045" width="0.1795%" height="15" fill="rgb(221,136,13)" fg:x="173" fg:w="1"/><text x="31.3092%" y="1055.50"></text></g><g><title>_start (161 samples, 28.90%)</title><rect x="2.5135%" y="1077" width="28.9048%" height="15" fill="rgb(249,199,10)" fg:x="14" fg:w="161"/><text x="2.7635%" y="1087.50">_start</text></g><g><title>_dl_start (5 samples, 0.90%)</title><rect x="30.5206%" y="1061" width="0.8977%" height="15" fill="rgb(249,222,13)" fg:x="170" fg:w="5"/><text x="30.7706%" y="1071.50"></text></g><g><title>rtld_timer_start (1 samples, 0.18%)</title><rect x="31.2388%" y="1045" width="0.1795%" height="15" fill="rgb(244,185,38)" fg:x="174" fg:w="1"/><text x="31.4888%" y="1055.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="31.2388%" y="1029" width="0.1795%" height="15" fill="rgb(236,202,9)" fg:x="174" fg:w="1"/><text x="31.4888%" y="1039.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="31.2388%" y="1013" width="0.1795%" height="15" fill="rgb(250,229,37)" fg:x="174" fg:w="1"/><text x="31.4888%" y="1023.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="31.2388%" y="997" width="0.1795%" height="15" fill="rgb(206,174,23)" fg:x="174" fg:w="1"/><text x="31.4888%" y="1007.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="31.2388%" y="981" width="0.1795%" height="15" fill="rgb(211,33,43)" fg:x="174" fg:w="1"/><text x="31.4888%" y="991.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="31.2388%" y="965" width="0.1795%" height="15" fill="rgb(245,58,50)" fg:x="174" fg:w="1"/><text x="31.4888%" y="975.50"></text></g><g><title>cfree@GLIBC_2.2.5 (1 samples, 0.18%)</title><rect x="31.4183%" y="1077" width="0.1795%" height="15" fill="rgb(244,68,36)" fg:x="175" fg:w="1"/><text x="31.6683%" y="1087.50"></text></g><g><title>_int_free (1 samples, 0.18%)</title><rect x="31.4183%" y="1061" width="0.1795%" height="15" fill="rgb(232,229,15)" fg:x="175" fg:w="1"/><text x="31.6683%" y="1071.50"></text></g><g><title>[unknown] (2 samples, 0.36%)</title><rect x="31.5978%" y="1061" width="0.3591%" height="15" fill="rgb(254,30,23)" fg:x="176" fg:w="2"/><text x="31.8478%" y="1071.50"></text></g><g><title>[unknown] (22 samples, 3.95%)</title><rect x="32.1364%" y="1045" width="3.9497%" height="15" fill="rgb(235,160,14)" fg:x="179" fg:w="22"/><text x="32.3864%" y="1055.50">[unk..</text></g><g><title>[unknown] (18 samples, 3.23%)</title><rect x="32.8546%" y="1029" width="3.2316%" height="15" fill="rgb(212,155,44)" fg:x="183" fg:w="18"/><text x="33.1046%" y="1039.50">[un..</text></g><g><title>[unknown] (12 samples, 2.15%)</title><rect x="33.9318%" y="1013" width="2.1544%" height="15" fill="rgb(226,2,50)" fg:x="189" fg:w="12"/><text x="34.1818%" y="1023.50">[..</text></g><g><title>[unknown] (4 samples, 0.72%)</title><rect x="35.3680%" y="997" width="0.7181%" height="15" fill="rgb(234,177,6)" fg:x="197" fg:w="4"/><text x="35.6180%" y="1007.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="35.9066%" y="981" width="0.1795%" height="15" fill="rgb(217,24,9)" fg:x="200" fg:w="1"/><text x="36.1566%" y="991.50"></text></g><g><title>__ctype_init (3 samples, 0.54%)</title><rect x="36.0862%" y="1045" width="0.5386%" height="15" fill="rgb(220,13,46)" fg:x="201" fg:w="3"/><text x="36.3362%" y="1055.50"></text></g><g><title>__sigsetjmp (2 samples, 0.36%)</title><rect x="36.6248%" y="1045" width="0.3591%" height="15" fill="rgb(239,221,27)" fg:x="204" fg:w="2"/><text x="36.8748%" y="1055.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (1 samples, 0.18%)</title><rect x="37.1634%" y="1029" width="0.1795%" height="15" fill="rgb(222,198,25)" fg:x="207" fg:w="1"/><text x="37.4134%" y="1039.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (1 samples, 0.18%)</title><rect x="37.1634%" y="1013" width="0.1795%" height="15" fill="rgb(211,99,13)" fg:x="207" fg:w="1"/><text x="37.4134%" y="1023.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (1 samples, 0.18%)</title><rect x="37.1634%" y="997" width="0.1795%" height="15" fill="rgb(232,111,31)" fg:x="207" fg:w="1"/><text x="37.4134%" y="1007.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::_{{closure}} (1 samples, 0.18%)</title><rect x="37.1634%" y="981" width="0.1795%" height="15" fill="rgb(245,82,37)" fg:x="207" fg:w="1"/><text x="37.4134%" y="991.50"></text></g><g><title>std::sys::pal::unix::thread::Thread::set_name (1 samples, 0.18%)</title><rect x="37.1634%" y="965" width="0.1795%" height="15" fill="rgb(227,149,46)" fg:x="207" fg:w="1"/><text x="37.4134%" y="975.50"></text></g><g><title>pthread_setname_np@@GLIBC_2.34 (1 samples, 0.18%)</title><rect x="37.1634%" y="949" width="0.1795%" height="15" fill="rgb(218,36,50)" fg:x="207" fg:w="1"/><text x="37.4134%" y="959.50"></text></g><g><title>__GI___prctl (1 samples, 0.18%)</title><rect x="37.1634%" y="933" width="0.1795%" height="15" fill="rgb(226,80,48)" fg:x="207" fg:w="1"/><text x="37.4134%" y="943.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="37.1634%" y="917" width="0.1795%" height="15" fill="rgb(238,224,15)" fg:x="207" fg:w="1"/><text x="37.4134%" y="927.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="37.1634%" y="901" width="0.1795%" height="15" fill="rgb(241,136,10)" fg:x="207" fg:w="1"/><text x="37.4134%" y="911.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="37.1634%" y="885" width="0.1795%" height="15" fill="rgb(208,32,45)" fg:x="207" fg:w="1"/><text x="37.4134%" y="895.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="37.1634%" y="869" width="0.1795%" height="15" fill="rgb(207,135,9)" fg:x="207" fg:w="1"/><text x="37.4134%" y="879.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="37.1634%" y="853" width="0.1795%" height="15" fill="rgb(206,86,44)" fg:x="207" fg:w="1"/><text x="37.4134%" y="863.50"></text></g><g><title>__GI___pthread_self (1 samples, 0.18%)</title><rect x="37.3429%" y="981" width="0.1795%" height="15" fill="rgb(245,177,15)" fg:x="208" fg:w="1"/><text x="37.5929%" y="991.50"></text></g><g><title>__mmap (3 samples, 0.54%)</title><rect x="38.2406%" y="901" width="0.5386%" height="15" fill="rgb(206,64,50)" fg:x="213" fg:w="3"/><text x="38.4906%" y="911.50"></text></g><g><title>[unknown] (2 samples, 0.36%)</title><rect x="38.4201%" y="885" width="0.3591%" height="15" fill="rgb(234,36,40)" fg:x="214" fg:w="2"/><text x="38.6701%" y="895.50"></text></g><g><title>[unknown] (2 samples, 0.36%)</title><rect x="38.4201%" y="869" width="0.3591%" height="15" fill="rgb(213,64,8)" fg:x="214" fg:w="2"/><text x="38.6701%" y="879.50"></text></g><g><title>[unknown] (2 samples, 0.36%)</title><rect x="38.4201%" y="853" width="0.3591%" height="15" fill="rgb(210,75,36)" fg:x="214" fg:w="2"/><text x="38.6701%" y="863.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="38.5996%" y="837" width="0.1795%" height="15" fill="rgb(229,88,21)" fg:x="215" fg:w="1"/><text x="38.8496%" y="847.50"></text></g><g><title>malloc (6 samples, 1.08%)</title><rect x="38.0610%" y="965" width="1.0772%" height="15" fill="rgb(252,204,47)" fg:x="212" fg:w="6"/><text x="38.3110%" y="975.50"></text></g><g><title>tcache_init.part.0 (6 samples, 1.08%)</title><rect x="38.0610%" y="949" width="1.0772%" height="15" fill="rgb(208,77,27)" fg:x="212" fg:w="6"/><text x="38.3110%" y="959.50"></text></g><g><title>arena_get2.part.0 (5 samples, 0.90%)</title><rect x="38.2406%" y="933" width="0.8977%" height="15" fill="rgb(221,76,26)" fg:x="213" fg:w="5"/><text x="38.4906%" y="943.50"></text></g><g><title>alloc_new_heap (5 samples, 0.90%)</title><rect x="38.2406%" y="917" width="0.8977%" height="15" fill="rgb(225,139,18)" fg:x="213" fg:w="5"/><text x="38.4906%" y="927.50"></text></g><g><title>__mprotect (2 samples, 0.36%)</title><rect x="38.7792%" y="901" width="0.3591%" height="15" fill="rgb(230,137,11)" fg:x="216" fg:w="2"/><text x="39.0292%" y="911.50"></text></g><g><title>[unknown] (2 samples, 0.36%)</title><rect x="38.7792%" y="885" width="0.3591%" height="15" fill="rgb(212,28,1)" fg:x="216" fg:w="2"/><text x="39.0292%" y="895.50"></text></g><g><title>pthread_attr_init@@GLIBC_2.2.5 (1 samples, 0.18%)</title><rect x="39.1382%" y="965" width="0.1795%" height="15" fill="rgb(248,164,17)" fg:x="218" fg:w="1"/><text x="39.3882%" y="975.50"></text></g><g><title>pthread_attr_setaffinity_np@@GLIBC_2.32 (2 samples, 0.36%)</title><rect x="39.3178%" y="965" width="0.3591%" height="15" fill="rgb(222,171,42)" fg:x="219" fg:w="2"/><text x="39.5678%" y="975.50"></text></g><g><title>__pthread_attr_extension (2 samples, 0.36%)</title><rect x="39.3178%" y="949" width="0.3591%" height="15" fill="rgb(243,84,45)" fg:x="219" fg:w="2"/><text x="39.5678%" y="959.50"></text></g><g><title>__libc_calloc (1 samples, 0.18%)</title><rect x="39.4973%" y="933" width="0.1795%" height="15" fill="rgb(252,49,23)" fg:x="220" fg:w="1"/><text x="39.7473%" y="943.50"></text></g><g><title>realloc (2 samples, 0.36%)</title><rect x="39.6768%" y="965" width="0.3591%" height="15" fill="rgb(215,19,7)" fg:x="221" fg:w="2"/><text x="39.9268%" y="975.50"></text></g><g><title>std::sys::pal::unix::stack_overflow::imp::current_guard (16 samples, 2.87%)</title><rect x="37.3429%" y="997" width="2.8725%" height="15" fill="rgb(238,81,41)" fg:x="208" fg:w="16"/><text x="37.5929%" y="1007.50">st..</text></g><g><title>pthread_getattr_np@@GLIBC_2.32 (15 samples, 2.69%)</title><rect x="37.5224%" y="981" width="2.6930%" height="15" fill="rgb(210,199,37)" fg:x="209" fg:w="15"/><text x="37.7724%" y="991.50">pt..</text></g><g><title>realloc@plt (1 samples, 0.18%)</title><rect x="40.0359%" y="965" width="0.1795%" height="15" fill="rgb(244,192,49)" fg:x="223" fg:w="1"/><text x="40.2859%" y="975.50"></text></g><g><title>julia (225 samples, 40.39%)</title><rect x="0.0000%" y="1093" width="40.3950%" height="15" fill="rgb(226,211,11)" fg:x="0" fg:w="225"/><text x="0.2500%" y="1103.50">julia</text></g><g><title>clone3 (49 samples, 8.80%)</title><rect x="31.5978%" y="1077" width="8.7971%" height="15" fill="rgb(236,162,54)" fg:x="176" fg:w="49"/><text x="31.8478%" y="1087.50">clone3</text></g><g><title>start_thread (47 samples, 8.44%)</title><rect x="31.9569%" y="1061" width="8.4381%" height="15" fill="rgb(220,229,9)" fg:x="178" fg:w="47"/><text x="32.2069%" y="1071.50">start_thread</text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (19 samples, 3.41%)</title><rect x="36.9838%" y="1045" width="3.4111%" height="15" fill="rgb(250,87,22)" fg:x="206" fg:w="19"/><text x="37.2338%" y="1055.50">std..</text></g><g><title>std::sys::pal::unix::stack_overflow::Handler::new (17 samples, 3.05%)</title><rect x="37.3429%" y="1029" width="3.0521%" height="15" fill="rgb(239,43,17)" fg:x="208" fg:w="17"/><text x="37.5929%" y="1039.50">std..</text></g><g><title>std::sys::pal::unix::stack_overflow::imp::make_handler (17 samples, 3.05%)</title><rect x="37.3429%" y="1013" width="3.0521%" height="15" fill="rgb(231,177,25)" fg:x="208" fg:w="17"/><text x="37.5929%" y="1023.50">std..</text></g><g><title>std::sys::pal::unix::stack_overflow::imp::get_stack (1 samples, 0.18%)</title><rect x="40.2154%" y="997" width="0.1795%" height="15" fill="rgb(219,179,1)" fg:x="224" fg:w="1"/><text x="40.4654%" y="1007.50"></text></g><g><title>__mprotect (1 samples, 0.18%)</title><rect x="40.2154%" y="981" width="0.1795%" height="15" fill="rgb(238,219,53)" fg:x="224" fg:w="1"/><text x="40.4654%" y="991.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="40.2154%" y="965" width="0.1795%" height="15" fill="rgb(232,167,36)" fg:x="224" fg:w="1"/><text x="40.4654%" y="975.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="40.2154%" y="949" width="0.1795%" height="15" fill="rgb(244,19,51)" fg:x="224" fg:w="1"/><text x="40.4654%" y="959.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="40.2154%" y="933" width="0.1795%" height="15" fill="rgb(224,6,22)" fg:x="224" fg:w="1"/><text x="40.4654%" y="943.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="40.2154%" y="917" width="0.1795%" height="15" fill="rgb(224,145,5)" fg:x="224" fg:w="1"/><text x="40.4654%" y="927.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="40.2154%" y="901" width="0.1795%" height="15" fill="rgb(234,130,49)" fg:x="224" fg:w="1"/><text x="40.4654%" y="911.50"></text></g><g><title>core::mem::drop (1 samples, 0.18%)</title><rect x="40.3950%" y="837" width="0.1795%" height="15" fill="rgb(254,6,2)" fg:x="225" fg:w="1"/><text x="40.6450%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;tokio::runtime::blocking::pool::Shared&gt;&gt; (1 samples, 0.18%)</title><rect x="40.3950%" y="821" width="0.1795%" height="15" fill="rgb(208,96,46)" fg:x="225" fg:w="1"/><text x="40.6450%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::blocking::pool::Shared&gt;&gt; (1 samples, 0.18%)</title><rect x="40.3950%" y="805" width="0.1795%" height="15" fill="rgb(239,3,39)" fg:x="225" fg:w="1"/><text x="40.6450%" y="815.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.18%)</title><rect x="40.3950%" y="789" width="0.1795%" height="15" fill="rgb(233,210,1)" fg:x="225" fg:w="1"/><text x="40.6450%" y="799.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (1 samples, 0.18%)</title><rect x="40.3950%" y="773" width="0.1795%" height="15" fill="rgb(244,137,37)" fg:x="225" fg:w="1"/><text x="40.6450%" y="783.50"></text></g><g><title>syscall (1 samples, 0.18%)</title><rect x="40.3950%" y="757" width="0.1795%" height="15" fill="rgb(240,136,2)" fg:x="225" fg:w="1"/><text x="40.6450%" y="767.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="40.3950%" y="741" width="0.1795%" height="15" fill="rgb(239,18,37)" fg:x="225" fg:w="1"/><text x="40.6450%" y="751.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="40.3950%" y="725" width="0.1795%" height="15" fill="rgb(218,185,22)" fg:x="225" fg:w="1"/><text x="40.6450%" y="735.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="40.3950%" y="709" width="0.1795%" height="15" fill="rgb(225,218,4)" fg:x="225" fg:w="1"/><text x="40.6450%" y="719.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="40.3950%" y="693" width="0.1795%" height="15" fill="rgb(230,182,32)" fg:x="225" fg:w="1"/><text x="40.6450%" y="703.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="40.3950%" y="677" width="0.1795%" height="15" fill="rgb(242,56,43)" fg:x="225" fg:w="1"/><text x="40.6450%" y="687.50"></text></g><g><title>thread_priority::unix::set_thread_priority_and_policy (1 samples, 0.18%)</title><rect x="40.5745%" y="805" width="0.1795%" height="15" fill="rgb(233,99,24)" fg:x="226" fg:w="1"/><text x="40.8245%" y="815.50"></text></g><g><title>thread_priority::unix::set_errno (1 samples, 0.18%)</title><rect x="40.5745%" y="789" width="0.1795%" height="15" fill="rgb(234,209,42)" fg:x="226" fg:w="1"/><text x="40.8245%" y="799.50"></text></g><g><title>__errno_location (1 samples, 0.18%)</title><rect x="40.5745%" y="773" width="0.1795%" height="15" fill="rgb(227,7,12)" fg:x="226" fg:w="1"/><text x="40.8245%" y="783.50"></text></g><g><title>julia::generate_image_buffer::_{{closure}} (2 samples, 0.36%)</title><rect x="40.5745%" y="837" width="0.3591%" height="15" fill="rgb(245,203,43)" fg:x="226" fg:w="2"/><text x="40.8245%" y="847.50"></text></g><g><title>thread_priority::unix::set_current_thread_priority (2 samples, 0.36%)</title><rect x="40.5745%" y="821" width="0.3591%" height="15" fill="rgb(238,205,33)" fg:x="226" fg:w="2"/><text x="40.8245%" y="831.50"></text></g><g><title>thread_priority::unix::thread_schedule_policy (1 samples, 0.18%)</title><rect x="40.7540%" y="805" width="0.1795%" height="15" fill="rgb(231,56,7)" fg:x="227" fg:w="1"/><text x="41.0040%" y="815.50"></text></g><g><title>thread_priority::unix::thread_schedule_policy_param (1 samples, 0.18%)</title><rect x="40.7540%" y="789" width="0.1795%" height="15" fill="rgb(244,186,29)" fg:x="227" fg:w="1"/><text x="41.0040%" y="799.50"></text></g><g><title>pthread_getschedparam (1 samples, 0.18%)</title><rect x="40.7540%" y="773" width="0.1795%" height="15" fill="rgb(234,111,31)" fg:x="227" fg:w="1"/><text x="41.0040%" y="783.50"></text></g><g><title>__sched_getparam (1 samples, 0.18%)</title><rect x="40.7540%" y="757" width="0.1795%" height="15" fill="rgb(241,149,10)" fg:x="227" fg:w="1"/><text x="41.0040%" y="767.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="40.7540%" y="741" width="0.1795%" height="15" fill="rgb(249,206,44)" fg:x="227" fg:w="1"/><text x="41.0040%" y="751.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="40.7540%" y="725" width="0.1795%" height="15" fill="rgb(251,153,30)" fg:x="227" fg:w="1"/><text x="41.0040%" y="735.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="40.7540%" y="709" width="0.1795%" height="15" fill="rgb(239,152,38)" fg:x="227" fg:w="1"/><text x="41.0040%" y="719.50"></text></g><g><title>&lt;std::time::Instant as core::ops::arith::Sub&gt;::sub (1 samples, 0.18%)</title><rect x="41.1131%" y="469" width="0.1795%" height="15" fill="rgb(249,139,47)" fg:x="229" fg:w="1"/><text x="41.3631%" y="479.50"></text></g><g><title>std::time::Instant::duration_since (1 samples, 0.18%)</title><rect x="41.1131%" y="453" width="0.1795%" height="15" fill="rgb(244,64,35)" fg:x="229" fg:w="1"/><text x="41.3631%" y="463.50"></text></g><g><title>std::time::Instant::checked_duration_since (1 samples, 0.18%)</title><rect x="41.1131%" y="437" width="0.1795%" height="15" fill="rgb(216,46,15)" fg:x="229" fg:w="1"/><text x="41.3631%" y="447.50"></text></g><g><title>std::sys::pal::unix::time::Instant::checked_sub_instant (1 samples, 0.18%)</title><rect x="41.1131%" y="421" width="0.1795%" height="15" fill="rgb(250,74,19)" fg:x="229" fg:w="1"/><text x="41.3631%" y="431.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::sub_timespec (1 samples, 0.18%)</title><rect x="41.1131%" y="405" width="0.1795%" height="15" fill="rgb(249,42,33)" fg:x="229" fg:w="1"/><text x="41.3631%" y="415.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::powf (1 samples, 0.18%)</title><rect x="41.2926%" y="469" width="0.1795%" height="15" fill="rgb(242,149,17)" fg:x="230" fg:w="1"/><text x="41.5426%" y="479.50"></text></g><g><title>pow (1 samples, 0.18%)</title><rect x="41.2926%" y="453" width="0.1795%" height="15" fill="rgb(244,29,21)" fg:x="230" fg:w="1"/><text x="41.5426%" y="463.50"></text></g><g><title>[libm.so.6] (1 samples, 0.18%)</title><rect x="41.2926%" y="437" width="0.1795%" height="15" fill="rgb(220,130,37)" fg:x="230" fg:w="1"/><text x="41.5426%" y="447.50"></text></g><g><title>clock_gettime@@GLIBC_2.17 (2 samples, 0.36%)</title><rect x="41.4722%" y="453" width="0.3591%" height="15" fill="rgb(211,67,2)" fg:x="231" fg:w="2"/><text x="41.7222%" y="463.50"></text></g><g><title>__vdso_clock_gettime (2 samples, 0.36%)</title><rect x="41.4722%" y="437" width="0.3591%" height="15" fill="rgb(235,68,52)" fg:x="231" fg:w="2"/><text x="41.7222%" y="447.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::stats::Stats::end_processing_scheduled_tasks (5 samples, 0.90%)</title><rect x="41.1131%" y="485" width="0.8977%" height="15" fill="rgb(246,142,3)" fg:x="229" fg:w="5"/><text x="41.3631%" y="495.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (3 samples, 0.54%)</title><rect x="41.4722%" y="469" width="0.5386%" height="15" fill="rgb(241,25,7)" fg:x="231" fg:w="3"/><text x="41.7222%" y="479.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::new (1 samples, 0.18%)</title><rect x="41.8312%" y="453" width="0.1795%" height="15" fill="rgb(242,119,39)" fg:x="233" fg:w="1"/><text x="42.0812%" y="463.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (5 samples, 0.90%)</title><rect x="42.0108%" y="469" width="0.8977%" height="15" fill="rgb(241,98,45)" fg:x="234" fg:w="5"/><text x="42.2608%" y="479.50"></text></g><g><title>clock_gettime@@GLIBC_2.17 (5 samples, 0.90%)</title><rect x="42.0108%" y="453" width="0.8977%" height="15" fill="rgb(254,28,30)" fg:x="234" fg:w="5"/><text x="42.2608%" y="463.50"></text></g><g><title>__vdso_clock_gettime (3 samples, 0.54%)</title><rect x="42.3698%" y="437" width="0.5386%" height="15" fill="rgb(241,142,54)" fg:x="236" fg:w="3"/><text x="42.6198%" y="447.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::stats::Stats::start_processing_scheduled_tasks (8 samples, 1.44%)</title><rect x="42.0108%" y="485" width="1.4363%" height="15" fill="rgb(222,85,15)" fg:x="234" fg:w="8"/><text x="42.2608%" y="495.50"></text></g><g><title>std::time::Instant::now (3 samples, 0.54%)</title><rect x="42.9084%" y="469" width="0.5386%" height="15" fill="rgb(210,85,47)" fg:x="239" fg:w="3"/><text x="43.1584%" y="479.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::shutdown_core (1 samples, 0.18%)</title><rect x="43.4470%" y="485" width="0.1795%" height="15" fill="rgb(224,206,25)" fg:x="242" fg:w="1"/><text x="43.6970%" y="495.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::shutdown (1 samples, 0.18%)</title><rect x="43.4470%" y="469" width="0.1795%" height="15" fill="rgb(243,201,19)" fg:x="242" fg:w="1"/><text x="43.6970%" y="479.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::next_local_task (1 samples, 0.18%)</title><rect x="43.4470%" y="453" width="0.1795%" height="15" fill="rgb(236,59,4)" fg:x="242" fg:w="1"/><text x="43.6970%" y="463.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (1 samples, 0.18%)</title><rect x="43.4470%" y="437" width="0.1795%" height="15" fill="rgb(254,179,45)" fg:x="242" fg:w="1"/><text x="43.6970%" y="447.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::next_local_task::_{{closure}} (1 samples, 0.18%)</title><rect x="43.4470%" y="421" width="0.1795%" height="15" fill="rgb(226,14,10)" fg:x="242" fg:w="1"/><text x="43.6970%" y="431.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Local&lt;T&gt;::pop (1 samples, 0.18%)</title><rect x="43.4470%" y="405" width="0.1795%" height="15" fill="rgb(244,27,41)" fg:x="242" fg:w="1"/><text x="43.6970%" y="415.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::unpack (1 samples, 0.18%)</title><rect x="43.4470%" y="389" width="0.1795%" height="15" fill="rgb(235,35,32)" fg:x="242" fg:w="1"/><text x="43.6970%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;tokio::runtime::scheduler::multi_thread::park::Parker&gt;&gt; (2 samples, 0.36%)</title><rect x="44.3447%" y="453" width="0.3591%" height="15" fill="rgb(218,68,31)" fg:x="247" fg:w="2"/><text x="44.5947%" y="463.50"></text></g><g><title>tokio::runtime::scheduler::defer::Defer::wake (1 samples, 0.18%)</title><rect x="44.7038%" y="453" width="0.1795%" height="15" fill="rgb(207,120,37)" fg:x="249" fg:w="1"/><text x="44.9538%" y="463.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (1 samples, 0.18%)</title><rect x="44.7038%" y="437" width="0.1795%" height="15" fill="rgb(227,98,0)" fg:x="249" fg:w="1"/><text x="44.9538%" y="447.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (1 samples, 0.18%)</title><rect x="44.7038%" y="421" width="0.1795%" height="15" fill="rgb(207,7,3)" fg:x="249" fg:w="1"/><text x="44.9538%" y="431.50"></text></g><g><title>core::cell::BorrowRefMut::new (1 samples, 0.18%)</title><rect x="44.7038%" y="405" width="0.1795%" height="15" fill="rgb(206,98,19)" fg:x="249" fg:w="1"/><text x="44.9538%" y="415.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (2 samples, 0.36%)</title><rect x="45.0628%" y="357" width="0.3591%" height="15" fill="rgb(217,5,26)" fg:x="251" fg:w="2"/><text x="45.3128%" y="367.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_err (2 samples, 0.36%)</title><rect x="45.0628%" y="341" width="0.3591%" height="15" fill="rgb(235,190,38)" fg:x="251" fg:w="2"/><text x="45.3128%" y="351.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_ok (2 samples, 0.36%)</title><rect x="45.0628%" y="325" width="0.3591%" height="15" fill="rgb(247,86,24)" fg:x="251" fg:w="2"/><text x="45.3128%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="46.1400%" y="293" width="0.1795%" height="15" fill="rgb(205,101,16)" fg:x="257" fg:w="1"/><text x="46.3900%" y="303.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::park_timeout (13 samples, 2.33%)</title><rect x="44.3447%" y="469" width="2.3339%" height="15" fill="rgb(246,168,33)" fg:x="247" fg:w="13"/><text x="44.5947%" y="479.50">t..</text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Parker::park (10 samples, 1.80%)</title><rect x="44.8833%" y="453" width="1.7953%" height="15" fill="rgb(231,114,1)" fg:x="250" fg:w="10"/><text x="45.1333%" y="463.50">t..</text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::park (10 samples, 1.80%)</title><rect x="44.8833%" y="437" width="1.7953%" height="15" fill="rgb(207,184,53)" fg:x="250" fg:w="10"/><text x="45.1333%" y="447.50">t..</text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::park_condvar (9 samples, 1.62%)</title><rect x="45.0628%" y="421" width="1.6158%" height="15" fill="rgb(224,95,51)" fg:x="251" fg:w="9"/><text x="45.3128%" y="431.50"></text></g><g><title>tokio::loom::std::parking_lot::Condvar::wait (9 samples, 1.62%)</title><rect x="45.0628%" y="405" width="1.6158%" height="15" fill="rgb(212,188,45)" fg:x="251" fg:w="9"/><text x="45.3128%" y="415.50"></text></g><g><title>parking_lot::condvar::Condvar::wait (9 samples, 1.62%)</title><rect x="45.0628%" y="389" width="1.6158%" height="15" fill="rgb(223,154,38)" fg:x="251" fg:w="9"/><text x="45.3128%" y="399.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (9 samples, 1.62%)</title><rect x="45.0628%" y="373" width="1.6158%" height="15" fill="rgb(251,22,52)" fg:x="251" fg:w="9"/><text x="45.3128%" y="383.50"></text></g><g><title>parking_lot_core::parking_lot::park (7 samples, 1.26%)</title><rect x="45.4219%" y="357" width="1.2567%" height="15" fill="rgb(229,209,22)" fg:x="253" fg:w="7"/><text x="45.6719%" y="367.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data (7 samples, 1.26%)</title><rect x="45.4219%" y="341" width="1.2567%" height="15" fill="rgb(234,138,34)" fg:x="253" fg:w="7"/><text x="45.6719%" y="351.50"></text></g><g><title>parking_lot_core::parking_lot::park::_{{closure}} (7 samples, 1.26%)</title><rect x="45.4219%" y="325" width="1.2567%" height="15" fill="rgb(212,95,11)" fg:x="253" fg:w="7"/><text x="45.6719%" y="335.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park (6 samples, 1.08%)</title><rect x="45.6014%" y="309" width="1.0772%" height="15" fill="rgb(240,179,47)" fg:x="254" fg:w="6"/><text x="45.8514%" y="319.50"></text></g><g><title>parking_lot_core::thread_parker::imp::ThreadParker::futex_wait (2 samples, 0.36%)</title><rect x="46.3196%" y="293" width="0.3591%" height="15" fill="rgb(240,163,11)" fg:x="258" fg:w="2"/><text x="46.5696%" y="303.50"></text></g><g><title>syscall (2 samples, 0.36%)</title><rect x="46.3196%" y="277" width="0.3591%" height="15" fill="rgb(236,37,12)" fg:x="258" fg:w="2"/><text x="46.5696%" y="287.50"></text></g><g><title>[unknown] (2 samples, 0.36%)</title><rect x="46.3196%" y="261" width="0.3591%" height="15" fill="rgb(232,164,16)" fg:x="258" fg:w="2"/><text x="46.5696%" y="271.50"></text></g><g><title>[unknown] (2 samples, 0.36%)</title><rect x="46.3196%" y="245" width="0.3591%" height="15" fill="rgb(244,205,15)" fg:x="258" fg:w="2"/><text x="46.5696%" y="255.50"></text></g><g><title>[unknown] (2 samples, 0.36%)</title><rect x="46.3196%" y="229" width="0.3591%" height="15" fill="rgb(223,117,47)" fg:x="258" fg:w="2"/><text x="46.5696%" y="239.50"></text></g><g><title>[unknown] (2 samples, 0.36%)</title><rect x="46.3196%" y="213" width="0.3591%" height="15" fill="rgb(244,107,35)" fg:x="258" fg:w="2"/><text x="46.5696%" y="223.50"></text></g><g><title>[unknown] (2 samples, 0.36%)</title><rect x="46.3196%" y="197" width="0.3591%" height="15" fill="rgb(205,140,8)" fg:x="258" fg:w="2"/><text x="46.5696%" y="207.50"></text></g><g><title>[unknown] (2 samples, 0.36%)</title><rect x="46.3196%" y="181" width="0.3591%" height="15" fill="rgb(228,84,46)" fg:x="258" fg:w="2"/><text x="46.5696%" y="191.50"></text></g><g><title>[unknown] (2 samples, 0.36%)</title><rect x="46.3196%" y="165" width="0.3591%" height="15" fill="rgb(254,188,9)" fg:x="258" fg:w="2"/><text x="46.5696%" y="175.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="46.4991%" y="149" width="0.1795%" height="15" fill="rgb(206,112,54)" fg:x="259" fg:w="1"/><text x="46.7491%" y="159.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="46.4991%" y="133" width="0.1795%" height="15" fill="rgb(216,84,49)" fg:x="259" fg:w="1"/><text x="46.7491%" y="143.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::maintenance (3 samples, 0.54%)</title><rect x="46.6786%" y="469" width="0.5386%" height="15" fill="rgb(214,194,35)" fg:x="260" fg:w="3"/><text x="46.9286%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;tokio::runtime::scheduler::multi_thread::worker::Synced&gt;&gt; (1 samples, 0.18%)</title><rect x="47.0377%" y="453" width="0.1795%" height="15" fill="rgb(249,28,3)" fg:x="262" fg:w="1"/><text x="47.2877%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::scheduler::multi_thread::worker::Synced&gt;&gt; (1 samples, 0.18%)</title><rect x="47.0377%" y="437" width="0.1795%" height="15" fill="rgb(222,56,52)" fg:x="262" fg:w="1"/><text x="47.2877%" y="447.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.18%)</title><rect x="47.0377%" y="421" width="0.1795%" height="15" fill="rgb(245,217,50)" fg:x="262" fg:w="1"/><text x="47.2877%" y="431.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (1 samples, 0.18%)</title><rect x="47.0377%" y="405" width="0.1795%" height="15" fill="rgb(213,201,24)" fg:x="262" fg:w="1"/><text x="47.2877%" y="415.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_ok (1 samples, 0.18%)</title><rect x="47.0377%" y="389" width="0.1795%" height="15" fill="rgb(248,116,28)" fg:x="262" fg:w="1"/><text x="47.2877%" y="399.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_ok (1 samples, 0.18%)</title><rect x="47.2172%" y="373" width="0.1795%" height="15" fill="rgb(219,72,43)" fg:x="263" fg:w="1"/><text x="47.4672%" y="383.50"></text></g><g><title>clock_gettime@@GLIBC_2.17 (1 samples, 0.18%)</title><rect x="47.3968%" y="309" width="0.1795%" height="15" fill="rgb(209,138,14)" fg:x="264" fg:w="1"/><text x="47.6468%" y="319.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::unlock_slow (2 samples, 0.36%)</title><rect x="47.3968%" y="373" width="0.3591%" height="15" fill="rgb(222,18,33)" fg:x="264" fg:w="2"/><text x="47.6468%" y="383.50"></text></g><g><title>parking_lot_core::parking_lot::unpark_one (2 samples, 0.36%)</title><rect x="47.3968%" y="357" width="0.3591%" height="15" fill="rgb(213,199,7)" fg:x="264" fg:w="2"/><text x="47.6468%" y="367.50"></text></g><g><title>parking_lot_core::parking_lot::FairTimeout::should_timeout (2 samples, 0.36%)</title><rect x="47.3968%" y="341" width="0.3591%" height="15" fill="rgb(250,110,10)" fg:x="264" fg:w="2"/><text x="47.6468%" y="351.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (2 samples, 0.36%)</title><rect x="47.3968%" y="325" width="0.3591%" height="15" fill="rgb(248,123,6)" fg:x="264" fg:w="2"/><text x="47.6468%" y="335.50"></text></g><g><title>std::sys::pal::unix::cvt (1 samples, 0.18%)</title><rect x="47.5763%" y="309" width="0.1795%" height="15" fill="rgb(206,91,31)" fg:x="265" fg:w="1"/><text x="47.8263%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;tokio::runtime::scheduler::multi_thread::worker::Synced&gt;&gt; (4 samples, 0.72%)</title><rect x="47.2172%" y="437" width="0.7181%" height="15" fill="rgb(211,154,13)" fg:x="263" fg:w="4"/><text x="47.4672%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::scheduler::multi_thread::worker::Synced&gt;&gt; (4 samples, 0.72%)</title><rect x="47.2172%" y="421" width="0.7181%" height="15" fill="rgb(225,148,7)" fg:x="263" fg:w="4"/><text x="47.4672%" y="431.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.72%)</title><rect x="47.2172%" y="405" width="0.7181%" height="15" fill="rgb(220,160,43)" fg:x="263" fg:w="4"/><text x="47.4672%" y="415.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (4 samples, 0.72%)</title><rect x="47.2172%" y="389" width="0.7181%" height="15" fill="rgb(213,52,39)" fg:x="263" fg:w="4"/><text x="47.4672%" y="399.50"></text></g><g><title>syscall (1 samples, 0.18%)</title><rect x="47.7558%" y="373" width="0.1795%" height="15" fill="rgb(243,137,7)" fg:x="266" fg:w="1"/><text x="48.0058%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="47.7558%" y="357" width="0.1795%" height="15" fill="rgb(230,79,13)" fg:x="266" fg:w="1"/><text x="48.0058%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="47.7558%" y="341" width="0.1795%" height="15" fill="rgb(247,105,23)" fg:x="266" fg:w="1"/><text x="48.0058%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="47.7558%" y="325" width="0.1795%" height="15" fill="rgb(223,179,41)" fg:x="266" fg:w="1"/><text x="48.0058%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="47.7558%" y="309" width="0.1795%" height="15" fill="rgb(218,9,34)" fg:x="266" fg:w="1"/><text x="48.0058%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="47.7558%" y="293" width="0.1795%" height="15" fill="rgb(222,106,8)" fg:x="266" fg:w="1"/><text x="48.0058%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="47.7558%" y="277" width="0.1795%" height="15" fill="rgb(211,220,0)" fg:x="266" fg:w="1"/><text x="48.0058%" y="287.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::contains (1 samples, 0.18%)</title><rect x="47.9354%" y="437" width="0.1795%" height="15" fill="rgb(229,52,16)" fg:x="267" fg:w="1"/><text x="48.1854%" y="447.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains (1 samples, 0.18%)</title><rect x="47.9354%" y="421" width="0.1795%" height="15" fill="rgb(212,155,18)" fg:x="267" fg:w="1"/><text x="48.1854%" y="431.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::any (1 samples, 0.18%)</title><rect x="47.9354%" y="405" width="0.1795%" height="15" fill="rgb(242,21,14)" fg:x="267" fg:w="1"/><text x="48.1854%" y="415.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::transition_from_parked (6 samples, 1.08%)</title><rect x="47.2172%" y="469" width="1.0772%" height="15" fill="rgb(222,19,48)" fg:x="263" fg:w="6"/><text x="47.4672%" y="479.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::is_parked (6 samples, 1.08%)</title><rect x="47.2172%" y="453" width="1.0772%" height="15" fill="rgb(232,45,27)" fg:x="263" fg:w="6"/><text x="47.4672%" y="463.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (1 samples, 0.18%)</title><rect x="48.1149%" y="437" width="0.1795%" height="15" fill="rgb(249,103,42)" fg:x="268" fg:w="1"/><text x="48.3649%" y="447.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (1 samples, 0.18%)</title><rect x="48.1149%" y="421" width="0.1795%" height="15" fill="rgb(246,81,33)" fg:x="268" fg:w="1"/><text x="48.3649%" y="431.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (1 samples, 0.18%)</title><rect x="48.1149%" y="405" width="0.1795%" height="15" fill="rgb(252,33,42)" fg:x="268" fg:w="1"/><text x="48.3649%" y="415.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::lock_slow (1 samples, 0.18%)</title><rect x="48.1149%" y="389" width="0.1795%" height="15" fill="rgb(209,212,41)" fg:x="268" fg:w="1"/><text x="48.3649%" y="399.50"></text></g><g><title>parking_lot_core::spinwait::SpinWait::spin (1 samples, 0.18%)</title><rect x="48.1149%" y="373" width="0.1795%" height="15" fill="rgb(207,154,6)" fg:x="268" fg:w="1"/><text x="48.3649%" y="383.50"></text></g><g><title>parking_lot_core::spinwait::cpu_relax (1 samples, 0.18%)</title><rect x="48.1149%" y="357" width="0.1795%" height="15" fill="rgb(223,64,47)" fg:x="268" fg:w="1"/><text x="48.3649%" y="367.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.18%)</title><rect x="48.1149%" y="341" width="0.1795%" height="15" fill="rgb(211,161,38)" fg:x="268" fg:w="1"/><text x="48.3649%" y="351.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.18%)</title><rect x="48.1149%" y="325" width="0.1795%" height="15" fill="rgb(219,138,40)" fg:x="268" fg:w="1"/><text x="48.3649%" y="335.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::transition_worker_to_parked (1 samples, 0.18%)</title><rect x="48.2944%" y="453" width="0.1795%" height="15" fill="rgb(241,228,46)" fg:x="269" fg:w="1"/><text x="48.5444%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;tokio::runtime::scheduler::multi_thread::worker::Synced&gt;&gt; (1 samples, 0.18%)</title><rect x="48.2944%" y="437" width="0.1795%" height="15" fill="rgb(223,209,38)" fg:x="269" fg:w="1"/><text x="48.5444%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::scheduler::multi_thread::worker::Synced&gt;&gt; (1 samples, 0.18%)</title><rect x="48.2944%" y="421" width="0.1795%" height="15" fill="rgb(236,164,45)" fg:x="269" fg:w="1"/><text x="48.5444%" y="431.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.18%)</title><rect x="48.2944%" y="405" width="0.1795%" height="15" fill="rgb(231,15,5)" fg:x="269" fg:w="1"/><text x="48.5444%" y="415.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (1 samples, 0.18%)</title><rect x="48.2944%" y="389" width="0.1795%" height="15" fill="rgb(252,35,15)" fg:x="269" fg:w="1"/><text x="48.5444%" y="399.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_ok (1 samples, 0.18%)</title><rect x="48.2944%" y="373" width="0.1795%" height="15" fill="rgb(248,181,18)" fg:x="269" fg:w="1"/><text x="48.5444%" y="383.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::park (28 samples, 5.03%)</title><rect x="43.6266%" y="485" width="5.0269%" height="15" fill="rgb(233,39,42)" fg:x="243" fg:w="28"/><text x="43.8766%" y="495.50">tokio:..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::transition_to_parked (2 samples, 0.36%)</title><rect x="48.2944%" y="469" width="0.3591%" height="15" fill="rgb(238,110,33)" fg:x="269" fg:w="2"/><text x="48.5444%" y="479.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::notify_if_work_pending (1 samples, 0.18%)</title><rect x="48.4740%" y="453" width="0.1795%" height="15" fill="rgb(233,195,10)" fg:x="270" fg:w="1"/><text x="48.7240%" y="463.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::notify_parked_local (1 samples, 0.18%)</title><rect x="48.4740%" y="437" width="0.1795%" height="15" fill="rgb(254,105,3)" fg:x="270" fg:w="1"/><text x="48.7240%" y="447.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::worker_to_notify (1 samples, 0.18%)</title><rect x="48.4740%" y="421" width="0.1795%" height="15" fill="rgb(221,225,9)" fg:x="270" fg:w="1"/><text x="48.7240%" y="431.50"></text></g><g><title>tokio::runtime::context::budget (1 samples, 0.18%)</title><rect x="48.8330%" y="437" width="0.1795%" height="15" fill="rgb(224,227,45)" fg:x="272" fg:w="1"/><text x="49.0830%" y="447.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.18%)</title><rect x="48.8330%" y="421" width="0.1795%" height="15" fill="rgb(229,198,43)" fg:x="272" fg:w="1"/><text x="49.0830%" y="431.50"></text></g><g><title>tokio::runtime::context::CONTEXT::__getit (1 samples, 0.18%)</title><rect x="48.8330%" y="405" width="0.1795%" height="15" fill="rgb(206,209,35)" fg:x="272" fg:w="1"/><text x="49.0830%" y="415.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (1 samples, 0.18%)</title><rect x="48.8330%" y="389" width="0.1795%" height="15" fill="rgb(245,195,53)" fg:x="272" fg:w="1"/><text x="49.0830%" y="399.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (1 samples, 0.18%)</title><rect x="49.0126%" y="421" width="0.1795%" height="15" fill="rgb(240,92,26)" fg:x="273" fg:w="1"/><text x="49.2626%" y="431.50"></text></g><g><title>core::mem::replace (1 samples, 0.18%)</title><rect x="49.0126%" y="405" width="0.1795%" height="15" fill="rgb(207,40,23)" fg:x="273" fg:w="1"/><text x="49.2626%" y="415.50"></text></g><g><title>core::ptr::write (1 samples, 0.18%)</title><rect x="49.0126%" y="389" width="0.1795%" height="15" fill="rgb(223,111,35)" fg:x="273" fg:w="1"/><text x="49.2626%" y="399.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;::release (11 samples, 1.97%)</title><rect x="49.1921%" y="341" width="1.9749%" height="15" fill="rgb(229,147,28)" fg:x="274" fg:w="11"/><text x="49.4421%" y="351.50">t..</text></g><g><title>tokio::runtime::task::list::OwnedTasks&lt;S&gt;::remove (10 samples, 1.80%)</title><rect x="49.3716%" y="325" width="1.7953%" height="15" fill="rgb(211,29,28)" fg:x="275" fg:w="10"/><text x="49.6216%" y="335.50">t..</text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;tokio::util::linked_list::LinkedList&lt;tokio::runtime::task::Task&lt;alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;,tokio::runtime::task::core::Header&gt;&gt;&gt; (5 samples, 0.90%)</title><rect x="51.1670%" y="325" width="0.8977%" height="15" fill="rgb(228,72,33)" fg:x="285" fg:w="5"/><text x="51.4170%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::util::linked_list::LinkedList&lt;tokio::runtime::task::Task&lt;alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;,tokio::runtime::task::core::Header&gt;&gt;&gt; (5 samples, 0.90%)</title><rect x="51.1670%" y="309" width="0.8977%" height="15" fill="rgb(205,214,31)" fg:x="285" fg:w="5"/><text x="51.4170%" y="319.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.90%)</title><rect x="51.1670%" y="293" width="0.8977%" height="15" fill="rgb(224,111,15)" fg:x="285" fg:w="5"/><text x="51.4170%" y="303.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (5 samples, 0.90%)</title><rect x="51.1670%" y="277" width="0.8977%" height="15" fill="rgb(253,21,26)" fg:x="285" fg:w="5"/><text x="51.4170%" y="287.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_ok (5 samples, 0.90%)</title><rect x="51.1670%" y="261" width="0.8977%" height="15" fill="rgb(245,139,43)" fg:x="285" fg:w="5"/><text x="51.4170%" y="271.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (10 samples, 1.80%)</title><rect x="52.0646%" y="325" width="1.7953%" height="15" fill="rgb(252,170,7)" fg:x="290" fg:w="10"/><text x="52.3146%" y="335.50">c..</text></g><g><title>core::sync::atomic::atomic_sub (10 samples, 1.80%)</title><rect x="52.0646%" y="309" width="1.7953%" height="15" fill="rgb(231,118,14)" fg:x="290" fg:w="10"/><text x="52.3146%" y="319.50">c..</text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::remove (5 samples, 0.90%)</title><rect x="53.8600%" y="325" width="0.8977%" height="15" fill="rgb(238,83,0)" fg:x="300" fg:w="5"/><text x="54.1100%" y="335.50"></text></g><g><title>&lt;tokio::runtime::task::Task&lt;S&gt; as tokio::util::linked_list::Link&gt;::pointers (1 samples, 0.18%)</title><rect x="54.5781%" y="309" width="0.1795%" height="15" fill="rgb(221,39,39)" fg:x="304" fg:w="1"/><text x="54.8281%" y="319.50"></text></g><g><title>tokio::runtime::task::core::Header::get_trailer (1 samples, 0.18%)</title><rect x="54.5781%" y="293" width="0.1795%" height="15" fill="rgb(222,119,46)" fg:x="304" fg:w="1"/><text x="54.8281%" y="303.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::release (39 samples, 7.00%)</title><rect x="49.1921%" y="357" width="7.0018%" height="15" fill="rgb(222,165,49)" fg:x="274" fg:w="39"/><text x="49.4421%" y="367.50">tokio::ru..</text></g><g><title>tokio::util::sharded_list::ShardedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::remove (28 samples, 5.03%)</title><rect x="51.1670%" y="341" width="5.0269%" height="15" fill="rgb(219,113,52)" fg:x="285" fg:w="28"/><text x="51.4170%" y="351.50">tokio:..</text></g><g><title>tokio::util::sharded_list::ShardedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::shard_inner (8 samples, 1.44%)</title><rect x="54.7576%" y="325" width="1.4363%" height="15" fill="rgb(214,7,15)" fg:x="305" fg:w="8"/><text x="55.0076%" y="335.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (7 samples, 1.26%)</title><rect x="54.9372%" y="309" width="1.2567%" height="15" fill="rgb(235,32,4)" fg:x="306" fg:w="7"/><text x="55.1872%" y="319.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (7 samples, 1.26%)</title><rect x="54.9372%" y="293" width="1.2567%" height="15" fill="rgb(238,90,54)" fg:x="306" fg:w="7"/><text x="55.1872%" y="303.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (7 samples, 1.26%)</title><rect x="54.9372%" y="277" width="1.2567%" height="15" fill="rgb(213,208,19)" fg:x="306" fg:w="7"/><text x="55.1872%" y="287.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_err (7 samples, 1.26%)</title><rect x="54.9372%" y="261" width="1.2567%" height="15" fill="rgb(233,156,4)" fg:x="306" fg:w="7"/><text x="55.1872%" y="271.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_ok (7 samples, 1.26%)</title><rect x="54.9372%" y="245" width="1.2567%" height="15" fill="rgb(207,194,5)" fg:x="306" fg:w="7"/><text x="55.1872%" y="255.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_complete (3 samples, 0.54%)</title><rect x="56.1939%" y="357" width="0.5386%" height="15" fill="rgb(206,111,30)" fg:x="313" fg:w="3"/><text x="56.4439%" y="367.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_xor (2 samples, 0.36%)</title><rect x="56.3734%" y="341" width="0.3591%" height="15" fill="rgb(243,70,54)" fg:x="314" fg:w="2"/><text x="56.6234%" y="351.50"></text></g><g><title>core::sync::atomic::atomic_xor (2 samples, 0.36%)</title><rect x="56.3734%" y="325" width="0.3591%" height="15" fill="rgb(242,28,8)" fg:x="314" fg:w="2"/><text x="56.6234%" y="335.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::complete (46 samples, 8.26%)</title><rect x="49.1921%" y="373" width="8.2585%" height="15" fill="rgb(219,106,18)" fg:x="274" fg:w="46"/><text x="49.4421%" y="383.50">tokio::runt..</text></g><g><title>tokio::runtime::task::state::State::transition_to_terminal (4 samples, 0.72%)</title><rect x="56.7325%" y="357" width="0.7181%" height="15" fill="rgb(244,222,10)" fg:x="316" fg:w="4"/><text x="56.9825%" y="367.50"></text></g><g><title>tokio::runtime::task::state::Snapshot::ref_count (4 samples, 0.72%)</title><rect x="56.7325%" y="341" width="0.7181%" height="15" fill="rgb(236,179,52)" fg:x="316" fg:w="4"/><text x="56.9825%" y="351.50"></text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::new (3 samples, 0.54%)</title><rect x="57.6302%" y="309" width="0.5386%" height="15" fill="rgb(213,23,39)" fg:x="321" fg:w="3"/><text x="57.8802%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::TaskIdGuard&gt; (1 samples, 0.18%)</title><rect x="58.1688%" y="213" width="0.1795%" height="15" fill="rgb(238,48,10)" fg:x="324" fg:w="1"/><text x="58.4188%" y="223.50"></text></g><g><title>&lt;tokio::runtime::task::core::TaskIdGuard as core::ops::drop::Drop&gt;::drop (1 samples, 0.18%)</title><rect x="58.1688%" y="197" width="0.1795%" height="15" fill="rgb(251,196,23)" fg:x="324" fg:w="1"/><text x="58.4188%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;std::sync::mutex::Mutex&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;image::color::Rgb&lt;u8&gt;&gt;&gt;&gt;&gt;&gt; (11 samples, 1.97%)</title><rect x="58.8869%" y="197" width="1.9749%" height="15" fill="rgb(250,152,24)" fg:x="328" fg:w="11"/><text x="59.1369%" y="207.50">c..</text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 1.97%)</title><rect x="58.8869%" y="181" width="1.9749%" height="15" fill="rgb(209,150,17)" fg:x="328" fg:w="11"/><text x="59.1369%" y="191.50">&lt;..</text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1 samples, 0.18%)</title><rect x="60.6822%" y="165" width="0.1795%" height="15" fill="rgb(234,202,34)" fg:x="338" fg:w="1"/><text x="60.9322%" y="175.50"></text></g><g><title>core::sync::atomic::atomic_sub (1 samples, 0.18%)</title><rect x="60.6822%" y="149" width="0.1795%" height="15" fill="rgb(253,148,53)" fg:x="338" fg:w="1"/><text x="60.9322%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;image::color::Rgb&lt;u8&gt;&gt;&gt;&gt;&gt; (6 samples, 1.08%)</title><rect x="60.8618%" y="197" width="1.0772%" height="15" fill="rgb(218,129,16)" fg:x="339" fg:w="6"/><text x="61.1118%" y="207.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 1.08%)</title><rect x="60.8618%" y="181" width="1.0772%" height="15" fill="rgb(216,85,19)" fg:x="339" fg:w="6"/><text x="61.1118%" y="191.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (6 samples, 1.08%)</title><rect x="60.8618%" y="165" width="1.0772%" height="15" fill="rgb(235,228,7)" fg:x="339" fg:w="6"/><text x="61.1118%" y="175.50"></text></g><g><title>syscall (1 samples, 0.18%)</title><rect x="61.7594%" y="149" width="0.1795%" height="15" fill="rgb(245,175,0)" fg:x="344" fg:w="1"/><text x="62.0094%" y="159.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="61.7594%" y="133" width="0.1795%" height="15" fill="rgb(208,168,36)" fg:x="344" fg:w="1"/><text x="62.0094%" y="143.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="61.7594%" y="117" width="0.1795%" height="15" fill="rgb(246,171,24)" fg:x="344" fg:w="1"/><text x="62.0094%" y="127.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="61.7594%" y="101" width="0.1795%" height="15" fill="rgb(215,142,24)" fg:x="344" fg:w="1"/><text x="62.0094%" y="111.50"></text></g><g><title>&lt;num_complex::Complex&lt;T&gt; as core::ops::arith::Mul&gt;::mul (1 samples, 0.18%)</title><rect x="64.0934%" y="181" width="0.1795%" height="15" fill="rgb(250,187,7)" fg:x="357" fg:w="1"/><text x="64.3434%" y="191.50"></text></g><g><title>&lt;f64 as core::ops::arith::Sub&gt;::sub (1 samples, 0.18%)</title><rect x="64.0934%" y="165" width="0.1795%" height="15" fill="rgb(228,66,33)" fg:x="357" fg:w="1"/><text x="64.3434%" y="175.50"></text></g><g><title>num_complex::Complex&lt;T&gt;::norm (37 samples, 6.64%)</title><rect x="64.2729%" y="181" width="6.6427%" height="15" fill="rgb(234,215,21)" fg:x="358" fg:w="37"/><text x="64.5229%" y="191.50">num_compl..</text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::hypot (37 samples, 6.64%)</title><rect x="64.2729%" y="165" width="6.6427%" height="15" fill="rgb(222,191,20)" fg:x="358" fg:w="37"/><text x="64.5229%" y="175.50">&lt;f64 as n..</text></g><g><title>std::f64::&lt;impl f64&gt;::hypot (37 samples, 6.64%)</title><rect x="64.2729%" y="149" width="6.6427%" height="15" fill="rgb(245,79,54)" fg:x="358" fg:w="37"/><text x="64.5229%" y="159.50">std::f64:..</text></g><g><title>hypot (35 samples, 6.28%)</title><rect x="64.6320%" y="133" width="6.2837%" height="15" fill="rgb(240,10,37)" fg:x="360" fg:w="35"/><text x="64.8820%" y="143.50">hypot</text></g><g><title>julia::color_generator::_{{closure}} (79 samples, 14.18%)</title><rect x="61.9390%" y="197" width="14.1831%" height="15" fill="rgb(214,192,32)" fg:x="345" fg:w="79"/><text x="62.1890%" y="207.50">julia::color_generator..</text></g><g><title>std::f64::&lt;impl f64&gt;::powf (29 samples, 5.21%)</title><rect x="70.9156%" y="181" width="5.2065%" height="15" fill="rgb(209,36,54)" fg:x="395" fg:w="29"/><text x="71.1656%" y="191.50">std::f..</text></g><g><title>pow (29 samples, 5.21%)</title><rect x="70.9156%" y="165" width="5.2065%" height="15" fill="rgb(220,10,11)" fg:x="395" fg:w="29"/><text x="71.1656%" y="175.50">pow</text></g><g><title>[libm.so.6] (23 samples, 4.13%)</title><rect x="71.9928%" y="149" width="4.1293%" height="15" fill="rgb(221,106,17)" fg:x="401" fg:w="23"/><text x="72.2428%" y="159.50">[lib..</text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (2 samples, 0.36%)</title><rect x="76.1221%" y="181" width="0.3591%" height="15" fill="rgb(251,142,44)" fg:x="424" fg:w="2"/><text x="76.3721%" y="191.50"></text></g><g><title>std::sync::poison::Flag::guard (2 samples, 0.36%)</title><rect x="76.1221%" y="165" width="0.3591%" height="15" fill="rgb(238,13,15)" fg:x="424" fg:w="2"/><text x="76.3721%" y="175.50"></text></g><g><title>std::thread::panicking (1 samples, 0.18%)</title><rect x="76.3016%" y="149" width="0.1795%" height="15" fill="rgb(208,107,27)" fg:x="425" fg:w="1"/><text x="76.5516%" y="159.50"></text></g><g><title>std::panicking::panicking (1 samples, 0.18%)</title><rect x="76.3016%" y="133" width="0.1795%" height="15" fill="rgb(205,136,37)" fg:x="425" fg:w="1"/><text x="76.5516%" y="143.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (1 samples, 0.18%)</title><rect x="76.3016%" y="117" width="0.1795%" height="15" fill="rgb(250,205,27)" fg:x="425" fg:w="1"/><text x="76.5516%" y="127.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_err (10 samples, 1.80%)</title><rect x="76.4811%" y="165" width="1.7953%" height="15" fill="rgb(210,80,43)" fg:x="426" fg:w="10"/><text x="76.7311%" y="175.50">c..</text></g><g><title>core::result::Result&lt;T,E&gt;::is_ok (10 samples, 1.80%)</title><rect x="76.4811%" y="149" width="1.7953%" height="15" fill="rgb(247,160,36)" fg:x="426" fg:w="10"/><text x="76.7311%" y="159.50">c..</text></g><g><title>std::sys::pal::unix::futex::futex_wait (1 samples, 0.18%)</title><rect x="78.4560%" y="149" width="0.1795%" height="15" fill="rgb(234,13,49)" fg:x="437" fg:w="1"/><text x="78.7060%" y="159.50"></text></g><g><title>syscall (1 samples, 0.18%)</title><rect x="78.4560%" y="133" width="0.1795%" height="15" fill="rgb(234,122,0)" fg:x="437" fg:w="1"/><text x="78.7060%" y="143.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="78.4560%" y="117" width="0.1795%" height="15" fill="rgb(207,146,38)" fg:x="437" fg:w="1"/><text x="78.7060%" y="127.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="78.4560%" y="101" width="0.1795%" height="15" fill="rgb(207,177,25)" fg:x="437" fg:w="1"/><text x="78.7060%" y="111.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="78.4560%" y="85" width="0.1795%" height="15" fill="rgb(211,178,42)" fg:x="437" fg:w="1"/><text x="78.7060%" y="95.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="78.4560%" y="69" width="0.1795%" height="15" fill="rgb(230,69,54)" fg:x="437" fg:w="1"/><text x="78.7060%" y="79.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="78.4560%" y="53" width="0.1795%" height="15" fill="rgb(214,135,41)" fg:x="437" fg:w="1"/><text x="78.7060%" y="63.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="78.4560%" y="37" width="0.1795%" height="15" fill="rgb(237,67,25)" fg:x="437" fg:w="1"/><text x="78.7060%" y="47.50"></text></g><g><title>julia::generate_image_buffer::_{{closure}}::_{{closure}} (114 samples, 20.47%)</title><rect x="58.3483%" y="213" width="20.4668%" height="15" fill="rgb(222,189,50)" fg:x="325" fg:w="114"/><text x="58.5983%" y="223.50">julia::generate_image_buffer::_{..</text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (15 samples, 2.69%)</title><rect x="76.1221%" y="197" width="2.6930%" height="15" fill="rgb(245,148,34)" fg:x="424" fg:w="15"/><text x="76.3721%" y="207.50">st..</text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (13 samples, 2.33%)</title><rect x="76.4811%" y="181" width="2.3339%" height="15" fill="rgb(222,29,6)" fg:x="426" fg:w="13"/><text x="76.7311%" y="191.50">s..</text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock_contended (3 samples, 0.54%)</title><rect x="78.2765%" y="165" width="0.5386%" height="15" fill="rgb(221,189,43)" fg:x="436" fg:w="3"/><text x="78.5265%" y="175.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::spin (1 samples, 0.18%)</title><rect x="78.6355%" y="149" width="0.1795%" height="15" fill="rgb(207,36,27)" fg:x="438" fg:w="1"/><text x="78.8855%" y="159.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (116 samples, 20.83%)</title><rect x="58.1688%" y="245" width="20.8259%" height="15" fill="rgb(217,90,24)" fg:x="324" fg:w="116"/><text x="58.4188%" y="255.50">tokio::loom::std::unsafe_cell::Un..</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::_{{closure}} (116 samples, 20.83%)</title><rect x="58.1688%" y="229" width="20.8259%" height="15" fill="rgb(224,66,35)" fg:x="324" fg:w="116"/><text x="58.4188%" y="239.50">tokio::runtime::task::core::Core&lt;..</text></g><g><title>tokio::runtime::task::core::TaskIdGuard::enter (1 samples, 0.18%)</title><rect x="78.8151%" y="213" width="0.1795%" height="15" fill="rgb(221,13,50)" fg:x="439" fg:w="1"/><text x="79.0651%" y="223.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (127 samples, 22.80%)</title><rect x="58.1688%" y="261" width="22.8007%" height="15" fill="rgb(236,68,49)" fg:x="324" fg:w="127"/><text x="58.4188%" y="271.50">tokio::runtime::task::core::Core&lt;T,S..</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::drop_future_or_output (11 samples, 1.97%)</title><rect x="78.9946%" y="245" width="1.9749%" height="15" fill="rgb(229,146,28)" fg:x="440" fg:w="11"/><text x="79.2446%" y="255.50">t..</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::set_stage (11 samples, 1.97%)</title><rect x="78.9946%" y="229" width="1.9749%" height="15" fill="rgb(225,31,38)" fg:x="440" fg:w="11"/><text x="79.2446%" y="239.50">t..</text></g><g><title>tokio::runtime::task::core::TaskIdGuard::enter (1 samples, 0.18%)</title><rect x="80.7899%" y="213" width="0.1795%" height="15" fill="rgb(250,208,3)" fg:x="450" fg:w="1"/><text x="81.0399%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::TaskIdGuard&gt; (1 samples, 0.18%)</title><rect x="82.2262%" y="229" width="0.1795%" height="15" fill="rgb(246,54,23)" fg:x="458" fg:w="1"/><text x="82.4762%" y="239.50"></text></g><g><title>&lt;tokio::runtime::task::core::TaskIdGuard as core::ops::drop::Drop&gt;::drop (1 samples, 0.18%)</title><rect x="82.2262%" y="213" width="0.1795%" height="15" fill="rgb(243,76,11)" fg:x="458" fg:w="1"/><text x="82.4762%" y="223.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (2 samples, 0.36%)</title><rect x="82.4057%" y="229" width="0.3591%" height="15" fill="rgb(245,21,50)" fg:x="459" fg:w="2"/><text x="82.6557%" y="239.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::set_stage::_{{closure}} (2 samples, 0.36%)</title><rect x="82.4057%" y="213" width="0.3591%" height="15" fill="rgb(228,9,43)" fg:x="459" fg:w="2"/><text x="82.6557%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::Stage&lt;julia::generate_image_buffer::{{closure}}::{{closure}}&gt;&gt; (2 samples, 0.36%)</title><rect x="82.4057%" y="197" width="0.3591%" height="15" fill="rgb(208,100,47)" fg:x="459" fg:w="2"/><text x="82.6557%" y="207.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (142 samples, 25.49%)</title><rect x="57.4506%" y="357" width="25.4937%" height="15" fill="rgb(232,26,8)" fg:x="320" fg:w="142"/><text x="57.7006%" y="367.50">tokio::runtime::task::harness::poll_future</text></g><g><title>std::panic::catch_unwind (142 samples, 25.49%)</title><rect x="57.4506%" y="341" width="25.4937%" height="15" fill="rgb(216,166,38)" fg:x="320" fg:w="142"/><text x="57.7006%" y="351.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (142 samples, 25.49%)</title><rect x="57.4506%" y="325" width="25.4937%" height="15" fill="rgb(251,202,51)" fg:x="320" fg:w="142"/><text x="57.7006%" y="335.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (138 samples, 24.78%)</title><rect x="58.1688%" y="309" width="24.7756%" height="15" fill="rgb(254,216,34)" fg:x="324" fg:w="138"/><text x="58.4188%" y="319.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (138 samples, 24.78%)</title><rect x="58.1688%" y="293" width="24.7756%" height="15" fill="rgb(251,32,27)" fg:x="324" fg:w="138"/><text x="58.4188%" y="303.50">&lt;core::panic::unwind_safe::AssertUnwind..</text></g><g><title>tokio::runtime::task::harness::poll_future::_{{closure}} (138 samples, 24.78%)</title><rect x="58.1688%" y="277" width="24.7756%" height="15" fill="rgb(208,127,28)" fg:x="324" fg:w="138"/><text x="58.4188%" y="287.50">tokio::runtime::task::harness::poll_fut..</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::store_output (11 samples, 1.97%)</title><rect x="80.9695%" y="261" width="1.9749%" height="15" fill="rgb(224,137,22)" fg:x="451" fg:w="11"/><text x="81.2195%" y="271.50">t..</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::set_stage (11 samples, 1.97%)</title><rect x="80.9695%" y="245" width="1.9749%" height="15" fill="rgb(254,70,32)" fg:x="451" fg:w="11"/><text x="81.2195%" y="255.50">t..</text></g><g><title>tokio::runtime::task::core::TaskIdGuard::enter (1 samples, 0.18%)</title><rect x="82.7648%" y="229" width="0.1795%" height="15" fill="rgb(229,75,37)" fg:x="461" fg:w="1"/><text x="83.0148%" y="239.50"></text></g><g><title>tokio::runtime::context::set_current_task_id (1 samples, 0.18%)</title><rect x="82.7648%" y="213" width="0.1795%" height="15" fill="rgb(252,64,23)" fg:x="461" fg:w="1"/><text x="83.0148%" y="223.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.18%)</title><rect x="82.7648%" y="197" width="0.1795%" height="15" fill="rgb(232,162,48)" fg:x="461" fg:w="1"/><text x="83.0148%" y="207.50"></text></g><g><title>tokio::runtime::context::set_current_task_id::_{{closure}} (1 samples, 0.18%)</title><rect x="82.7648%" y="181" width="0.1795%" height="15" fill="rgb(246,160,12)" fg:x="461" fg:w="1"/><text x="83.0148%" y="191.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (1 samples, 0.18%)</title><rect x="82.7648%" y="165" width="0.1795%" height="15" fill="rgb(247,166,0)" fg:x="461" fg:w="1"/><text x="83.0148%" y="175.50"></text></g><g><title>core::mem::replace (1 samples, 0.18%)</title><rect x="82.7648%" y="149" width="0.1795%" height="15" fill="rgb(249,219,21)" fg:x="461" fg:w="1"/><text x="83.0148%" y="159.50"></text></g><g><title>core::ptr::read (1 samples, 0.18%)</title><rect x="82.7648%" y="133" width="0.1795%" height="15" fill="rgb(205,209,3)" fg:x="461" fg:w="1"/><text x="83.0148%" y="143.50"></text></g><g><title>tokio::runtime::coop::budget (195 samples, 35.01%)</title><rect x="48.8330%" y="469" width="35.0090%" height="15" fill="rgb(243,44,1)" fg:x="272" fg:w="195"/><text x="49.0830%" y="479.50">tokio::runtime::coop::budget</text></g><g><title>tokio::runtime::coop::with_budget (195 samples, 35.01%)</title><rect x="48.8330%" y="453" width="35.0090%" height="15" fill="rgb(206,159,16)" fg:x="272" fg:w="195"/><text x="49.0830%" y="463.50">tokio::runtime::coop::with_budget</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task::_{{closure}} (194 samples, 34.83%)</title><rect x="49.0126%" y="437" width="34.8294%" height="15" fill="rgb(244,77,30)" fg:x="273" fg:w="194"/><text x="49.2626%" y="447.50">tokio::runtime::scheduler::multi_thread::worker::Context:..</text></g><g><title>tokio::runtime::task::LocalNotified&lt;S&gt;::run (193 samples, 34.65%)</title><rect x="49.1921%" y="421" width="34.6499%" height="15" fill="rgb(218,69,12)" fg:x="274" fg:w="193"/><text x="49.4421%" y="431.50">tokio::runtime::task::LocalNotified&lt;S&gt;::run</text></g><g><title>tokio::runtime::task::raw::RawTask::poll (193 samples, 34.65%)</title><rect x="49.1921%" y="405" width="34.6499%" height="15" fill="rgb(212,87,7)" fg:x="274" fg:w="193"/><text x="49.4421%" y="415.50">tokio::runtime::task::raw::RawTask::poll</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (193 samples, 34.65%)</title><rect x="49.1921%" y="389" width="34.6499%" height="15" fill="rgb(245,114,25)" fg:x="274" fg:w="193"/><text x="49.4421%" y="399.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (147 samples, 26.39%)</title><rect x="57.4506%" y="373" width="26.3914%" height="15" fill="rgb(210,61,42)" fg:x="320" fg:w="147"/><text x="57.7006%" y="383.50">tokio::runtime::task::harness::Harness&lt;T,S..</text></g><g><title>tokio::runtime::task::state::State::transition_to_running (5 samples, 0.90%)</title><rect x="82.9443%" y="357" width="0.8977%" height="15" fill="rgb(211,52,33)" fg:x="462" fg:w="5"/><text x="83.1943%" y="367.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update_action (5 samples, 0.90%)</title><rect x="82.9443%" y="341" width="0.8977%" height="15" fill="rgb(234,58,33)" fg:x="462" fg:w="5"/><text x="83.1943%" y="351.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::UnparkHandle as parking_lot_core::thread_parker::UnparkHandleT&gt;::unpark (8 samples, 1.44%)</title><rect x="84.0215%" y="421" width="1.4363%" height="15" fill="rgb(220,115,36)" fg:x="468" fg:w="8"/><text x="84.2715%" y="431.50"></text></g><g><title>syscall (8 samples, 1.44%)</title><rect x="84.0215%" y="405" width="1.4363%" height="15" fill="rgb(243,153,54)" fg:x="468" fg:w="8"/><text x="84.2715%" y="415.50"></text></g><g><title>[unknown] (8 samples, 1.44%)</title><rect x="84.0215%" y="389" width="1.4363%" height="15" fill="rgb(251,47,18)" fg:x="468" fg:w="8"/><text x="84.2715%" y="399.50"></text></g><g><title>[unknown] (8 samples, 1.44%)</title><rect x="84.0215%" y="373" width="1.4363%" height="15" fill="rgb(242,102,42)" fg:x="468" fg:w="8"/><text x="84.2715%" y="383.50"></text></g><g><title>[unknown] (7 samples, 1.26%)</title><rect x="84.2011%" y="357" width="1.2567%" height="15" fill="rgb(234,31,38)" fg:x="469" fg:w="7"/><text x="84.4511%" y="367.50"></text></g><g><title>[unknown] (7 samples, 1.26%)</title><rect x="84.2011%" y="341" width="1.2567%" height="15" fill="rgb(221,117,51)" fg:x="469" fg:w="7"/><text x="84.4511%" y="351.50"></text></g><g><title>[unknown] (6 samples, 1.08%)</title><rect x="84.3806%" y="325" width="1.0772%" height="15" fill="rgb(212,20,18)" fg:x="470" fg:w="6"/><text x="84.6306%" y="335.50"></text></g><g><title>[unknown] (3 samples, 0.54%)</title><rect x="84.9192%" y="309" width="0.5386%" height="15" fill="rgb(245,133,36)" fg:x="473" fg:w="3"/><text x="85.1692%" y="319.50"></text></g><g><title>[unknown] (2 samples, 0.36%)</title><rect x="85.0987%" y="293" width="0.3591%" height="15" fill="rgb(212,6,19)" fg:x="474" fg:w="2"/><text x="85.3487%" y="303.50"></text></g><g><title>[unknown] (2 samples, 0.36%)</title><rect x="85.0987%" y="277" width="0.3591%" height="15" fill="rgb(218,1,36)" fg:x="474" fg:w="2"/><text x="85.3487%" y="287.50"></text></g><g><title>[unknown] (2 samples, 0.36%)</title><rect x="85.0987%" y="261" width="0.3591%" height="15" fill="rgb(246,84,54)" fg:x="474" fg:w="2"/><text x="85.3487%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="85.2783%" y="245" width="0.1795%" height="15" fill="rgb(242,110,6)" fg:x="475" fg:w="1"/><text x="85.5283%" y="255.50"></text></g><g><title>parking_lot_core::parking_lot::FairTimeout::should_timeout (1 samples, 0.18%)</title><rect x="85.4578%" y="421" width="0.1795%" height="15" fill="rgb(214,47,5)" fg:x="476" fg:w="1"/><text x="85.7078%" y="431.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (1 samples, 0.18%)</title><rect x="85.4578%" y="405" width="0.1795%" height="15" fill="rgb(218,159,25)" fg:x="476" fg:w="1"/><text x="85.7078%" y="415.50"></text></g><g><title>clock_gettime@@GLIBC_2.17 (1 samples, 0.18%)</title><rect x="85.4578%" y="389" width="0.1795%" height="15" fill="rgb(215,211,28)" fg:x="476" fg:w="1"/><text x="85.7078%" y="399.50"></text></g><g><title>__vdso_clock_gettime (1 samples, 0.18%)</title><rect x="85.4578%" y="373" width="0.1795%" height="15" fill="rgb(238,59,32)" fg:x="476" fg:w="1"/><text x="85.7078%" y="383.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (12 samples, 2.15%)</title><rect x="83.8420%" y="453" width="2.1544%" height="15" fill="rgb(226,82,3)" fg:x="467" fg:w="12"/><text x="84.0920%" y="463.50">p..</text></g><g><title>parking_lot_core::parking_lot::unpark_requeue (12 samples, 2.15%)</title><rect x="83.8420%" y="437" width="2.1544%" height="15" fill="rgb(240,164,32)" fg:x="467" fg:w="12"/><text x="84.0920%" y="447.50">p..</text></g><g><title>parking_lot_core::parking_lot::lock_bucket_pair (2 samples, 0.36%)</title><rect x="85.6373%" y="421" width="0.3591%" height="15" fill="rgb(232,46,7)" fg:x="477" fg:w="2"/><text x="85.8873%" y="431.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::lock (2 samples, 0.36%)</title><rect x="85.6373%" y="405" width="0.3591%" height="15" fill="rgb(229,129,53)" fg:x="477" fg:w="2"/><text x="85.8873%" y="415.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_ok (2 samples, 0.36%)</title><rect x="85.6373%" y="389" width="0.3591%" height="15" fill="rgb(234,188,29)" fg:x="477" fg:w="2"/><text x="85.8873%" y="399.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Unparker::unpark (3 samples, 0.54%)</title><rect x="85.9964%" y="453" width="0.5386%" height="15" fill="rgb(246,141,4)" fg:x="479" fg:w="3"/><text x="86.2464%" y="463.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::unpark (3 samples, 0.54%)</title><rect x="85.9964%" y="437" width="0.5386%" height="15" fill="rgb(229,23,39)" fg:x="479" fg:w="3"/><text x="86.2464%" y="447.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::transition_worker_from_searching (1 samples, 0.18%)</title><rect x="86.5350%" y="437" width="0.1795%" height="15" fill="rgb(206,12,3)" fg:x="482" fg:w="1"/><text x="86.7850%" y="447.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::State::dec_num_searching (1 samples, 0.18%)</title><rect x="86.5350%" y="421" width="0.1795%" height="15" fill="rgb(252,226,20)" fg:x="482" fg:w="1"/><text x="86.7850%" y="431.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task (215 samples, 38.60%)</title><rect x="48.6535%" y="485" width="38.5996%" height="15" fill="rgb(216,123,35)" fg:x="271" fg:w="215"/><text x="48.9035%" y="495.50">tokio::runtime::scheduler::multi_thread::worker::Context::run_t..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::transition_from_searching (19 samples, 3.41%)</title><rect x="83.8420%" y="469" width="3.4111%" height="15" fill="rgb(212,68,40)" fg:x="467" fg:w="19"/><text x="84.0920%" y="479.50">tok..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::transition_worker_from_searching (4 samples, 0.72%)</title><rect x="86.5350%" y="453" width="0.7181%" height="15" fill="rgb(254,125,32)" fg:x="482" fg:w="4"/><text x="86.7850%" y="463.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::notify_parked_local (3 samples, 0.54%)</title><rect x="86.7145%" y="437" width="0.5386%" height="15" fill="rgb(253,97,22)" fg:x="483" fg:w="3"/><text x="86.9645%" y="447.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::worker_to_notify (3 samples, 0.54%)</title><rect x="86.7145%" y="421" width="0.5386%" height="15" fill="rgb(241,101,14)" fg:x="483" fg:w="3"/><text x="86.9645%" y="431.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::notify_should_wakeup (3 samples, 0.54%)</title><rect x="86.7145%" y="405" width="0.5386%" height="15" fill="rgb(238,103,29)" fg:x="483" fg:w="3"/><text x="86.9645%" y="415.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (1 samples, 0.18%)</title><rect x="87.0736%" y="389" width="0.1795%" height="15" fill="rgb(233,195,47)" fg:x="485" fg:w="1"/><text x="87.3236%" y="399.50"></text></g><g><title>core::sync::atomic::atomic_add (1 samples, 0.18%)</title><rect x="87.0736%" y="373" width="0.1795%" height="15" fill="rgb(246,218,30)" fg:x="485" fg:w="1"/><text x="87.3236%" y="383.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (2 samples, 0.36%)</title><rect x="89.5871%" y="437" width="0.3591%" height="15" fill="rgb(219,145,47)" fg:x="499" fg:w="2"/><text x="89.8371%" y="447.50"></text></g><g><title>&lt;tokio::runtime::scheduler::inject::pop::Pop&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 1.26%)</title><rect x="88.8689%" y="469" width="1.2567%" height="15" fill="rgb(243,12,26)" fg:x="495" fg:w="7"/><text x="89.1189%" y="479.50"></text></g><g><title>tokio::runtime::scheduler::inject::synced::Synced::pop (7 samples, 1.26%)</title><rect x="88.8689%" y="453" width="1.2567%" height="15" fill="rgb(214,87,16)" fg:x="495" fg:w="7"/><text x="89.1189%" y="463.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::get_queue_next (1 samples, 0.18%)</title><rect x="89.9461%" y="437" width="0.1795%" height="15" fill="rgb(208,99,42)" fg:x="501" fg:w="1"/><text x="90.1961%" y="447.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.18%)</title><rect x="89.9461%" y="421" width="0.1795%" height="15" fill="rgb(253,99,2)" fg:x="501" fg:w="1"/><text x="90.1961%" y="431.50"></text></g><g><title>core::cmp::Ord::min (1 samples, 0.18%)</title><rect x="90.1257%" y="469" width="0.1795%" height="15" fill="rgb(220,168,23)" fg:x="502" fg:w="1"/><text x="90.3757%" y="479.50"></text></g><g><title>core::cmp::min_by (1 samples, 0.18%)</title><rect x="90.1257%" y="453" width="0.1795%" height="15" fill="rgb(242,38,24)" fg:x="502" fg:w="1"/><text x="90.3757%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;tokio::runtime::task::Notified&lt;alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;&gt;&gt; (2 samples, 0.36%)</title><rect x="90.3052%" y="469" width="0.3591%" height="15" fill="rgb(225,182,9)" fg:x="503" fg:w="2"/><text x="90.5552%" y="479.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_ok (13 samples, 2.33%)</title><rect x="90.6643%" y="405" width="2.3339%" height="15" fill="rgb(243,178,37)" fg:x="505" fg:w="13"/><text x="90.9143%" y="415.50">c..</text></g><g><title>parking_lot_core::parking_lot::FairTimeout::should_timeout (1 samples, 0.18%)</title><rect x="92.9982%" y="373" width="0.1795%" height="15" fill="rgb(232,139,19)" fg:x="518" fg:w="1"/><text x="93.2482%" y="383.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (1 samples, 0.18%)</title><rect x="92.9982%" y="357" width="0.1795%" height="15" fill="rgb(225,201,24)" fg:x="518" fg:w="1"/><text x="93.2482%" y="367.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::new (1 samples, 0.18%)</title><rect x="92.9982%" y="341" width="0.1795%" height="15" fill="rgb(221,47,46)" fg:x="518" fg:w="1"/><text x="93.2482%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;tokio::runtime::scheduler::multi_thread::worker::Synced&gt;&gt; (15 samples, 2.69%)</title><rect x="90.6643%" y="469" width="2.6930%" height="15" fill="rgb(249,23,13)" fg:x="505" fg:w="15"/><text x="90.9143%" y="479.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::scheduler::multi_thread::worker::Synced&gt;&gt; (15 samples, 2.69%)</title><rect x="90.6643%" y="453" width="2.6930%" height="15" fill="rgb(219,9,5)" fg:x="505" fg:w="15"/><text x="90.9143%" y="463.50">co..</text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 2.69%)</title><rect x="90.6643%" y="437" width="2.6930%" height="15" fill="rgb(254,171,16)" fg:x="505" fg:w="15"/><text x="90.9143%" y="447.50">&lt;l..</text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (15 samples, 2.69%)</title><rect x="90.6643%" y="421" width="2.6930%" height="15" fill="rgb(230,171,20)" fg:x="505" fg:w="15"/><text x="90.9143%" y="431.50">&lt;p..</text></g><g><title>parking_lot::raw_mutex::RawMutex::unlock_slow (2 samples, 0.36%)</title><rect x="92.9982%" y="405" width="0.3591%" height="15" fill="rgb(210,71,41)" fg:x="518" fg:w="2"/><text x="93.2482%" y="415.50"></text></g><g><title>parking_lot_core::parking_lot::unpark_one (2 samples, 0.36%)</title><rect x="92.9982%" y="389" width="0.3591%" height="15" fill="rgb(206,173,20)" fg:x="518" fg:w="2"/><text x="93.2482%" y="399.50"></text></g><g><title>parking_lot_core::parking_lot::lock_bucket (1 samples, 0.18%)</title><rect x="93.1777%" y="373" width="0.1795%" height="15" fill="rgb(233,88,34)" fg:x="519" fg:w="1"/><text x="93.4277%" y="383.50"></text></g><g><title>parking_lot_core::parking_lot::hash (1 samples, 0.18%)</title><rect x="93.1777%" y="357" width="0.1795%" height="15" fill="rgb(223,209,46)" fg:x="519" fg:w="1"/><text x="93.4277%" y="367.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_err (5 samples, 0.90%)</title><rect x="93.5368%" y="421" width="0.8977%" height="15" fill="rgb(250,43,18)" fg:x="521" fg:w="5"/><text x="93.7868%" y="431.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_ok (5 samples, 0.90%)</title><rect x="93.5368%" y="405" width="0.8977%" height="15" fill="rgb(208,13,10)" fg:x="521" fg:w="5"/><text x="93.7868%" y="415.50"></text></g><g><title>core::sync::atomic::AtomicU8::load (8 samples, 1.44%)</title><rect x="94.4345%" y="405" width="1.4363%" height="15" fill="rgb(212,200,36)" fg:x="526" fg:w="8"/><text x="94.6845%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_load (8 samples, 1.44%)</title><rect x="94.4345%" y="389" width="1.4363%" height="15" fill="rgb(225,90,30)" fg:x="526" fg:w="8"/><text x="94.6845%" y="399.50"></text></g><g><title>core::hint::spin_loop (2 samples, 0.36%)</title><rect x="95.8707%" y="373" width="0.3591%" height="15" fill="rgb(236,182,39)" fg:x="534" fg:w="2"/><text x="96.1207%" y="383.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (2 samples, 0.36%)</title><rect x="95.8707%" y="357" width="0.3591%" height="15" fill="rgb(212,144,35)" fg:x="534" fg:w="2"/><text x="96.1207%" y="367.50"></text></g><g><title>parking_lot_core::spinwait::cpu_relax (4 samples, 0.72%)</title><rect x="95.8707%" y="389" width="0.7181%" height="15" fill="rgb(228,63,44)" fg:x="534" fg:w="4"/><text x="96.1207%" y="399.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (2 samples, 0.36%)</title><rect x="96.2298%" y="373" width="0.3591%" height="15" fill="rgb(228,109,6)" fg:x="536" fg:w="2"/><text x="96.4798%" y="383.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (2 samples, 0.36%)</title><rect x="96.2298%" y="357" width="0.3591%" height="15" fill="rgb(238,117,24)" fg:x="536" fg:w="2"/><text x="96.4798%" y="367.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (19 samples, 3.41%)</title><rect x="93.3573%" y="469" width="3.4111%" height="15" fill="rgb(242,26,26)" fg:x="520" fg:w="19"/><text x="93.6073%" y="479.50">tok..</text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (18 samples, 3.23%)</title><rect x="93.5368%" y="453" width="3.2316%" height="15" fill="rgb(221,92,48)" fg:x="521" fg:w="18"/><text x="93.7868%" y="463.50">loc..</text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (18 samples, 3.23%)</title><rect x="93.5368%" y="437" width="3.2316%" height="15" fill="rgb(209,209,32)" fg:x="521" fg:w="18"/><text x="93.7868%" y="447.50">&lt;pa..</text></g><g><title>parking_lot::raw_mutex::RawMutex::lock_slow (13 samples, 2.33%)</title><rect x="94.4345%" y="421" width="2.3339%" height="15" fill="rgb(221,70,22)" fg:x="526" fg:w="13"/><text x="94.6845%" y="431.50">p..</text></g><g><title>parking_lot_core::spinwait::SpinWait::spin (5 samples, 0.90%)</title><rect x="95.8707%" y="405" width="0.8977%" height="15" fill="rgb(248,145,5)" fg:x="534" fg:w="5"/><text x="96.1207%" y="415.50"></text></g><g><title>parking_lot_core::thread_parker::imp::thread_yield (1 samples, 0.18%)</title><rect x="96.5889%" y="389" width="0.1795%" height="15" fill="rgb(226,116,26)" fg:x="538" fg:w="1"/><text x="96.8389%" y="399.50"></text></g><g><title>__sched_yield (1 samples, 0.18%)</title><rect x="96.5889%" y="373" width="0.1795%" height="15" fill="rgb(244,5,17)" fg:x="538" fg:w="1"/><text x="96.8389%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="96.5889%" y="357" width="0.1795%" height="15" fill="rgb(252,159,33)" fg:x="538" fg:w="1"/><text x="96.8389%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="96.5889%" y="341" width="0.1795%" height="15" fill="rgb(206,71,0)" fg:x="538" fg:w="1"/><text x="96.8389%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="96.5889%" y="325" width="0.1795%" height="15" fill="rgb(233,118,54)" fg:x="538" fg:w="1"/><text x="96.8389%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="96.5889%" y="309" width="0.1795%" height="15" fill="rgb(234,83,48)" fg:x="538" fg:w="1"/><text x="96.8389%" y="319.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Local&lt;T&gt;::push_back (5 samples, 0.90%)</title><rect x="96.7684%" y="469" width="0.8977%" height="15" fill="rgb(228,3,54)" fg:x="539" fg:w="5"/><text x="97.0184%" y="479.50"></text></g><g><title>&lt;tokio::runtime::scheduler::inject::pop::Pop&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.90%)</title><rect x="96.7684%" y="453" width="0.8977%" height="15" fill="rgb(226,155,13)" fg:x="539" fg:w="5"/><text x="97.0184%" y="463.50"></text></g><g><title>tokio::runtime::scheduler::inject::synced::Synced::pop (5 samples, 0.90%)</title><rect x="96.7684%" y="437" width="0.8977%" height="15" fill="rgb(241,28,37)" fg:x="539" fg:w="5"/><text x="97.0184%" y="447.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (2 samples, 0.36%)</title><rect x="97.3070%" y="421" width="0.3591%" height="15" fill="rgb(233,93,10)" fg:x="542" fg:w="2"/><text x="97.5570%" y="431.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::next_task (59 samples, 10.59%)</title><rect x="87.2531%" y="485" width="10.5925%" height="15" fill="rgb(225,113,19)" fg:x="486" fg:w="59"/><text x="87.5031%" y="495.50">tokio::runtime:..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::next_local_task (1 samples, 0.18%)</title><rect x="97.6661%" y="469" width="0.1795%" height="15" fill="rgb(241,2,18)" fg:x="544" fg:w="1"/><text x="97.9161%" y="479.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (1 samples, 0.18%)</title><rect x="97.6661%" y="453" width="0.1795%" height="15" fill="rgb(228,207,21)" fg:x="544" fg:w="1"/><text x="97.9161%" y="463.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::next_local_task::_{{closure}} (1 samples, 0.18%)</title><rect x="97.6661%" y="437" width="0.1795%" height="15" fill="rgb(213,211,35)" fg:x="544" fg:w="1"/><text x="97.9161%" y="447.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Local&lt;T&gt;::pop (1 samples, 0.18%)</title><rect x="97.6661%" y="421" width="0.1795%" height="15" fill="rgb(209,83,10)" fg:x="544" fg:w="1"/><text x="97.9161%" y="431.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::unpack (1 samples, 0.18%)</title><rect x="97.6661%" y="405" width="0.1795%" height="15" fill="rgb(209,164,1)" fg:x="544" fg:w="1"/><text x="97.9161%" y="415.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::pre_shutdown (1 samples, 0.18%)</title><rect x="97.8456%" y="485" width="0.1795%" height="15" fill="rgb(213,184,43)" fg:x="545" fg:w="1"/><text x="98.0956%" y="495.50"></text></g><g><title>tokio::runtime::task::list::OwnedTasks&lt;S&gt;::close_and_shutdown_all (1 samples, 0.18%)</title><rect x="97.8456%" y="469" width="0.1795%" height="15" fill="rgb(231,61,34)" fg:x="545" fg:w="1"/><text x="98.0956%" y="479.50"></text></g><g><title>tokio::util::sharded_list::ShardedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::pop_back (1 samples, 0.18%)</title><rect x="97.8456%" y="453" width="0.1795%" height="15" fill="rgb(235,75,3)" fg:x="545" fg:w="1"/><text x="98.0956%" y="463.50"></text></g><g><title>tokio::util::sharded_list::ShardedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::shard_inner (1 samples, 0.18%)</title><rect x="97.8456%" y="437" width="0.1795%" height="15" fill="rgb(220,106,47)" fg:x="545" fg:w="1"/><text x="98.0956%" y="447.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (1 samples, 0.18%)</title><rect x="97.8456%" y="421" width="0.1795%" height="15" fill="rgb(210,196,33)" fg:x="545" fg:w="1"/><text x="98.0956%" y="431.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (1 samples, 0.18%)</title><rect x="97.8456%" y="405" width="0.1795%" height="15" fill="rgb(229,154,42)" fg:x="545" fg:w="1"/><text x="98.0956%" y="415.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (1 samples, 0.18%)</title><rect x="97.8456%" y="389" width="0.1795%" height="15" fill="rgb(228,114,26)" fg:x="545" fg:w="1"/><text x="98.0956%" y="399.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_err (1 samples, 0.18%)</title><rect x="97.8456%" y="373" width="0.1795%" height="15" fill="rgb(208,144,1)" fg:x="545" fg:w="1"/><text x="98.0956%" y="383.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_ok (1 samples, 0.18%)</title><rect x="97.8456%" y="357" width="0.1795%" height="15" fill="rgb(239,112,37)" fg:x="545" fg:w="1"/><text x="98.0956%" y="367.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Steal&lt;T&gt;::steal_into (1 samples, 0.18%)</title><rect x="98.2047%" y="469" width="0.1795%" height="15" fill="rgb(210,96,50)" fg:x="547" fg:w="1"/><text x="98.4547%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicU64::load (1 samples, 0.18%)</title><rect x="98.2047%" y="453" width="0.1795%" height="15" fill="rgb(222,178,2)" fg:x="547" fg:w="1"/><text x="98.4547%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.18%)</title><rect x="98.2047%" y="437" width="0.1795%" height="15" fill="rgb(226,74,18)" fg:x="547" fg:w="1"/><text x="98.4547%" y="447.50"></text></g><g><title>parking_lot_core::spinwait::cpu_relax (1 samples, 0.18%)</title><rect x="98.5637%" y="373" width="0.1795%" height="15" fill="rgb(225,67,54)" fg:x="549" fg:w="1"/><text x="98.8137%" y="383.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.18%)</title><rect x="98.5637%" y="357" width="0.1795%" height="15" fill="rgb(251,92,32)" fg:x="549" fg:w="1"/><text x="98.8137%" y="367.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.18%)</title><rect x="98.5637%" y="341" width="0.1795%" height="15" fill="rgb(228,149,22)" fg:x="549" fg:w="1"/><text x="98.8137%" y="351.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (2 samples, 0.36%)</title><rect x="98.5637%" y="453" width="0.3591%" height="15" fill="rgb(243,54,13)" fg:x="549" fg:w="2"/><text x="98.8137%" y="463.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (2 samples, 0.36%)</title><rect x="98.5637%" y="437" width="0.3591%" height="15" fill="rgb(243,180,28)" fg:x="549" fg:w="2"/><text x="98.8137%" y="447.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (2 samples, 0.36%)</title><rect x="98.5637%" y="421" width="0.3591%" height="15" fill="rgb(208,167,24)" fg:x="549" fg:w="2"/><text x="98.8137%" y="431.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::lock_slow (2 samples, 0.36%)</title><rect x="98.5637%" y="405" width="0.3591%" height="15" fill="rgb(245,73,45)" fg:x="549" fg:w="2"/><text x="98.8137%" y="415.50"></text></g><g><title>parking_lot_core::spinwait::SpinWait::spin (2 samples, 0.36%)</title><rect x="98.5637%" y="389" width="0.3591%" height="15" fill="rgb(237,203,48)" fg:x="549" fg:w="2"/><text x="98.8137%" y="399.50"></text></g><g><title>parking_lot_core::thread_parker::imp::thread_yield (1 samples, 0.18%)</title><rect x="98.7433%" y="373" width="0.1795%" height="15" fill="rgb(211,197,16)" fg:x="550" fg:w="1"/><text x="98.9933%" y="383.50"></text></g><g><title>__sched_yield (1 samples, 0.18%)</title><rect x="98.7433%" y="357" width="0.1795%" height="15" fill="rgb(243,99,51)" fg:x="550" fg:w="1"/><text x="98.9933%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="98.7433%" y="341" width="0.1795%" height="15" fill="rgb(215,123,29)" fg:x="550" fg:w="1"/><text x="98.9933%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="98.7433%" y="325" width="0.1795%" height="15" fill="rgb(239,186,37)" fg:x="550" fg:w="1"/><text x="98.9933%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="98.7433%" y="309" width="0.1795%" height="15" fill="rgb(252,136,39)" fg:x="550" fg:w="1"/><text x="98.9933%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="98.7433%" y="293" width="0.1795%" height="15" fill="rgb(223,213,32)" fg:x="550" fg:w="1"/><text x="98.9933%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="98.7433%" y="277" width="0.1795%" height="15" fill="rgb(233,115,5)" fg:x="550" fg:w="1"/><text x="98.9933%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="98.7433%" y="261" width="0.1795%" height="15" fill="rgb(207,226,44)" fg:x="550" fg:w="1"/><text x="98.9933%" y="271.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::steal_work (6 samples, 1.08%)</title><rect x="98.0251%" y="485" width="1.0772%" height="15" fill="rgb(208,126,0)" fg:x="546" fg:w="6"/><text x="98.2751%" y="495.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::next_remote_task (4 samples, 0.72%)</title><rect x="98.3842%" y="469" width="0.7181%" height="15" fill="rgb(244,66,21)" fg:x="548" fg:w="4"/><text x="98.6342%" y="479.50"></text></g><g><title>tokio::runtime::scheduler::inject::shared::Shared&lt;T&gt;::pop (1 samples, 0.18%)</title><rect x="98.9228%" y="453" width="0.1795%" height="15" fill="rgb(222,97,12)" fg:x="551" fg:w="1"/><text x="99.1728%" y="463.50"></text></g><g><title>&lt;tokio::runtime::scheduler::inject::pop::Pop&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.18%)</title><rect x="98.9228%" y="437" width="0.1795%" height="15" fill="rgb(219,213,19)" fg:x="551" fg:w="1"/><text x="99.1728%" y="447.50"></text></g><g><title>tokio::runtime::scheduler::inject::synced::Synced::pop (1 samples, 0.18%)</title><rect x="98.9228%" y="421" width="0.1795%" height="15" fill="rgb(252,169,30)" fg:x="551" fg:w="1"/><text x="99.1728%" y="431.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.18%)</title><rect x="98.9228%" y="405" width="0.1795%" height="15" fill="rgb(206,32,51)" fg:x="551" fg:w="1"/><text x="99.1728%" y="415.50"></text></g><g><title>clone3 (328 samples, 58.89%)</title><rect x="40.3950%" y="1077" width="58.8869%" height="15" fill="rgb(250,172,42)" fg:x="225" fg:w="328"/><text x="40.6450%" y="1087.50">clone3</text></g><g><title>start_thread (328 samples, 58.89%)</title><rect x="40.3950%" y="1061" width="58.8869%" height="15" fill="rgb(209,34,43)" fg:x="225" fg:w="328"/><text x="40.6450%" y="1071.50">start_thread</text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (328 samples, 58.89%)</title><rect x="40.3950%" y="1045" width="58.8869%" height="15" fill="rgb(223,11,35)" fg:x="225" fg:w="328"/><text x="40.6450%" y="1055.50">std::sys::pal::unix::thread::Thread::new::thread_start</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (328 samples, 58.89%)</title><rect x="40.3950%" y="1029" width="58.8869%" height="15" fill="rgb(251,219,26)" fg:x="225" fg:w="328"/><text x="40.6450%" y="1039.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (328 samples, 58.89%)</title><rect x="40.3950%" y="1013" width="58.8869%" height="15" fill="rgb(231,119,3)" fg:x="225" fg:w="328"/><text x="40.6450%" y="1023.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (328 samples, 58.89%)</title><rect x="40.3950%" y="997" width="58.8869%" height="15" fill="rgb(216,97,11)" fg:x="225" fg:w="328"/><text x="40.6450%" y="1007.50">core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>std::thread::Builder::spawn_unchecked_::_{{closure}} (328 samples, 58.89%)</title><rect x="40.3950%" y="981" width="58.8869%" height="15" fill="rgb(223,59,9)" fg:x="225" fg:w="328"/><text x="40.6450%" y="991.50">std::thread::Builder::spawn_unchecked_::_{{closure}}</text></g><g><title>std::panic::catch_unwind (328 samples, 58.89%)</title><rect x="40.3950%" y="965" width="58.8869%" height="15" fill="rgb(233,93,31)" fg:x="225" fg:w="328"/><text x="40.6450%" y="975.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (328 samples, 58.89%)</title><rect x="40.3950%" y="949" width="58.8869%" height="15" fill="rgb(239,81,33)" fg:x="225" fg:w="328"/><text x="40.6450%" y="959.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (328 samples, 58.89%)</title><rect x="40.3950%" y="933" width="58.8869%" height="15" fill="rgb(213,120,34)" fg:x="225" fg:w="328"/><text x="40.6450%" y="943.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (328 samples, 58.89%)</title><rect x="40.3950%" y="917" width="58.8869%" height="15" fill="rgb(243,49,53)" fg:x="225" fg:w="328"/><text x="40.6450%" y="927.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once</text></g><g><title>std::thread::Builder::spawn_unchecked_::_{{closure}}::_{{closure}} (328 samples, 58.89%)</title><rect x="40.3950%" y="901" width="58.8869%" height="15" fill="rgb(247,216,33)" fg:x="225" fg:w="328"/><text x="40.6450%" y="911.50">std::thread::Builder::spawn_unchecked_::_{{closure}}::_{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (328 samples, 58.89%)</title><rect x="40.3950%" y="885" width="58.8869%" height="15" fill="rgb(226,26,14)" fg:x="225" fg:w="328"/><text x="40.6450%" y="895.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_thread::_{{closure}} (328 samples, 58.89%)</title><rect x="40.3950%" y="869" width="58.8869%" height="15" fill="rgb(215,49,53)" fg:x="225" fg:w="328"/><text x="40.6450%" y="879.50">tokio::runtime::blocking::pool::Spawner::spawn_thread::_{{closure}}</text></g><g><title>tokio::runtime::blocking::pool::Inner::run (328 samples, 58.89%)</title><rect x="40.3950%" y="853" width="58.8869%" height="15" fill="rgb(245,162,40)" fg:x="225" fg:w="328"/><text x="40.6450%" y="863.50">tokio::runtime::blocking::pool::Inner::run</text></g><g><title>tokio::runtime::blocking::pool::Task::run (325 samples, 58.35%)</title><rect x="40.9336%" y="837" width="58.3483%" height="15" fill="rgb(229,68,17)" fg:x="228" fg:w="325"/><text x="41.1836%" y="847.50">tokio::runtime::blocking::pool::Task::run</text></g><g><title>tokio::runtime::task::UnownedTask&lt;S&gt;::run (325 samples, 58.35%)</title><rect x="40.9336%" y="821" width="58.3483%" height="15" fill="rgb(213,182,10)" fg:x="228" fg:w="325"/><text x="41.1836%" y="831.50">tokio::runtime::task::UnownedTask&lt;S&gt;::run</text></g><g><title>tokio::runtime::task::raw::RawTask::poll (325 samples, 58.35%)</title><rect x="40.9336%" y="805" width="58.3483%" height="15" fill="rgb(245,125,30)" fg:x="228" fg:w="325"/><text x="41.1836%" y="815.50">tokio::runtime::task::raw::RawTask::poll</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (325 samples, 58.35%)</title><rect x="40.9336%" y="789" width="58.3483%" height="15" fill="rgb(232,202,2)" fg:x="228" fg:w="325"/><text x="41.1836%" y="799.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (325 samples, 58.35%)</title><rect x="40.9336%" y="773" width="58.3483%" height="15" fill="rgb(237,140,51)" fg:x="228" fg:w="325"/><text x="41.1836%" y="783.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner</text></g><g><title>tokio::runtime::task::harness::poll_future (325 samples, 58.35%)</title><rect x="40.9336%" y="757" width="58.3483%" height="15" fill="rgb(236,157,25)" fg:x="228" fg:w="325"/><text x="41.1836%" y="767.50">tokio::runtime::task::harness::poll_future</text></g><g><title>std::panic::catch_unwind (325 samples, 58.35%)</title><rect x="40.9336%" y="741" width="58.3483%" height="15" fill="rgb(219,209,0)" fg:x="228" fg:w="325"/><text x="41.1836%" y="751.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (325 samples, 58.35%)</title><rect x="40.9336%" y="725" width="58.3483%" height="15" fill="rgb(240,116,54)" fg:x="228" fg:w="325"/><text x="41.1836%" y="735.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (325 samples, 58.35%)</title><rect x="40.9336%" y="709" width="58.3483%" height="15" fill="rgb(216,10,36)" fg:x="228" fg:w="325"/><text x="41.1836%" y="719.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (325 samples, 58.35%)</title><rect x="40.9336%" y="693" width="58.3483%" height="15" fill="rgb(222,72,44)" fg:x="228" fg:w="325"/><text x="41.1836%" y="703.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once</text></g><g><title>tokio::runtime::task::harness::poll_future::_{{closure}} (325 samples, 58.35%)</title><rect x="40.9336%" y="677" width="58.3483%" height="15" fill="rgb(232,159,9)" fg:x="228" fg:w="325"/><text x="41.1836%" y="687.50">tokio::runtime::task::harness::poll_future::_{{closure}}</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (325 samples, 58.35%)</title><rect x="40.9336%" y="661" width="58.3483%" height="15" fill="rgb(210,39,32)" fg:x="228" fg:w="325"/><text x="41.1836%" y="671.50">tokio::runtime::task::core::Core&lt;T,S&gt;::poll</text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (325 samples, 58.35%)</title><rect x="40.9336%" y="645" width="58.3483%" height="15" fill="rgb(216,194,45)" fg:x="228" fg:w="325"/><text x="41.1836%" y="655.50">tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::_{{closure}} (325 samples, 58.35%)</title><rect x="40.9336%" y="629" width="58.3483%" height="15" fill="rgb(218,18,35)" fg:x="228" fg:w="325"/><text x="41.1836%" y="639.50">tokio::runtime::task::core::Core&lt;T,S&gt;::poll::_{{closure}}</text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (325 samples, 58.35%)</title><rect x="40.9336%" y="613" width="58.3483%" height="15" fill="rgb(207,83,51)" fg:x="228" fg:w="325"/><text x="41.1836%" y="623.50">&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Launch::launch::_{{closure}} (325 samples, 58.35%)</title><rect x="40.9336%" y="597" width="58.3483%" height="15" fill="rgb(225,63,43)" fg:x="228" fg:w="325"/><text x="41.1836%" y="607.50">tokio::runtime::scheduler::multi_thread::worker::Launch::launch::_{{closure}}</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run (325 samples, 58.35%)</title><rect x="40.9336%" y="581" width="58.3483%" height="15" fill="rgb(207,57,36)" fg:x="228" fg:w="325"/><text x="41.1836%" y="591.50">tokio::runtime::scheduler::multi_thread::worker::run</text></g><g><title>tokio::runtime::context::runtime::enter_runtime (325 samples, 58.35%)</title><rect x="40.9336%" y="565" width="58.3483%" height="15" fill="rgb(216,99,33)" fg:x="228" fg:w="325"/><text x="41.1836%" y="575.50">tokio::runtime::context::runtime::enter_runtime</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run::_{{closure}} (325 samples, 58.35%)</title><rect x="40.9336%" y="549" width="58.3483%" height="15" fill="rgb(225,42,16)" fg:x="228" fg:w="325"/><text x="41.1836%" y="559.50">tokio::runtime::scheduler::multi_thread::worker::run::_{{closure}}</text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::set (325 samples, 58.35%)</title><rect x="40.9336%" y="533" width="58.3483%" height="15" fill="rgb(220,201,45)" fg:x="228" fg:w="325"/><text x="41.1836%" y="543.50">tokio::runtime::context::scoped::Scoped&lt;T&gt;::set</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run::_{{closure}}::_{{closure}} (325 samples, 58.35%)</title><rect x="40.9336%" y="517" width="58.3483%" height="15" fill="rgb(225,33,4)" fg:x="228" fg:w="325"/><text x="41.1836%" y="527.50">tokio::runtime::scheduler::multi_thread::worker::run::_{{closure}}::_{{closure}}</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run (325 samples, 58.35%)</title><rect x="40.9336%" y="501" width="58.3483%" height="15" fill="rgb(224,33,50)" fg:x="228" fg:w="325"/><text x="41.1836%" y="511.50">tokio::runtime::scheduler::multi_thread::worker::Context::run</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::tick (1 samples, 0.18%)</title><rect x="99.1023%" y="485" width="0.1795%" height="15" fill="rgb(246,198,51)" fg:x="552" fg:w="1"/><text x="99.3523%" y="495.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (1 samples, 0.18%)</title><rect x="99.2819%" y="1077" width="0.1795%" height="15" fill="rgb(205,22,4)" fg:x="553" fg:w="1"/><text x="99.5319%" y="1087.50"></text></g><g><title>parking_lot_core::parking_lot::park (1 samples, 0.18%)</title><rect x="99.2819%" y="1061" width="0.1795%" height="15" fill="rgb(206,3,8)" fg:x="553" fg:w="1"/><text x="99.5319%" y="1071.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data (1 samples, 0.18%)</title><rect x="99.2819%" y="1045" width="0.1795%" height="15" fill="rgb(251,23,15)" fg:x="553" fg:w="1"/><text x="99.5319%" y="1055.50"></text></g><g><title>parking_lot_core::parking_lot::park::_{{closure}} (1 samples, 0.18%)</title><rect x="99.2819%" y="1029" width="0.1795%" height="15" fill="rgb(252,88,28)" fg:x="553" fg:w="1"/><text x="99.5319%" y="1039.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park (1 samples, 0.18%)</title><rect x="99.2819%" y="1013" width="0.1795%" height="15" fill="rgb(212,127,14)" fg:x="553" fg:w="1"/><text x="99.5319%" y="1023.50"></text></g><g><title>parking_lot_core::thread_parker::imp::ThreadParker::futex_wait (1 samples, 0.18%)</title><rect x="99.2819%" y="997" width="0.1795%" height="15" fill="rgb(247,145,37)" fg:x="553" fg:w="1"/><text x="99.5319%" y="1007.50"></text></g><g><title>syscall (1 samples, 0.18%)</title><rect x="99.2819%" y="981" width="0.1795%" height="15" fill="rgb(209,117,53)" fg:x="553" fg:w="1"/><text x="99.5319%" y="991.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="99.2819%" y="965" width="0.1795%" height="15" fill="rgb(212,90,42)" fg:x="553" fg:w="1"/><text x="99.5319%" y="975.50"></text></g><g><title>all (557 samples, 100%)</title><rect x="0.0000%" y="1109" width="100.0000%" height="15" fill="rgb(218,164,37)" fg:x="0" fg:w="557"/><text x="0.2500%" y="1119.50"></text></g><g><title>tokio-runtime-w (332 samples, 59.61%)</title><rect x="40.3950%" y="1093" width="59.6050%" height="15" fill="rgb(246,65,34)" fg:x="225" fg:w="332"/><text x="40.6450%" y="1103.50">tokio-runtime-w</text></g><g><title>syscall (3 samples, 0.54%)</title><rect x="99.4614%" y="1077" width="0.5386%" height="15" fill="rgb(231,100,33)" fg:x="554" fg:w="3"/><text x="99.7114%" y="1087.50"></text></g><g><title>[unknown] (3 samples, 0.54%)</title><rect x="99.4614%" y="1061" width="0.5386%" height="15" fill="rgb(228,126,14)" fg:x="554" fg:w="3"/><text x="99.7114%" y="1071.50"></text></g></svg></svg>