<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="950" onload="init(evt)" viewBox="0 0 1200 950" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="950" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="933.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="933.00"> </text><svg id="frames" x="10" width="1180" total_samples="1095"><g><title>[unknown] (20 samples, 1.83%)</title><rect x="0.0000%" y="869" width="1.8265%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="20"/><text x="0.2500%" y="879.50">[..</text></g><g><title>[unknown] (2 samples, 0.18%)</title><rect x="1.6438%" y="853" width="0.1826%" height="15" fill="rgb(217,0,24)" fg:x="18" fg:w="2"/><text x="1.8938%" y="863.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="1.7352%" y="837" width="0.0913%" height="15" fill="rgb(221,193,54)" fg:x="19" fg:w="1"/><text x="1.9852%" y="847.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="1.7352%" y="821" width="0.0913%" height="15" fill="rgb(248,212,6)" fg:x="19" fg:w="1"/><text x="1.9852%" y="831.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="1.7352%" y="805" width="0.0913%" height="15" fill="rgb(208,68,35)" fg:x="19" fg:w="1"/><text x="1.9852%" y="815.50"></text></g><g><title>[unknown] (2 samples, 0.18%)</title><rect x="1.8265%" y="853" width="0.1826%" height="15" fill="rgb(232,128,0)" fg:x="20" fg:w="2"/><text x="2.0765%" y="863.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="1.9178%" y="837" width="0.0913%" height="15" fill="rgb(207,160,47)" fg:x="21" fg:w="1"/><text x="2.1678%" y="847.50"></text></g><g><title>deflate::chained_hash_table::ChainedHashTable::add_with_hash (1 samples, 0.09%)</title><rect x="2.0091%" y="373" width="0.0913%" height="15" fill="rgb(228,23,34)" fg:x="22" fg:w="1"/><text x="2.2591%" y="383.50"></text></g><g><title>deflate::chained_hash_table::ChainedHashTable::add_hash_value (2 samples, 0.18%)</title><rect x="2.0091%" y="389" width="0.1826%" height="15" fill="rgb(218,30,26)" fg:x="22" fg:w="2"/><text x="2.2591%" y="399.50"></text></g><g><title>deflate::chained_hash_table::update_hash (1 samples, 0.09%)</title><rect x="2.1005%" y="373" width="0.0913%" height="15" fill="rgb(220,122,19)" fg:x="23" fg:w="1"/><text x="2.3505%" y="383.50"></text></g><g><title>deflate::chained_hash_table::update_hash_conf (1 samples, 0.09%)</title><rect x="2.1005%" y="357" width="0.0913%" height="15" fill="rgb(250,228,42)" fg:x="23" fg:w="1"/><text x="2.3505%" y="367.50"></text></g><g><title>deflate::lz77::add_to_hash_table (2 samples, 0.18%)</title><rect x="2.1918%" y="389" width="0.1826%" height="15" fill="rgb(240,193,28)" fg:x="24" fg:w="2"/><text x="2.4418%" y="399.50"></text></g><g><title>deflate::chained_hash_table::ChainedHashTable::add_with_hash (2 samples, 0.18%)</title><rect x="2.1918%" y="373" width="0.1826%" height="15" fill="rgb(216,20,37)" fg:x="24" fg:w="2"/><text x="2.4418%" y="383.50"></text></g><g><title>deflate::matching::longest_match (1 samples, 0.09%)</title><rect x="2.3744%" y="389" width="0.0913%" height="15" fill="rgb(206,188,39)" fg:x="26" fg:w="1"/><text x="2.6244%" y="399.50"></text></g><g><title>deflate::matching::get_match_length (1 samples, 0.09%)</title><rect x="2.3744%" y="373" width="0.0913%" height="15" fill="rgb(217,207,13)" fg:x="26" fg:w="1"/><text x="2.6244%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (1 samples, 0.09%)</title><rect x="2.3744%" y="357" width="0.0913%" height="15" fill="rgb(231,73,38)" fg:x="26" fg:w="1"/><text x="2.6244%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.09%)</title><rect x="2.3744%" y="341" width="0.0913%" height="15" fill="rgb(225,20,46)" fg:x="26" fg:w="1"/><text x="2.6244%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.09%)</title><rect x="2.3744%" y="325" width="0.0913%" height="15" fill="rgb(210,31,41)" fg:x="26" fg:w="1"/><text x="2.6244%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.09%)</title><rect x="2.3744%" y="309" width="0.0913%" height="15" fill="rgb(221,200,47)" fg:x="26" fg:w="1"/><text x="2.6244%" y="319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.09%)</title><rect x="2.3744%" y="293" width="0.0913%" height="15" fill="rgb(226,26,5)" fg:x="26" fg:w="1"/><text x="2.6244%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.09%)</title><rect x="2.3744%" y="277" width="0.0913%" height="15" fill="rgb(249,33,26)" fg:x="26" fg:w="1"/><text x="2.6244%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1 samples, 0.09%)</title><rect x="2.3744%" y="261" width="0.0913%" height="15" fill="rgb(235,183,28)" fg:x="26" fg:w="1"/><text x="2.6244%" y="271.50"></text></g><g><title>image::buffer_::ImageBuffer&lt;P,Container&gt;::save (6 samples, 0.55%)</title><rect x="2.0091%" y="597" width="0.5479%" height="15" fill="rgb(221,5,38)" fg:x="22" fg:w="6"/><text x="2.2591%" y="607.50"></text></g><g><title>image::dynimage::save_buffer (6 samples, 0.55%)</title><rect x="2.0091%" y="581" width="0.5479%" height="15" fill="rgb(247,18,42)" fg:x="22" fg:w="6"/><text x="2.2591%" y="591.50"></text></g><g><title>image::io::free_functions::save_buffer_impl (6 samples, 0.55%)</title><rect x="2.0091%" y="565" width="0.5479%" height="15" fill="rgb(241,131,45)" fg:x="22" fg:w="6"/><text x="2.2591%" y="575.50"></text></g><g><title>image::io::free_functions::save_buffer_with_format_impl (6 samples, 0.55%)</title><rect x="2.0091%" y="549" width="0.5479%" height="15" fill="rgb(249,31,29)" fg:x="22" fg:w="6"/><text x="2.2591%" y="559.50"></text></g><g><title>&lt;image::codecs::png::PngEncoder&lt;W&gt; as image::image::ImageEncoder&gt;::write_image (6 samples, 0.55%)</title><rect x="2.0091%" y="533" width="0.5479%" height="15" fill="rgb(225,111,53)" fg:x="22" fg:w="6"/><text x="2.2591%" y="543.50"></text></g><g><title>image::codecs::png::PngEncoder&lt;W&gt;::encode (6 samples, 0.55%)</title><rect x="2.0091%" y="517" width="0.5479%" height="15" fill="rgb(238,160,17)" fg:x="22" fg:w="6"/><text x="2.2591%" y="527.50"></text></g><g><title>png::encoder::Writer&lt;W&gt;::write_image_data (6 samples, 0.55%)</title><rect x="2.0091%" y="501" width="0.5479%" height="15" fill="rgb(214,148,48)" fg:x="22" fg:w="6"/><text x="2.2591%" y="511.50"></text></g><g><title>std::io::Write::write_all (6 samples, 0.55%)</title><rect x="2.0091%" y="485" width="0.5479%" height="15" fill="rgb(232,36,49)" fg:x="22" fg:w="6"/><text x="2.2591%" y="495.50"></text></g><g><title>&lt;deflate::writer::ZlibEncoder&lt;W&gt; as std::io::Write&gt;::write (6 samples, 0.55%)</title><rect x="2.0091%" y="469" width="0.5479%" height="15" fill="rgb(209,103,24)" fg:x="22" fg:w="6"/><text x="2.2591%" y="479.50"></text></g><g><title>deflate::compress::compress_data_dynamic_n (6 samples, 0.55%)</title><rect x="2.0091%" y="453" width="0.5479%" height="15" fill="rgb(229,88,8)" fg:x="22" fg:w="6"/><text x="2.2591%" y="463.50"></text></g><g><title>deflate::lz77::lz77_compress_block (6 samples, 0.55%)</title><rect x="2.0091%" y="437" width="0.5479%" height="15" fill="rgb(213,181,19)" fg:x="22" fg:w="6"/><text x="2.2591%" y="447.50"></text></g><g><title>deflate::lz77::process_chunk (6 samples, 0.55%)</title><rect x="2.0091%" y="421" width="0.5479%" height="15" fill="rgb(254,191,54)" fg:x="22" fg:w="6"/><text x="2.2591%" y="431.50"></text></g><g><title>deflate::lz77::process_chunk_greedy (6 samples, 0.55%)</title><rect x="2.0091%" y="405" width="0.5479%" height="15" fill="rgb(241,83,37)" fg:x="22" fg:w="6"/><text x="2.2591%" y="415.50"></text></g><g><title>deflate::output_writer::DynamicWriter::write_length_distance (1 samples, 0.09%)</title><rect x="2.4658%" y="389" width="0.0913%" height="15" fill="rgb(233,36,39)" fg:x="27" fg:w="1"/><text x="2.7158%" y="399.50"></text></g><g><title>deflate::huffman_table::get_distance_code (1 samples, 0.09%)</title><rect x="2.4658%" y="373" width="0.0913%" height="15" fill="rgb(226,3,54)" fg:x="27" fg:w="1"/><text x="2.7158%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.18%)</title><rect x="2.7397%" y="581" width="0.1826%" height="15" fill="rgb(245,192,40)" fg:x="30" fg:w="2"/><text x="2.9897%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.18%)</title><rect x="2.7397%" y="565" width="0.1826%" height="15" fill="rgb(238,167,29)" fg:x="30" fg:w="2"/><text x="2.9897%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.18%)</title><rect x="2.7397%" y="549" width="0.1826%" height="15" fill="rgb(232,182,51)" fg:x="30" fg:w="2"/><text x="2.9897%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.18%)</title><rect x="2.7397%" y="533" width="0.1826%" height="15" fill="rgb(231,60,39)" fg:x="30" fg:w="2"/><text x="2.9897%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.18%)</title><rect x="2.7397%" y="517" width="0.1826%" height="15" fill="rgb(208,69,12)" fg:x="30" fg:w="2"/><text x="2.9897%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.18%)</title><rect x="2.7397%" y="501" width="0.1826%" height="15" fill="rgb(235,93,37)" fg:x="30" fg:w="2"/><text x="2.9897%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.18%)</title><rect x="2.7397%" y="485" width="0.1826%" height="15" fill="rgb(213,116,39)" fg:x="30" fg:w="2"/><text x="2.9897%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.18%)</title><rect x="2.7397%" y="469" width="0.1826%" height="15" fill="rgb(222,207,29)" fg:x="30" fg:w="2"/><text x="2.9897%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.18%)</title><rect x="2.7397%" y="453" width="0.1826%" height="15" fill="rgb(206,96,30)" fg:x="30" fg:w="2"/><text x="2.9897%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.18%)</title><rect x="2.7397%" y="437" width="0.1826%" height="15" fill="rgb(218,138,4)" fg:x="30" fg:w="2"/><text x="2.9897%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (2 samples, 0.18%)</title><rect x="2.7397%" y="421" width="0.1826%" height="15" fill="rgb(250,191,14)" fg:x="30" fg:w="2"/><text x="2.9897%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.18%)</title><rect x="2.7397%" y="405" width="0.1826%" height="15" fill="rgb(239,60,40)" fg:x="30" fg:w="2"/><text x="2.9897%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.18%)</title><rect x="2.7397%" y="389" width="0.1826%" height="15" fill="rgb(206,27,48)" fg:x="30" fg:w="2"/><text x="2.9897%" y="399.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.18%)</title><rect x="2.7397%" y="373" width="0.1826%" height="15" fill="rgb(225,35,8)" fg:x="30" fg:w="2"/><text x="2.9897%" y="383.50"></text></g><g><title>malloc (2 samples, 0.18%)</title><rect x="2.7397%" y="357" width="0.1826%" height="15" fill="rgb(250,213,24)" fg:x="30" fg:w="2"/><text x="2.9897%" y="367.50"></text></g><g><title>_int_malloc (2 samples, 0.18%)</title><rect x="2.7397%" y="341" width="0.1826%" height="15" fill="rgb(247,123,22)" fg:x="30" fg:w="2"/><text x="2.9897%" y="351.50"></text></g><g><title>[unknown] (2 samples, 0.18%)</title><rect x="2.7397%" y="325" width="0.1826%" height="15" fill="rgb(231,138,38)" fg:x="30" fg:w="2"/><text x="2.9897%" y="335.50"></text></g><g><title>[unknown] (2 samples, 0.18%)</title><rect x="2.7397%" y="309" width="0.1826%" height="15" fill="rgb(231,145,46)" fg:x="30" fg:w="2"/><text x="2.9897%" y="319.50"></text></g><g><title>[unknown] (2 samples, 0.18%)</title><rect x="2.7397%" y="293" width="0.1826%" height="15" fill="rgb(251,118,11)" fg:x="30" fg:w="2"/><text x="2.9897%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="2.8311%" y="277" width="0.0913%" height="15" fill="rgb(217,147,25)" fg:x="31" fg:w="1"/><text x="3.0811%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="2.8311%" y="261" width="0.0913%" height="15" fill="rgb(247,81,37)" fg:x="31" fg:w="1"/><text x="3.0811%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="3.1050%" y="405" width="0.0913%" height="15" fill="rgb(209,12,38)" fg:x="34" fg:w="1"/><text x="3.3550%" y="415.50"></text></g><g><title>__libc_start_main@@GLIBC_2.34 (14 samples, 1.28%)</title><rect x="2.0091%" y="853" width="1.2785%" height="15" fill="rgb(227,1,9)" fg:x="22" fg:w="14"/><text x="2.2591%" y="863.50"></text></g><g><title>__libc_start_call_main (14 samples, 1.28%)</title><rect x="2.0091%" y="837" width="1.2785%" height="15" fill="rgb(248,47,43)" fg:x="22" fg:w="14"/><text x="2.2591%" y="847.50"></text></g><g><title>main (14 samples, 1.28%)</title><rect x="2.0091%" y="821" width="1.2785%" height="15" fill="rgb(221,10,30)" fg:x="22" fg:w="14"/><text x="2.2591%" y="831.50"></text></g><g><title>std::rt::lang_start_internal (14 samples, 1.28%)</title><rect x="2.0091%" y="805" width="1.2785%" height="15" fill="rgb(210,229,1)" fg:x="22" fg:w="14"/><text x="2.2591%" y="815.50"></text></g><g><title>std::panic::catch_unwind (14 samples, 1.28%)</title><rect x="2.0091%" y="789" width="1.2785%" height="15" fill="rgb(222,148,37)" fg:x="22" fg:w="14"/><text x="2.2591%" y="799.50"></text></g><g><title>std::panicking::try (14 samples, 1.28%)</title><rect x="2.0091%" y="773" width="1.2785%" height="15" fill="rgb(234,67,33)" fg:x="22" fg:w="14"/><text x="2.2591%" y="783.50"></text></g><g><title>std::panicking::try::do_call (14 samples, 1.28%)</title><rect x="2.0091%" y="757" width="1.2785%" height="15" fill="rgb(247,98,35)" fg:x="22" fg:w="14"/><text x="2.2591%" y="767.50"></text></g><g><title>std::rt::lang_start_internal::_{{closure}} (14 samples, 1.28%)</title><rect x="2.0091%" y="741" width="1.2785%" height="15" fill="rgb(247,138,52)" fg:x="22" fg:w="14"/><text x="2.2591%" y="751.50"></text></g><g><title>std::panic::catch_unwind (14 samples, 1.28%)</title><rect x="2.0091%" y="725" width="1.2785%" height="15" fill="rgb(213,79,30)" fg:x="22" fg:w="14"/><text x="2.2591%" y="735.50"></text></g><g><title>std::panicking::try (14 samples, 1.28%)</title><rect x="2.0091%" y="709" width="1.2785%" height="15" fill="rgb(246,177,23)" fg:x="22" fg:w="14"/><text x="2.2591%" y="719.50"></text></g><g><title>std::panicking::try::do_call (14 samples, 1.28%)</title><rect x="2.0091%" y="693" width="1.2785%" height="15" fill="rgb(230,62,27)" fg:x="22" fg:w="14"/><text x="2.2591%" y="703.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (14 samples, 1.28%)</title><rect x="2.0091%" y="677" width="1.2785%" height="15" fill="rgb(216,154,8)" fg:x="22" fg:w="14"/><text x="2.2591%" y="687.50"></text></g><g><title>std::rt::lang_start::_{{closure}} (14 samples, 1.28%)</title><rect x="2.0091%" y="661" width="1.2785%" height="15" fill="rgb(244,35,45)" fg:x="22" fg:w="14"/><text x="2.2591%" y="671.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (14 samples, 1.28%)</title><rect x="2.0091%" y="645" width="1.2785%" height="15" fill="rgb(251,115,12)" fg:x="22" fg:w="14"/><text x="2.2591%" y="655.50"></text></g><g><title>core::ops::function::FnOnce::call_once (14 samples, 1.28%)</title><rect x="2.0091%" y="629" width="1.2785%" height="15" fill="rgb(240,54,50)" fg:x="22" fg:w="14"/><text x="2.2591%" y="639.50"></text></g><g><title>julia::main (14 samples, 1.28%)</title><rect x="2.0091%" y="613" width="1.2785%" height="15" fill="rgb(233,84,52)" fg:x="22" fg:w="14"/><text x="2.2591%" y="623.50"></text></g><g><title>julia::generate_image_buffer (8 samples, 0.73%)</title><rect x="2.5571%" y="597" width="0.7306%" height="15" fill="rgb(207,117,47)" fg:x="28" fg:w="8"/><text x="2.8071%" y="607.50"></text></g><g><title>image::buffer_::ImageBuffer&lt;P,alloc::vec::Vec&lt;&lt;P as image::traits::Pixel&gt;::Subpixel&gt;&gt;::new (4 samples, 0.37%)</title><rect x="2.9224%" y="581" width="0.3653%" height="15" fill="rgb(249,43,39)" fg:x="32" fg:w="4"/><text x="3.1724%" y="591.50"></text></g><g><title>alloc::vec::from_elem (4 samples, 0.37%)</title><rect x="2.9224%" y="565" width="0.3653%" height="15" fill="rgb(209,38,44)" fg:x="32" fg:w="4"/><text x="3.1724%" y="575.50"></text></g><g><title>&lt;u8 as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (4 samples, 0.37%)</title><rect x="2.9224%" y="549" width="0.3653%" height="15" fill="rgb(236,212,23)" fg:x="32" fg:w="4"/><text x="3.1724%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_zeroed_in (4 samples, 0.37%)</title><rect x="2.9224%" y="533" width="0.3653%" height="15" fill="rgb(242,79,21)" fg:x="32" fg:w="4"/><text x="3.1724%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (4 samples, 0.37%)</title><rect x="2.9224%" y="517" width="0.3653%" height="15" fill="rgb(211,96,35)" fg:x="32" fg:w="4"/><text x="3.1724%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate_zeroed (4 samples, 0.37%)</title><rect x="2.9224%" y="501" width="0.3653%" height="15" fill="rgb(253,215,40)" fg:x="32" fg:w="4"/><text x="3.1724%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.37%)</title><rect x="2.9224%" y="485" width="0.3653%" height="15" fill="rgb(211,81,21)" fg:x="32" fg:w="4"/><text x="3.1724%" y="495.50"></text></g><g><title>alloc::alloc::alloc_zeroed (4 samples, 0.37%)</title><rect x="2.9224%" y="469" width="0.3653%" height="15" fill="rgb(208,190,38)" fg:x="32" fg:w="4"/><text x="3.1724%" y="479.50"></text></g><g><title>__libc_calloc (4 samples, 0.37%)</title><rect x="2.9224%" y="453" width="0.3653%" height="15" fill="rgb(235,213,38)" fg:x="32" fg:w="4"/><text x="3.1724%" y="463.50"></text></g><g><title>_int_malloc (3 samples, 0.27%)</title><rect x="3.0137%" y="437" width="0.2740%" height="15" fill="rgb(237,122,38)" fg:x="33" fg:w="3"/><text x="3.2637%" y="447.50"></text></g><g><title>sysmalloc (3 samples, 0.27%)</title><rect x="3.0137%" y="421" width="0.2740%" height="15" fill="rgb(244,218,35)" fg:x="33" fg:w="3"/><text x="3.2637%" y="431.50"></text></g><g><title>sysmalloc_mmap.isra.0 (1 samples, 0.09%)</title><rect x="3.1963%" y="405" width="0.0913%" height="15" fill="rgb(240,68,47)" fg:x="35" fg:w="1"/><text x="3.4463%" y="415.50"></text></g><g><title>__mmap (1 samples, 0.09%)</title><rect x="3.1963%" y="389" width="0.0913%" height="15" fill="rgb(210,16,53)" fg:x="35" fg:w="1"/><text x="3.4463%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="3.1963%" y="373" width="0.0913%" height="15" fill="rgb(235,124,12)" fg:x="35" fg:w="1"/><text x="3.4463%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="3.2877%" y="837" width="0.0913%" height="15" fill="rgb(224,169,11)" fg:x="36" fg:w="1"/><text x="3.5377%" y="847.50"></text></g><g><title>dl_main (1 samples, 0.09%)</title><rect x="3.4703%" y="805" width="0.0913%" height="15" fill="rgb(250,166,2)" fg:x="38" fg:w="1"/><text x="3.7203%" y="815.50"></text></g><g><title>_dl_relocate_object (1 samples, 0.09%)</title><rect x="3.4703%" y="789" width="0.0913%" height="15" fill="rgb(242,216,29)" fg:x="38" fg:w="1"/><text x="3.7203%" y="799.50"></text></g><g><title>_dl_start_final (3 samples, 0.27%)</title><rect x="3.3790%" y="837" width="0.2740%" height="15" fill="rgb(230,116,27)" fg:x="37" fg:w="3"/><text x="3.6290%" y="847.50"></text></g><g><title>_dl_sysdep_start (2 samples, 0.18%)</title><rect x="3.4703%" y="821" width="0.1826%" height="15" fill="rgb(228,99,48)" fg:x="38" fg:w="2"/><text x="3.7203%" y="831.50"></text></g><g><title>init_cpu_features.constprop.0 (1 samples, 0.09%)</title><rect x="3.5616%" y="805" width="0.0913%" height="15" fill="rgb(253,11,6)" fg:x="39" fg:w="1"/><text x="3.8116%" y="815.50"></text></g><g><title>_start (22 samples, 2.01%)</title><rect x="1.8265%" y="869" width="2.0091%" height="15" fill="rgb(247,143,39)" fg:x="20" fg:w="22"/><text x="2.0765%" y="879.50">_..</text></g><g><title>_dl_start (6 samples, 0.55%)</title><rect x="3.2877%" y="853" width="0.5479%" height="15" fill="rgb(236,97,10)" fg:x="36" fg:w="6"/><text x="3.5377%" y="863.50"></text></g><g><title>elf_get_dynamic_info (2 samples, 0.18%)</title><rect x="3.6530%" y="837" width="0.1826%" height="15" fill="rgb(233,208,19)" fg:x="40" fg:w="2"/><text x="3.9030%" y="847.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="3.7443%" y="821" width="0.0913%" height="15" fill="rgb(216,164,2)" fg:x="41" fg:w="1"/><text x="3.9943%" y="831.50"></text></g><g><title>[unknown] (2 samples, 0.18%)</title><rect x="3.8356%" y="853" width="0.1826%" height="15" fill="rgb(220,129,5)" fg:x="42" fg:w="2"/><text x="4.0856%" y="863.50"></text></g><g><title>[unknown] (37 samples, 3.38%)</title><rect x="4.1096%" y="837" width="3.3790%" height="15" fill="rgb(242,17,10)" fg:x="45" fg:w="37"/><text x="4.3596%" y="847.50">[un..</text></g><g><title>[unknown] (33 samples, 3.01%)</title><rect x="4.4749%" y="821" width="3.0137%" height="15" fill="rgb(242,107,0)" fg:x="49" fg:w="33"/><text x="4.7249%" y="831.50">[un..</text></g><g><title>[unknown] (26 samples, 2.37%)</title><rect x="5.1142%" y="805" width="2.3744%" height="15" fill="rgb(251,28,31)" fg:x="56" fg:w="26"/><text x="5.3642%" y="815.50">[u..</text></g><g><title>[unknown] (16 samples, 1.46%)</title><rect x="6.0274%" y="789" width="1.4612%" height="15" fill="rgb(233,223,10)" fg:x="66" fg:w="16"/><text x="6.2774%" y="799.50"></text></g><g><title>[unknown] (5 samples, 0.46%)</title><rect x="7.0320%" y="773" width="0.4566%" height="15" fill="rgb(215,21,27)" fg:x="77" fg:w="5"/><text x="7.2820%" y="783.50"></text></g><g><title>[unknown] (2 samples, 0.18%)</title><rect x="7.3059%" y="757" width="0.1826%" height="15" fill="rgb(232,23,21)" fg:x="80" fg:w="2"/><text x="7.5559%" y="767.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="7.3973%" y="741" width="0.0913%" height="15" fill="rgb(244,5,23)" fg:x="81" fg:w="1"/><text x="7.6473%" y="751.50"></text></g><g><title>[unknown] (3 samples, 0.27%)</title><rect x="7.6712%" y="821" width="0.2740%" height="15" fill="rgb(226,81,46)" fg:x="84" fg:w="3"/><text x="7.9212%" y="831.50"></text></g><g><title>[unknown] (3 samples, 0.27%)</title><rect x="7.6712%" y="805" width="0.2740%" height="15" fill="rgb(247,70,30)" fg:x="84" fg:w="3"/><text x="7.9212%" y="815.50"></text></g><g><title>[unknown] (3 samples, 0.27%)</title><rect x="7.6712%" y="789" width="0.2740%" height="15" fill="rgb(212,68,19)" fg:x="84" fg:w="3"/><text x="7.9212%" y="799.50"></text></g><g><title>[unknown] (2 samples, 0.18%)</title><rect x="7.7626%" y="773" width="0.1826%" height="15" fill="rgb(240,187,13)" fg:x="85" fg:w="2"/><text x="8.0126%" y="783.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="7.8539%" y="757" width="0.0913%" height="15" fill="rgb(223,113,26)" fg:x="86" fg:w="1"/><text x="8.1039%" y="767.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="7.8539%" y="741" width="0.0913%" height="15" fill="rgb(206,192,2)" fg:x="86" fg:w="1"/><text x="8.1039%" y="751.50"></text></g><g><title>__GI___nptl_deallocate_stack (6 samples, 0.55%)</title><rect x="7.4886%" y="837" width="0.5479%" height="15" fill="rgb(241,108,4)" fg:x="82" fg:w="6"/><text x="7.7386%" y="847.50"></text></g><g><title>__lll_lock_wait_private (1 samples, 0.09%)</title><rect x="7.9452%" y="821" width="0.0913%" height="15" fill="rgb(247,173,49)" fg:x="87" fg:w="1"/><text x="8.1952%" y="831.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="7.9452%" y="805" width="0.0913%" height="15" fill="rgb(224,114,35)" fg:x="87" fg:w="1"/><text x="8.1952%" y="815.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="7.9452%" y="789" width="0.0913%" height="15" fill="rgb(245,159,27)" fg:x="87" fg:w="1"/><text x="8.1952%" y="799.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="7.9452%" y="773" width="0.0913%" height="15" fill="rgb(245,172,44)" fg:x="87" fg:w="1"/><text x="8.1952%" y="783.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="7.9452%" y="757" width="0.0913%" height="15" fill="rgb(236,23,11)" fg:x="87" fg:w="1"/><text x="8.1952%" y="767.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="7.9452%" y="741" width="0.0913%" height="15" fill="rgb(205,117,38)" fg:x="87" fg:w="1"/><text x="8.1952%" y="751.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="7.9452%" y="725" width="0.0913%" height="15" fill="rgb(237,72,25)" fg:x="87" fg:w="1"/><text x="8.1952%" y="735.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="7.9452%" y="709" width="0.0913%" height="15" fill="rgb(244,70,9)" fg:x="87" fg:w="1"/><text x="8.1952%" y="719.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="7.9452%" y="693" width="0.0913%" height="15" fill="rgb(217,125,39)" fg:x="87" fg:w="1"/><text x="8.1952%" y="703.50"></text></g><g><title>__GI___nptl_free_tcb (2 samples, 0.18%)</title><rect x="8.0365%" y="837" width="0.1826%" height="15" fill="rgb(235,36,10)" fg:x="88" fg:w="2"/><text x="8.2865%" y="847.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="8.1279%" y="821" width="0.0913%" height="15" fill="rgb(251,123,47)" fg:x="89" fg:w="1"/><text x="8.3779%" y="831.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="8.1279%" y="805" width="0.0913%" height="15" fill="rgb(221,13,13)" fg:x="89" fg:w="1"/><text x="8.3779%" y="815.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="8.1279%" y="789" width="0.0913%" height="15" fill="rgb(238,131,9)" fg:x="89" fg:w="1"/><text x="8.3779%" y="799.50"></text></g><g><title>core::mem::replace (1 samples, 0.09%)</title><rect x="8.3105%" y="597" width="0.0913%" height="15" fill="rgb(211,50,8)" fg:x="91" fg:w="1"/><text x="8.5605%" y="607.50"></text></g><g><title>core::ptr::read (1 samples, 0.09%)</title><rect x="8.3105%" y="581" width="0.0913%" height="15" fill="rgb(245,182,24)" fg:x="91" fg:w="1"/><text x="8.5605%" y="591.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.09%)</title><rect x="8.3105%" y="565" width="0.0913%" height="15" fill="rgb(242,14,37)" fg:x="91" fg:w="1"/><text x="8.5605%" y="575.50"></text></g><g><title>__call_tls_dtors (3 samples, 0.27%)</title><rect x="8.2192%" y="837" width="0.2740%" height="15" fill="rgb(246,228,12)" fg:x="90" fg:w="3"/><text x="8.4692%" y="847.50"></text></g><g><title>std::sys::thread_local::fast_local::destroy_value (2 samples, 0.18%)</title><rect x="8.3105%" y="821" width="0.1826%" height="15" fill="rgb(213,55,15)" fg:x="91" fg:w="2"/><text x="8.5605%" y="831.50"></text></g><g><title>std::panic::catch_unwind (2 samples, 0.18%)</title><rect x="8.3105%" y="805" width="0.1826%" height="15" fill="rgb(209,9,3)" fg:x="91" fg:w="2"/><text x="8.5605%" y="815.50"></text></g><g><title>std::panicking::try (2 samples, 0.18%)</title><rect x="8.3105%" y="789" width="0.1826%" height="15" fill="rgb(230,59,30)" fg:x="91" fg:w="2"/><text x="8.5605%" y="799.50"></text></g><g><title>std::panicking::try::do_call (2 samples, 0.18%)</title><rect x="8.3105%" y="773" width="0.1826%" height="15" fill="rgb(209,121,21)" fg:x="91" fg:w="2"/><text x="8.5605%" y="783.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (2 samples, 0.18%)</title><rect x="8.3105%" y="757" width="0.1826%" height="15" fill="rgb(220,109,13)" fg:x="91" fg:w="2"/><text x="8.5605%" y="767.50"></text></g><g><title>core::ops::function::FnOnce::call_once (2 samples, 0.18%)</title><rect x="8.3105%" y="741" width="0.1826%" height="15" fill="rgb(232,18,1)" fg:x="91" fg:w="2"/><text x="8.5605%" y="751.50"></text></g><g><title>std::sys::thread_local::fast_local::destroy_value::_{{closure}} (2 samples, 0.18%)</title><rect x="8.3105%" y="725" width="0.1826%" height="15" fill="rgb(215,41,42)" fg:x="91" fg:w="2"/><text x="8.5605%" y="735.50"></text></g><g><title>core::mem::drop (2 samples, 0.18%)</title><rect x="8.3105%" y="709" width="0.1826%" height="15" fill="rgb(224,123,36)" fg:x="91" fg:w="2"/><text x="8.5605%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;crossbeam_epoch::collector::LocalHandle&gt;&gt; (2 samples, 0.18%)</title><rect x="8.3105%" y="693" width="0.1826%" height="15" fill="rgb(240,125,3)" fg:x="91" fg:w="2"/><text x="8.5605%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;crossbeam_epoch::collector::LocalHandle&gt; (2 samples, 0.18%)</title><rect x="8.3105%" y="677" width="0.1826%" height="15" fill="rgb(205,98,50)" fg:x="91" fg:w="2"/><text x="8.5605%" y="687.50"></text></g><g><title>&lt;crossbeam_epoch::collector::LocalHandle as core::ops::drop::Drop&gt;::drop (2 samples, 0.18%)</title><rect x="8.3105%" y="661" width="0.1826%" height="15" fill="rgb(205,185,37)" fg:x="91" fg:w="2"/><text x="8.5605%" y="671.50"></text></g><g><title>crossbeam_epoch::internal::Local::release_handle (2 samples, 0.18%)</title><rect x="8.3105%" y="645" width="0.1826%" height="15" fill="rgb(238,207,15)" fg:x="91" fg:w="2"/><text x="8.5605%" y="655.50"></text></g><g><title>crossbeam_epoch::internal::Local::finalize (2 samples, 0.18%)</title><rect x="8.3105%" y="629" width="0.1826%" height="15" fill="rgb(213,199,42)" fg:x="91" fg:w="2"/><text x="8.5605%" y="639.50"></text></g><g><title>crossbeam_epoch::internal::Global::push_bag (2 samples, 0.18%)</title><rect x="8.3105%" y="613" width="0.1826%" height="15" fill="rgb(235,201,11)" fg:x="91" fg:w="2"/><text x="8.5605%" y="623.50"></text></g><g><title>crossbeam_epoch::sync::queue::Queue&lt;T&gt;::push (1 samples, 0.09%)</title><rect x="8.4018%" y="597" width="0.0913%" height="15" fill="rgb(207,46,11)" fg:x="92" fg:w="1"/><text x="8.6518%" y="607.50"></text></g><g><title>crossbeam_epoch::atomic::Owned&lt;T&gt;::new (1 samples, 0.09%)</title><rect x="8.4018%" y="581" width="0.0913%" height="15" fill="rgb(241,35,35)" fg:x="92" fg:w="1"/><text x="8.6518%" y="591.50"></text></g><g><title>crossbeam_epoch::atomic::Owned&lt;T&gt;::init (1 samples, 0.09%)</title><rect x="8.4018%" y="565" width="0.0913%" height="15" fill="rgb(243,32,47)" fg:x="92" fg:w="1"/><text x="8.6518%" y="575.50"></text></g><g><title>&lt;T as crossbeam_epoch::atomic::Pointable&gt;::init (1 samples, 0.09%)</title><rect x="8.4018%" y="549" width="0.0913%" height="15" fill="rgb(247,202,23)" fg:x="92" fg:w="1"/><text x="8.6518%" y="559.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1 samples, 0.09%)</title><rect x="8.4018%" y="533" width="0.0913%" height="15" fill="rgb(219,102,11)" fg:x="92" fg:w="1"/><text x="8.6518%" y="543.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.09%)</title><rect x="8.4018%" y="517" width="0.0913%" height="15" fill="rgb(243,110,44)" fg:x="92" fg:w="1"/><text x="8.6518%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.09%)</title><rect x="8.4018%" y="501" width="0.0913%" height="15" fill="rgb(222,74,54)" fg:x="92" fg:w="1"/><text x="8.6518%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.09%)</title><rect x="8.4018%" y="485" width="0.0913%" height="15" fill="rgb(216,99,12)" fg:x="92" fg:w="1"/><text x="8.6518%" y="495.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.09%)</title><rect x="8.4018%" y="469" width="0.0913%" height="15" fill="rgb(226,22,26)" fg:x="92" fg:w="1"/><text x="8.6518%" y="479.50"></text></g><g><title>malloc (1 samples, 0.09%)</title><rect x="8.4018%" y="453" width="0.0913%" height="15" fill="rgb(217,163,10)" fg:x="92" fg:w="1"/><text x="8.6518%" y="463.50"></text></g><g><title>__ctype_init (1 samples, 0.09%)</title><rect x="8.4932%" y="837" width="0.0913%" height="15" fill="rgb(213,25,53)" fg:x="93" fg:w="1"/><text x="8.7432%" y="847.50"></text></g><g><title>__lll_lock_wake_private (1 samples, 0.09%)</title><rect x="8.5845%" y="837" width="0.0913%" height="15" fill="rgb(252,105,26)" fg:x="94" fg:w="1"/><text x="8.8345%" y="847.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="8.5845%" y="821" width="0.0913%" height="15" fill="rgb(220,39,43)" fg:x="94" fg:w="1"/><text x="8.8345%" y="831.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="8.5845%" y="805" width="0.0913%" height="15" fill="rgb(229,68,48)" fg:x="94" fg:w="1"/><text x="8.8345%" y="815.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="8.5845%" y="789" width="0.0913%" height="15" fill="rgb(252,8,32)" fg:x="94" fg:w="1"/><text x="8.8345%" y="799.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="8.5845%" y="773" width="0.0913%" height="15" fill="rgb(223,20,43)" fg:x="94" fg:w="1"/><text x="8.8345%" y="783.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="8.5845%" y="757" width="0.0913%" height="15" fill="rgb(229,81,49)" fg:x="94" fg:w="1"/><text x="8.8345%" y="767.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="8.5845%" y="741" width="0.0913%" height="15" fill="rgb(236,28,36)" fg:x="94" fg:w="1"/><text x="8.8345%" y="751.50"></text></g><g><title>__malloc_arena_thread_freeres (3 samples, 0.27%)</title><rect x="8.6758%" y="837" width="0.2740%" height="15" fill="rgb(249,185,26)" fg:x="95" fg:w="3"/><text x="8.9258%" y="847.50"></text></g><g><title>cfree@GLIBC_2.2.5 (1 samples, 0.09%)</title><rect x="8.8584%" y="821" width="0.0913%" height="15" fill="rgb(249,174,33)" fg:x="97" fg:w="1"/><text x="9.1084%" y="831.50"></text></g><g><title>_int_free (1 samples, 0.09%)</title><rect x="8.8584%" y="805" width="0.0913%" height="15" fill="rgb(233,201,37)" fg:x="97" fg:w="1"/><text x="9.1084%" y="815.50"></text></g><g><title>__sigjmp_save (2 samples, 0.18%)</title><rect x="8.9498%" y="837" width="0.1826%" height="15" fill="rgb(221,78,26)" fg:x="98" fg:w="2"/><text x="9.1998%" y="847.50"></text></g><g><title>__sigsetjmp (1 samples, 0.09%)</title><rect x="9.1324%" y="837" width="0.0913%" height="15" fill="rgb(250,127,30)" fg:x="100" fg:w="1"/><text x="9.3824%" y="847.50"></text></g><g><title>_setjmp (10 samples, 0.91%)</title><rect x="9.2237%" y="837" width="0.9132%" height="15" fill="rgb(230,49,44)" fg:x="101" fg:w="10"/><text x="9.4737%" y="847.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="10.0457%" y="821" width="0.0913%" height="15" fill="rgb(229,67,23)" fg:x="110" fg:w="1"/><text x="10.2957%" y="831.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.37%)</title><rect x="10.1370%" y="789" width="0.3653%" height="15" fill="rgb(249,83,47)" fg:x="111" fg:w="4"/><text x="10.3870%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.27%)</title><rect x="10.2283%" y="773" width="0.2740%" height="15" fill="rgb(215,43,3)" fg:x="112" fg:w="3"/><text x="10.4783%" y="783.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.27%)</title><rect x="10.2283%" y="757" width="0.2740%" height="15" fill="rgb(238,154,13)" fg:x="112" fg:w="3"/><text x="10.4783%" y="767.50"></text></g><g><title>cfree@GLIBC_2.2.5 (3 samples, 0.27%)</title><rect x="10.2283%" y="741" width="0.2740%" height="15" fill="rgb(219,56,2)" fg:x="112" fg:w="3"/><text x="10.4783%" y="751.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="10.4110%" y="725" width="0.0913%" height="15" fill="rgb(233,0,4)" fg:x="114" fg:w="1"/><text x="10.6610%" y="735.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="10.4110%" y="709" width="0.0913%" height="15" fill="rgb(235,30,7)" fg:x="114" fg:w="1"/><text x="10.6610%" y="719.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="10.4110%" y="693" width="0.0913%" height="15" fill="rgb(250,79,13)" fg:x="114" fg:w="1"/><text x="10.6610%" y="703.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="10.4110%" y="677" width="0.0913%" height="15" fill="rgb(211,146,34)" fg:x="114" fg:w="1"/><text x="10.6610%" y="687.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="10.4110%" y="661" width="0.0913%" height="15" fill="rgb(228,22,38)" fg:x="114" fg:w="1"/><text x="10.6610%" y="671.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="10.4110%" y="645" width="0.0913%" height="15" fill="rgb(235,168,5)" fg:x="114" fg:w="1"/><text x="10.6610%" y="655.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="10.4110%" y="629" width="0.0913%" height="15" fill="rgb(221,155,16)" fg:x="114" fg:w="1"/><text x="10.6610%" y="639.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="10.4110%" y="613" width="0.0913%" height="15" fill="rgb(215,215,53)" fg:x="114" fg:w="1"/><text x="10.6610%" y="623.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="10.4110%" y="597" width="0.0913%" height="15" fill="rgb(223,4,10)" fg:x="114" fg:w="1"/><text x="10.6610%" y="607.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="10.4110%" y="581" width="0.0913%" height="15" fill="rgb(234,103,6)" fg:x="114" fg:w="1"/><text x="10.6610%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::result::Result&lt;(),alloc::boxed::Box&lt;dyn core::any::Any+core::marker::Send&gt;&gt;&gt;&gt; (2 samples, 0.18%)</title><rect x="10.5023%" y="757" width="0.1826%" height="15" fill="rgb(227,97,0)" fg:x="115" fg:w="2"/><text x="10.7523%" y="767.50"></text></g><g><title>&lt;rayon_core::latch::LockLatch as rayon_core::latch::Latch&gt;::set (1 samples, 0.09%)</title><rect x="10.6849%" y="613" width="0.0913%" height="15" fill="rgb(234,150,53)" fg:x="117" fg:w="1"/><text x="10.9349%" y="623.50"></text></g><g><title>syscall (1 samples, 0.09%)</title><rect x="10.6849%" y="597" width="0.0913%" height="15" fill="rgb(228,201,54)" fg:x="117" fg:w="1"/><text x="10.9349%" y="607.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="10.6849%" y="581" width="0.0913%" height="15" fill="rgb(222,22,37)" fg:x="117" fg:w="1"/><text x="10.9349%" y="591.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="10.6849%" y="565" width="0.0913%" height="15" fill="rgb(237,53,32)" fg:x="117" fg:w="1"/><text x="10.9349%" y="575.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="10.6849%" y="549" width="0.0913%" height="15" fill="rgb(233,25,53)" fg:x="117" fg:w="1"/><text x="10.9349%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="10.6849%" y="533" width="0.0913%" height="15" fill="rgb(210,40,34)" fg:x="117" fg:w="1"/><text x="10.9349%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="10.6849%" y="517" width="0.0913%" height="15" fill="rgb(241,220,44)" fg:x="117" fg:w="1"/><text x="10.9349%" y="527.50"></text></g><g><title>&lt;rayon_core::registry::WorkerThread as core::convert::From&lt;rayon_core::registry::ThreadBuilder&gt;&gt;::from (1 samples, 0.09%)</title><rect x="10.7763%" y="613" width="0.0913%" height="15" fill="rgb(235,28,35)" fg:x="118" fg:w="1"/><text x="11.0263%" y="623.50"></text></g><g><title>rayon_core::job::JobFifo::new (1 samples, 0.09%)</title><rect x="10.7763%" y="597" width="0.0913%" height="15" fill="rgb(210,56,17)" fg:x="118" fg:w="1"/><text x="11.0263%" y="607.50"></text></g><g><title>crossbeam_deque::deque::Injector&lt;T&gt;::new (1 samples, 0.09%)</title><rect x="10.7763%" y="581" width="0.0913%" height="15" fill="rgb(224,130,29)" fg:x="118" fg:w="1"/><text x="11.0263%" y="591.50"></text></g><g><title>&lt;crossbeam_deque::deque::Injector&lt;T&gt; as core::default::Default&gt;::default (1 samples, 0.09%)</title><rect x="10.7763%" y="565" width="0.0913%" height="15" fill="rgb(235,212,8)" fg:x="118" fg:w="1"/><text x="11.0263%" y="575.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1 samples, 0.09%)</title><rect x="10.7763%" y="549" width="0.0913%" height="15" fill="rgb(223,33,50)" fg:x="118" fg:w="1"/><text x="11.0263%" y="559.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.09%)</title><rect x="10.7763%" y="533" width="0.0913%" height="15" fill="rgb(219,149,13)" fg:x="118" fg:w="1"/><text x="11.0263%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.09%)</title><rect x="10.7763%" y="517" width="0.0913%" height="15" fill="rgb(250,156,29)" fg:x="118" fg:w="1"/><text x="11.0263%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.09%)</title><rect x="10.7763%" y="501" width="0.0913%" height="15" fill="rgb(216,193,19)" fg:x="118" fg:w="1"/><text x="11.0263%" y="511.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.09%)</title><rect x="10.7763%" y="485" width="0.0913%" height="15" fill="rgb(216,135,14)" fg:x="118" fg:w="1"/><text x="11.0263%" y="495.50"></text></g><g><title>malloc (1 samples, 0.09%)</title><rect x="10.7763%" y="469" width="0.0913%" height="15" fill="rgb(241,47,5)" fg:x="118" fg:w="1"/><text x="11.0263%" y="479.50"></text></g><g><title>_int_malloc (1 samples, 0.09%)</title><rect x="10.7763%" y="453" width="0.0913%" height="15" fill="rgb(233,42,35)" fg:x="118" fg:w="1"/><text x="11.0263%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="10.7763%" y="437" width="0.0913%" height="15" fill="rgb(231,13,6)" fg:x="118" fg:w="1"/><text x="11.0263%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="10.7763%" y="421" width="0.0913%" height="15" fill="rgb(207,181,40)" fg:x="118" fg:w="1"/><text x="11.0263%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="10.7763%" y="405" width="0.0913%" height="15" fill="rgb(254,173,49)" fg:x="118" fg:w="1"/><text x="11.0263%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="10.7763%" y="389" width="0.0913%" height="15" fill="rgb(221,1,38)" fg:x="118" fg:w="1"/><text x="11.0263%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="10.7763%" y="373" width="0.0913%" height="15" fill="rgb(206,124,46)" fg:x="118" fg:w="1"/><text x="11.0263%" y="383.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (2 samples, 0.18%)</title><rect x="10.8676%" y="613" width="0.1826%" height="15" fill="rgb(249,21,11)" fg:x="119" fg:w="2"/><text x="11.1176%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;rayon_core::registry::Registry&gt; (2 samples, 0.18%)</title><rect x="10.8676%" y="597" width="0.1826%" height="15" fill="rgb(222,201,40)" fg:x="119" fg:w="2"/><text x="11.1176%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;rayon_core::registry::ThreadInfo&gt;&gt; (2 samples, 0.18%)</title><rect x="10.8676%" y="581" width="0.1826%" height="15" fill="rgb(235,61,29)" fg:x="119" fg:w="2"/><text x="11.1176%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.18%)</title><rect x="10.8676%" y="565" width="0.1826%" height="15" fill="rgb(219,207,3)" fg:x="119" fg:w="2"/><text x="11.1176%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;[rayon_core::registry::ThreadInfo]&gt; (2 samples, 0.18%)</title><rect x="10.8676%" y="549" width="0.1826%" height="15" fill="rgb(222,56,46)" fg:x="119" fg:w="2"/><text x="11.1176%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;rayon_core::registry::ThreadInfo&gt; (2 samples, 0.18%)</title><rect x="10.8676%" y="533" width="0.1826%" height="15" fill="rgb(239,76,54)" fg:x="119" fg:w="2"/><text x="11.1176%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;crossbeam_deque::deque::Stealer&lt;rayon_core::job::JobRef&gt;&gt; (2 samples, 0.18%)</title><rect x="10.8676%" y="517" width="0.1826%" height="15" fill="rgb(231,124,27)" fg:x="119" fg:w="2"/><text x="11.1176%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;crossbeam_utils::cache_padded::CachePadded&lt;crossbeam_deque::deque::Inner&lt;rayon_core::job::JobRef&gt;&gt;&gt;&gt; (2 samples, 0.18%)</title><rect x="10.8676%" y="501" width="0.1826%" height="15" fill="rgb(249,195,6)" fg:x="119" fg:w="2"/><text x="11.1176%" y="511.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.18%)</title><rect x="10.8676%" y="485" width="0.1826%" height="15" fill="rgb(237,174,47)" fg:x="119" fg:w="2"/><text x="11.1176%" y="495.50"></text></g><g><title>cfree@GLIBC_2.2.5 (2 samples, 0.18%)</title><rect x="10.8676%" y="469" width="0.1826%" height="15" fill="rgb(206,201,31)" fg:x="119" fg:w="2"/><text x="11.1176%" y="479.50"></text></g><g><title>_int_free (1 samples, 0.09%)</title><rect x="10.9589%" y="453" width="0.0913%" height="15" fill="rgb(231,57,52)" fg:x="120" fg:w="1"/><text x="11.2089%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;rayon_core::registry::Registry&gt;&gt; (2 samples, 0.18%)</title><rect x="11.0502%" y="597" width="0.1826%" height="15" fill="rgb(248,177,22)" fg:x="121" fg:w="2"/><text x="11.3002%" y="607.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.18%)</title><rect x="11.0502%" y="581" width="0.1826%" height="15" fill="rgb(215,211,37)" fg:x="121" fg:w="2"/><text x="11.3002%" y="591.50"></text></g><g><title>[unknown] (2 samples, 0.18%)</title><rect x="11.5982%" y="453" width="0.1826%" height="15" fill="rgb(241,128,51)" fg:x="127" fg:w="2"/><text x="11.8482%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="11.6895%" y="437" width="0.0913%" height="15" fill="rgb(227,165,31)" fg:x="128" fg:w="1"/><text x="11.9395%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="11.6895%" y="421" width="0.0913%" height="15" fill="rgb(228,167,24)" fg:x="128" fg:w="1"/><text x="11.9395%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="11.6895%" y="405" width="0.0913%" height="15" fill="rgb(228,143,12)" fg:x="128" fg:w="1"/><text x="11.9395%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="11.6895%" y="389" width="0.0913%" height="15" fill="rgb(249,149,8)" fg:x="128" fg:w="1"/><text x="11.9395%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="11.6895%" y="373" width="0.0913%" height="15" fill="rgb(243,35,44)" fg:x="128" fg:w="1"/><text x="11.9395%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;rayon_core::registry::WorkerThread&gt; (12 samples, 1.10%)</title><rect x="11.0502%" y="613" width="1.0959%" height="15" fill="rgb(246,89,9)" fg:x="121" fg:w="12"/><text x="11.3002%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;rayon_core::job::JobFifo&gt; (10 samples, 0.91%)</title><rect x="11.2329%" y="597" width="0.9132%" height="15" fill="rgb(233,213,13)" fg:x="123" fg:w="10"/><text x="11.4829%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;crossbeam_deque::deque::Injector&lt;rayon_core::job::JobRef&gt;&gt; (10 samples, 0.91%)</title><rect x="11.2329%" y="581" width="0.9132%" height="15" fill="rgb(233,141,41)" fg:x="123" fg:w="10"/><text x="11.4829%" y="591.50"></text></g><g><title>&lt;crossbeam_deque::deque::Injector&lt;T&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.91%)</title><rect x="11.2329%" y="565" width="0.9132%" height="15" fill="rgb(239,167,4)" fg:x="123" fg:w="10"/><text x="11.4829%" y="575.50"></text></g><g><title>core::mem::drop (10 samples, 0.91%)</title><rect x="11.2329%" y="549" width="0.9132%" height="15" fill="rgb(209,217,16)" fg:x="123" fg:w="10"/><text x="11.4829%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;crossbeam_deque::deque::Block&lt;rayon_core::job::JobRef&gt;&gt;&gt; (10 samples, 0.91%)</title><rect x="11.2329%" y="533" width="0.9132%" height="15" fill="rgb(219,88,35)" fg:x="123" fg:w="10"/><text x="11.4829%" y="543.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.91%)</title><rect x="11.2329%" y="517" width="0.9132%" height="15" fill="rgb(220,193,23)" fg:x="123" fg:w="10"/><text x="11.4829%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (10 samples, 0.91%)</title><rect x="11.2329%" y="501" width="0.9132%" height="15" fill="rgb(230,90,52)" fg:x="123" fg:w="10"/><text x="11.4829%" y="511.50"></text></g><g><title>alloc::alloc::dealloc (10 samples, 0.91%)</title><rect x="11.2329%" y="485" width="0.9132%" height="15" fill="rgb(252,106,19)" fg:x="123" fg:w="10"/><text x="11.4829%" y="495.50"></text></g><g><title>cfree@GLIBC_2.2.5 (10 samples, 0.91%)</title><rect x="11.2329%" y="469" width="0.9132%" height="15" fill="rgb(206,74,20)" fg:x="123" fg:w="10"/><text x="11.4829%" y="479.50"></text></g><g><title>_int_free (4 samples, 0.37%)</title><rect x="11.7808%" y="453" width="0.3653%" height="15" fill="rgb(230,138,44)" fg:x="129" fg:w="4"/><text x="12.0308%" y="463.50"></text></g><g><title>_int_free_merge_chunk (4 samples, 0.37%)</title><rect x="11.7808%" y="437" width="0.3653%" height="15" fill="rgb(235,182,43)" fg:x="129" fg:w="4"/><text x="12.0308%" y="447.50"></text></g><g><title>&lt;rayon_core::latch::LockLatch as rayon_core::latch::Latch&gt;::set (5 samples, 0.46%)</title><rect x="12.1461%" y="597" width="0.4566%" height="15" fill="rgb(242,16,51)" fg:x="133" fg:w="5"/><text x="12.3961%" y="607.50"></text></g><g><title>syscall (5 samples, 0.46%)</title><rect x="12.1461%" y="581" width="0.4566%" height="15" fill="rgb(248,9,4)" fg:x="133" fg:w="5"/><text x="12.3961%" y="591.50"></text></g><g><title>[unknown] (5 samples, 0.46%)</title><rect x="12.1461%" y="565" width="0.4566%" height="15" fill="rgb(210,31,22)" fg:x="133" fg:w="5"/><text x="12.3961%" y="575.50"></text></g><g><title>[unknown] (5 samples, 0.46%)</title><rect x="12.1461%" y="549" width="0.4566%" height="15" fill="rgb(239,54,39)" fg:x="133" fg:w="5"/><text x="12.3961%" y="559.50"></text></g><g><title>[unknown] (4 samples, 0.37%)</title><rect x="12.2374%" y="533" width="0.3653%" height="15" fill="rgb(230,99,41)" fg:x="134" fg:w="4"/><text x="12.4874%" y="543.50"></text></g><g><title>[unknown] (3 samples, 0.27%)</title><rect x="12.3288%" y="517" width="0.2740%" height="15" fill="rgb(253,106,12)" fg:x="135" fg:w="3"/><text x="12.5788%" y="527.50"></text></g><g><title>[unknown] (3 samples, 0.27%)</title><rect x="12.3288%" y="501" width="0.2740%" height="15" fill="rgb(213,46,41)" fg:x="135" fg:w="3"/><text x="12.5788%" y="511.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (22 samples, 2.01%)</title><rect x="13.0594%" y="517" width="2.0091%" height="15" fill="rgb(215,133,35)" fg:x="143" fg:w="22"/><text x="13.3094%" y="527.50">&lt;..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (22 samples, 2.01%)</title><rect x="13.0594%" y="501" width="2.0091%" height="15" fill="rgb(213,28,5)" fg:x="143" fg:w="22"/><text x="13.3094%" y="511.50">&lt;..</text></g><g><title>alloc::alloc::dealloc (22 samples, 2.01%)</title><rect x="13.0594%" y="485" width="2.0091%" height="15" fill="rgb(215,77,49)" fg:x="143" fg:w="22"/><text x="13.3094%" y="495.50">a..</text></g><g><title>cfree@GLIBC_2.2.5 (22 samples, 2.01%)</title><rect x="13.0594%" y="469" width="2.0091%" height="15" fill="rgb(248,100,22)" fg:x="143" fg:w="22"/><text x="13.3094%" y="479.50">c..</text></g><g><title>_int_free (18 samples, 1.64%)</title><rect x="13.4247%" y="453" width="1.6438%" height="15" fill="rgb(208,67,9)" fg:x="147" fg:w="18"/><text x="13.6747%" y="463.50"></text></g><g><title>&lt;rayon_core::latch::CountLatch as rayon_core::latch::Latch&gt;::set (6 samples, 0.55%)</title><rect x="15.0685%" y="469" width="0.5479%" height="15" fill="rgb(219,133,21)" fg:x="165" fg:w="6"/><text x="15.3185%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (2 samples, 0.18%)</title><rect x="15.7078%" y="357" width="0.1826%" height="15" fill="rgb(246,46,29)" fg:x="172" fg:w="2"/><text x="15.9578%" y="367.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (2 samples, 0.18%)</title><rect x="15.7078%" y="341" width="0.1826%" height="15" fill="rgb(246,185,52)" fg:x="172" fg:w="2"/><text x="15.9578%" y="351.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (2 samples, 0.18%)</title><rect x="15.7078%" y="325" width="0.1826%" height="15" fill="rgb(252,136,11)" fg:x="172" fg:w="2"/><text x="15.9578%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;julia::generate_image_buffer::{{closure}}::{{closure}}&gt; (5 samples, 0.46%)</title><rect x="15.8904%" y="357" width="0.4566%" height="15" fill="rgb(219,138,53)" fg:x="174" fg:w="5"/><text x="16.1404%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;std::sync::rwlock::RwLock&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;(u8,u8,u8)&gt;&gt;&gt;&gt;&gt; (5 samples, 0.46%)</title><rect x="15.8904%" y="341" width="0.4566%" height="15" fill="rgb(211,51,23)" fg:x="174" fg:w="5"/><text x="16.1404%" y="351.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.46%)</title><rect x="15.8904%" y="325" width="0.4566%" height="15" fill="rgb(247,221,28)" fg:x="174" fg:w="5"/><text x="16.1404%" y="335.50"></text></g><g><title>std::sys::sync::rwlock::futex::RwLock::wake_writer_or_readers (5 samples, 0.46%)</title><rect x="16.3470%" y="309" width="0.4566%" height="15" fill="rgb(251,222,45)" fg:x="179" fg:w="5"/><text x="16.5970%" y="319.50"></text></g><g><title>std::sys::sync::rwlock::futex::RwLock::wake_writer (2 samples, 0.18%)</title><rect x="16.6210%" y="293" width="0.1826%" height="15" fill="rgb(217,162,53)" fg:x="182" fg:w="2"/><text x="16.8710%" y="303.50"></text></g><g><title>core::sync::atomic::AtomicU32::fetch_add (2 samples, 0.18%)</title><rect x="16.6210%" y="277" width="0.1826%" height="15" fill="rgb(229,93,14)" fg:x="182" fg:w="2"/><text x="16.8710%" y="287.50"></text></g><g><title>core::cell::UnsafeCell&lt;T&gt;::get (2 samples, 0.18%)</title><rect x="16.6210%" y="261" width="0.1826%" height="15" fill="rgb(209,67,49)" fg:x="182" fg:w="2"/><text x="16.8710%" y="271.50"></text></g><g><title>std::sys::sync::rwlock::futex::RwLock::write_contended (1 samples, 0.09%)</title><rect x="16.8037%" y="309" width="0.0913%" height="15" fill="rgb(213,87,29)" fg:x="184" fg:w="1"/><text x="17.0537%" y="319.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (1 samples, 0.09%)</title><rect x="16.8037%" y="293" width="0.0913%" height="15" fill="rgb(205,151,52)" fg:x="184" fg:w="1"/><text x="17.0537%" y="303.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.09%)</title><rect x="16.8037%" y="277" width="0.0913%" height="15" fill="rgb(253,215,39)" fg:x="184" fg:w="1"/><text x="17.0537%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="16.8037%" y="261" width="0.0913%" height="15" fill="rgb(221,220,41)" fg:x="184" fg:w="1"/><text x="17.0537%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockWriteGuard&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;(u8,u8,u8)&gt;&gt;&gt;&gt; (18 samples, 1.64%)</title><rect x="16.3470%" y="357" width="1.6438%" height="15" fill="rgb(218,133,21)" fg:x="179" fg:w="18"/><text x="16.5970%" y="367.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockWriteGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 1.64%)</title><rect x="16.3470%" y="341" width="1.6438%" height="15" fill="rgb(221,193,43)" fg:x="179" fg:w="18"/><text x="16.5970%" y="351.50"></text></g><g><title>std::sys::sync::rwlock::futex::RwLock::write_unlock (18 samples, 1.64%)</title><rect x="16.3470%" y="325" width="1.6438%" height="15" fill="rgb(240,128,52)" fg:x="179" fg:w="18"/><text x="16.5970%" y="335.50"></text></g><g><title>syscall (12 samples, 1.10%)</title><rect x="16.8950%" y="309" width="1.0959%" height="15" fill="rgb(253,114,12)" fg:x="185" fg:w="12"/><text x="17.1450%" y="319.50"></text></g><g><title>[unknown] (12 samples, 1.10%)</title><rect x="16.8950%" y="293" width="1.0959%" height="15" fill="rgb(215,223,47)" fg:x="185" fg:w="12"/><text x="17.1450%" y="303.50"></text></g><g><title>[unknown] (12 samples, 1.10%)</title><rect x="16.8950%" y="277" width="1.0959%" height="15" fill="rgb(248,225,23)" fg:x="185" fg:w="12"/><text x="17.1450%" y="287.50"></text></g><g><title>[unknown] (11 samples, 1.00%)</title><rect x="16.9863%" y="261" width="1.0046%" height="15" fill="rgb(250,108,0)" fg:x="186" fg:w="11"/><text x="17.2363%" y="271.50"></text></g><g><title>[unknown] (9 samples, 0.82%)</title><rect x="17.1689%" y="245" width="0.8219%" height="15" fill="rgb(228,208,7)" fg:x="188" fg:w="9"/><text x="17.4189%" y="255.50"></text></g><g><title>[unknown] (7 samples, 0.64%)</title><rect x="17.3516%" y="229" width="0.6393%" height="15" fill="rgb(244,45,10)" fg:x="190" fg:w="7"/><text x="17.6016%" y="239.50"></text></g><g><title>[unknown] (4 samples, 0.37%)</title><rect x="17.6256%" y="213" width="0.3653%" height="15" fill="rgb(207,125,25)" fg:x="193" fg:w="4"/><text x="17.8756%" y="223.50"></text></g><g><title>[unknown] (2 samples, 0.18%)</title><rect x="17.8082%" y="197" width="0.1826%" height="15" fill="rgb(210,195,18)" fg:x="195" fg:w="2"/><text x="18.0582%" y="207.50"></text></g><g><title>&lt;num_complex::Complex&lt;T&gt; as core::ops::arith::Add&gt;::add (2 samples, 0.18%)</title><rect x="18.4475%" y="341" width="0.1826%" height="15" fill="rgb(249,80,12)" fg:x="202" fg:w="2"/><text x="18.6975%" y="351.50"></text></g><g><title>&lt;f64 as core::ops::arith::Add&gt;::add (2 samples, 0.18%)</title><rect x="18.4475%" y="325" width="0.1826%" height="15" fill="rgb(221,65,9)" fg:x="202" fg:w="2"/><text x="18.6975%" y="335.50"></text></g><g><title>&lt;num_complex::Complex&lt;T&gt; as core::ops::arith::Mul&gt;::mul (2 samples, 0.18%)</title><rect x="18.6301%" y="341" width="0.1826%" height="15" fill="rgb(235,49,36)" fg:x="204" fg:w="2"/><text x="18.8801%" y="351.50"></text></g><g><title>&lt;f64 as core::ops::arith::Mul&gt;::mul (2 samples, 0.18%)</title><rect x="18.6301%" y="325" width="0.1826%" height="15" fill="rgb(225,32,20)" fg:x="204" fg:w="2"/><text x="18.8801%" y="335.50"></text></g><g><title>num_complex::Complex&lt;T&gt;::norm (19 samples, 1.74%)</title><rect x="18.8128%" y="341" width="1.7352%" height="15" fill="rgb(215,141,46)" fg:x="206" fg:w="19"/><text x="19.0628%" y="351.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::hypot (19 samples, 1.74%)</title><rect x="18.8128%" y="325" width="1.7352%" height="15" fill="rgb(250,160,47)" fg:x="206" fg:w="19"/><text x="19.0628%" y="335.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::hypot (19 samples, 1.74%)</title><rect x="18.8128%" y="309" width="1.7352%" height="15" fill="rgb(216,222,40)" fg:x="206" fg:w="19"/><text x="19.0628%" y="319.50"></text></g><g><title>hypot (19 samples, 1.74%)</title><rect x="18.8128%" y="293" width="1.7352%" height="15" fill="rgb(234,217,39)" fg:x="206" fg:w="19"/><text x="19.0628%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="20.4566%" y="277" width="0.0913%" height="15" fill="rgb(207,178,40)" fg:x="224" fg:w="1"/><text x="20.7066%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="20.4566%" y="261" width="0.0913%" height="15" fill="rgb(221,136,13)" fg:x="224" fg:w="1"/><text x="20.7066%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="20.4566%" y="245" width="0.0913%" height="15" fill="rgb(249,199,10)" fg:x="224" fg:w="1"/><text x="20.7066%" y="255.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="20.4566%" y="229" width="0.0913%" height="15" fill="rgb(249,222,13)" fg:x="224" fg:w="1"/><text x="20.7066%" y="239.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="20.4566%" y="213" width="0.0913%" height="15" fill="rgb(244,185,38)" fg:x="224" fg:w="1"/><text x="20.7066%" y="223.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="20.4566%" y="197" width="0.0913%" height="15" fill="rgb(236,202,9)" fg:x="224" fg:w="1"/><text x="20.7066%" y="207.50"></text></g><g><title>julia::color_generator (48 samples, 4.38%)</title><rect x="17.9909%" y="357" width="4.3836%" height="15" fill="rgb(250,229,37)" fg:x="197" fg:w="48"/><text x="18.2409%" y="367.50">julia..</text></g><g><title>std::f64::&lt;impl f64&gt;::powf (20 samples, 1.83%)</title><rect x="20.5479%" y="341" width="1.8265%" height="15" fill="rgb(206,174,23)" fg:x="225" fg:w="20"/><text x="20.7979%" y="351.50">s..</text></g><g><title>pow (20 samples, 1.83%)</title><rect x="20.5479%" y="325" width="1.8265%" height="15" fill="rgb(211,33,43)" fg:x="225" fg:w="20"/><text x="20.7979%" y="335.50">p..</text></g><g><title>[libm.so.6] (18 samples, 1.64%)</title><rect x="20.7306%" y="309" width="1.6438%" height="15" fill="rgb(245,58,50)" fg:x="227" fg:w="18"/><text x="20.9806%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="22.2831%" y="293" width="0.0913%" height="15" fill="rgb(244,68,36)" fg:x="244" fg:w="1"/><text x="22.5331%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="22.2831%" y="277" width="0.0913%" height="15" fill="rgb(232,229,15)" fg:x="244" fg:w="1"/><text x="22.5331%" y="287.50"></text></g><g><title>std::sync::rwlock::RwLockWriteGuard&lt;T&gt;::new (2 samples, 0.18%)</title><rect x="22.3744%" y="341" width="0.1826%" height="15" fill="rgb(254,30,23)" fg:x="245" fg:w="2"/><text x="22.6244%" y="351.50"></text></g><g><title>std::sync::poison::Flag::guard (2 samples, 0.18%)</title><rect x="22.3744%" y="325" width="0.1826%" height="15" fill="rgb(235,160,14)" fg:x="245" fg:w="2"/><text x="22.6244%" y="335.50"></text></g><g><title>std::thread::panicking (1 samples, 0.09%)</title><rect x="22.4658%" y="309" width="0.0913%" height="15" fill="rgb(212,155,44)" fg:x="246" fg:w="1"/><text x="22.7158%" y="319.50"></text></g><g><title>std::panicking::panicking (1 samples, 0.09%)</title><rect x="22.4658%" y="293" width="0.0913%" height="15" fill="rgb(226,2,50)" fg:x="246" fg:w="1"/><text x="22.7158%" y="303.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (1 samples, 0.09%)</title><rect x="22.4658%" y="277" width="0.0913%" height="15" fill="rgb(234,177,6)" fg:x="246" fg:w="1"/><text x="22.7158%" y="287.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_err (5 samples, 0.46%)</title><rect x="22.5571%" y="325" width="0.4566%" height="15" fill="rgb(217,24,9)" fg:x="247" fg:w="5"/><text x="22.8071%" y="335.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_ok (5 samples, 0.46%)</title><rect x="22.5571%" y="309" width="0.4566%" height="15" fill="rgb(220,13,46)" fg:x="247" fg:w="5"/><text x="22.8071%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="23.4703%" y="309" width="0.0913%" height="15" fill="rgb(239,221,27)" fg:x="257" fg:w="1"/><text x="23.7203%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="23.4703%" y="293" width="0.0913%" height="15" fill="rgb(222,198,25)" fg:x="257" fg:w="1"/><text x="23.7203%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="23.4703%" y="277" width="0.0913%" height="15" fill="rgb(211,99,13)" fg:x="257" fg:w="1"/><text x="23.7203%" y="287.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (3 samples, 0.27%)</title><rect x="23.5616%" y="309" width="0.2740%" height="15" fill="rgb(232,111,31)" fg:x="258" fg:w="3"/><text x="23.8116%" y="319.50"></text></g><g><title>core::sync::atomic::atomic_load (3 samples, 0.27%)</title><rect x="23.5616%" y="293" width="0.2740%" height="15" fill="rgb(245,82,37)" fg:x="258" fg:w="3"/><text x="23.8116%" y="303.50"></text></g><g><title>std::sys::pal::unix::futex::futex_wait (2 samples, 0.18%)</title><rect x="23.8356%" y="309" width="0.1826%" height="15" fill="rgb(227,149,46)" fg:x="261" fg:w="2"/><text x="24.0856%" y="319.50"></text></g><g><title>syscall (2 samples, 0.18%)</title><rect x="23.8356%" y="293" width="0.1826%" height="15" fill="rgb(218,36,50)" fg:x="261" fg:w="2"/><text x="24.0856%" y="303.50"></text></g><g><title>[unknown] (2 samples, 0.18%)</title><rect x="23.8356%" y="277" width="0.1826%" height="15" fill="rgb(226,80,48)" fg:x="261" fg:w="2"/><text x="24.0856%" y="287.50"></text></g><g><title>[unknown] (2 samples, 0.18%)</title><rect x="23.8356%" y="261" width="0.1826%" height="15" fill="rgb(238,224,15)" fg:x="261" fg:w="2"/><text x="24.0856%" y="271.50"></text></g><g><title>[unknown] (2 samples, 0.18%)</title><rect x="23.8356%" y="245" width="0.1826%" height="15" fill="rgb(241,136,10)" fg:x="261" fg:w="2"/><text x="24.0856%" y="255.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="23.9269%" y="229" width="0.0913%" height="15" fill="rgb(208,32,45)" fg:x="262" fg:w="1"/><text x="24.1769%" y="239.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="23.9269%" y="213" width="0.0913%" height="15" fill="rgb(207,135,9)" fg:x="262" fg:w="1"/><text x="24.1769%" y="223.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="23.9269%" y="197" width="0.0913%" height="15" fill="rgb(206,86,44)" fg:x="262" fg:w="1"/><text x="24.1769%" y="207.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="23.9269%" y="181" width="0.0913%" height="15" fill="rgb(245,177,15)" fg:x="262" fg:w="1"/><text x="24.1769%" y="191.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="23.9269%" y="165" width="0.0913%" height="15" fill="rgb(206,64,50)" fg:x="262" fg:w="1"/><text x="24.1769%" y="175.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="23.9269%" y="149" width="0.0913%" height="15" fill="rgb(234,36,40)" fg:x="262" fg:w="1"/><text x="24.1769%" y="159.50"></text></g><g><title>&lt;rayon_core::job::HeapJob&lt;BODY&gt; as rayon_core::job::Job&gt;::execute (129 samples, 11.78%)</title><rect x="12.6027%" y="533" width="11.7808%" height="15" fill="rgb(213,64,8)" fg:x="138" fg:w="129"/><text x="12.8527%" y="543.50">&lt;rayon_core::job:..</text></g><g><title>rayon_core::scope::Scope::spawn::_{{closure}} (102 samples, 9.32%)</title><rect x="15.0685%" y="517" width="9.3151%" height="15" fill="rgb(210,75,36)" fg:x="165" fg:w="102"/><text x="15.3185%" y="527.50">rayon_core::s..</text></g><g><title>rayon_core::scope::ScopeBase::execute_job (102 samples, 9.32%)</title><rect x="15.0685%" y="501" width="9.3151%" height="15" fill="rgb(229,88,21)" fg:x="165" fg:w="102"/><text x="15.3185%" y="511.50">rayon_core::s..</text></g><g><title>rayon_core::scope::ScopeBase::execute_job_closure (102 samples, 9.32%)</title><rect x="15.0685%" y="485" width="9.3151%" height="15" fill="rgb(252,204,47)" fg:x="165" fg:w="102"/><text x="15.3185%" y="495.50">rayon_core::s..</text></g><g><title>rayon_core::unwind::halt_unwinding (96 samples, 8.77%)</title><rect x="15.6164%" y="469" width="8.7671%" height="15" fill="rgb(208,77,27)" fg:x="171" fg:w="96"/><text x="15.8664%" y="479.50">rayon_core::..</text></g><g><title>std::panic::catch_unwind (96 samples, 8.77%)</title><rect x="15.6164%" y="453" width="8.7671%" height="15" fill="rgb(221,76,26)" fg:x="171" fg:w="96"/><text x="15.8664%" y="463.50">std::panic::..</text></g><g><title>std::panicking::try (96 samples, 8.77%)</title><rect x="15.6164%" y="437" width="8.7671%" height="15" fill="rgb(225,139,18)" fg:x="171" fg:w="96"/><text x="15.8664%" y="447.50">std::panicki..</text></g><g><title>std::panicking::try::do_call (96 samples, 8.77%)</title><rect x="15.6164%" y="421" width="8.7671%" height="15" fill="rgb(230,137,11)" fg:x="171" fg:w="96"/><text x="15.8664%" y="431.50">std::panicki..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (96 samples, 8.77%)</title><rect x="15.6164%" y="405" width="8.7671%" height="15" fill="rgb(212,28,1)" fg:x="171" fg:w="96"/><text x="15.8664%" y="415.50">&lt;core::panic..</text></g><g><title>rayon_core::scope::Scope::spawn::_{{closure}}::_{{closure}} (96 samples, 8.77%)</title><rect x="15.6164%" y="389" width="8.7671%" height="15" fill="rgb(248,164,17)" fg:x="171" fg:w="96"/><text x="15.8664%" y="399.50">rayon_core::..</text></g><g><title>julia::generate_image_buffer::_{{closure}}::_{{closure}} (96 samples, 8.77%)</title><rect x="15.6164%" y="373" width="8.7671%" height="15" fill="rgb(222,171,42)" fg:x="171" fg:w="96"/><text x="15.8664%" y="383.50">julia::gener..</text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::write (22 samples, 2.01%)</title><rect x="22.3744%" y="357" width="2.0091%" height="15" fill="rgb(243,84,45)" fg:x="245" fg:w="22"/><text x="22.6244%" y="367.50">s..</text></g><g><title>std::sys::sync::rwlock::futex::RwLock::write (20 samples, 1.83%)</title><rect x="22.5571%" y="341" width="1.8265%" height="15" fill="rgb(252,49,23)" fg:x="247" fg:w="20"/><text x="22.8071%" y="351.50">s..</text></g><g><title>std::sys::sync::rwlock::futex::RwLock::write_contended (15 samples, 1.37%)</title><rect x="23.0137%" y="325" width="1.3699%" height="15" fill="rgb(215,19,7)" fg:x="252" fg:w="15"/><text x="23.2637%" y="335.50"></text></g><g><title>std::sys::sync::rwlock::futex::RwLock::spin_write (4 samples, 0.37%)</title><rect x="24.0183%" y="309" width="0.3653%" height="15" fill="rgb(238,81,41)" fg:x="263" fg:w="4"/><text x="24.2683%" y="319.50"></text></g><g><title>std::sys::sync::rwlock::futex::RwLock::spin_until (4 samples, 0.37%)</title><rect x="24.0183%" y="293" width="0.3653%" height="15" fill="rgb(210,199,37)" fg:x="263" fg:w="4"/><text x="24.2683%" y="303.50"></text></g><g><title>std::sys::sync::rwlock::futex::RwLock::spin_write::_{{closure}} (4 samples, 0.37%)</title><rect x="24.0183%" y="277" width="0.3653%" height="15" fill="rgb(244,192,49)" fg:x="263" fg:w="4"/><text x="24.2683%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="24.2922%" y="261" width="0.0913%" height="15" fill="rgb(226,211,11)" fg:x="266" fg:w="1"/><text x="24.5422%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="24.2922%" y="245" width="0.0913%" height="15" fill="rgb(236,162,54)" fg:x="266" fg:w="1"/><text x="24.5422%" y="255.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="24.2922%" y="229" width="0.0913%" height="15" fill="rgb(220,229,9)" fg:x="266" fg:w="1"/><text x="24.5422%" y="239.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="24.2922%" y="213" width="0.0913%" height="15" fill="rgb(250,87,22)" fg:x="266" fg:w="1"/><text x="24.5422%" y="223.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="24.2922%" y="197" width="0.0913%" height="15" fill="rgb(239,43,17)" fg:x="266" fg:w="1"/><text x="24.5422%" y="207.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (18 samples, 1.64%)</title><rect x="24.8402%" y="165" width="1.6438%" height="15" fill="rgb(231,177,25)" fg:x="272" fg:w="18"/><text x="25.0902%" y="175.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (5 samples, 0.46%)</title><rect x="26.5753%" y="149" width="0.4566%" height="15" fill="rgb(219,179,1)" fg:x="291" fg:w="5"/><text x="26.8253%" y="159.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (5 samples, 0.46%)</title><rect x="26.5753%" y="133" width="0.4566%" height="15" fill="rgb(238,219,53)" fg:x="291" fg:w="5"/><text x="26.8253%" y="143.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (5 samples, 0.46%)</title><rect x="26.5753%" y="117" width="0.4566%" height="15" fill="rgb(232,167,36)" fg:x="291" fg:w="5"/><text x="26.8253%" y="127.50"></text></g><g><title>rayon_core::job::HeapJob&lt;BODY&gt;::new (9 samples, 0.82%)</title><rect x="27.0320%" y="149" width="0.8219%" height="15" fill="rgb(244,19,51)" fg:x="296" fg:w="9"/><text x="27.2820%" y="159.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (9 samples, 0.82%)</title><rect x="27.0320%" y="133" width="0.8219%" height="15" fill="rgb(224,6,22)" fg:x="296" fg:w="9"/><text x="27.2820%" y="143.50"></text></g><g><title>alloc::alloc::exchange_malloc (9 samples, 0.82%)</title><rect x="27.0320%" y="117" width="0.8219%" height="15" fill="rgb(224,145,5)" fg:x="296" fg:w="9"/><text x="27.2820%" y="127.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (9 samples, 0.82%)</title><rect x="27.0320%" y="101" width="0.8219%" height="15" fill="rgb(234,130,49)" fg:x="296" fg:w="9"/><text x="27.2820%" y="111.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (9 samples, 0.82%)</title><rect x="27.0320%" y="85" width="0.8219%" height="15" fill="rgb(254,6,2)" fg:x="296" fg:w="9"/><text x="27.2820%" y="95.50"></text></g><g><title>alloc::alloc::alloc (9 samples, 0.82%)</title><rect x="27.0320%" y="69" width="0.8219%" height="15" fill="rgb(208,96,46)" fg:x="296" fg:w="9"/><text x="27.2820%" y="79.50"></text></g><g><title>malloc (9 samples, 0.82%)</title><rect x="27.0320%" y="53" width="0.8219%" height="15" fill="rgb(239,3,39)" fg:x="296" fg:w="9"/><text x="27.2820%" y="63.50"></text></g><g><title>_int_malloc (7 samples, 0.64%)</title><rect x="27.2146%" y="37" width="0.6393%" height="15" fill="rgb(233,210,1)" fg:x="298" fg:w="7"/><text x="27.4646%" y="47.50"></text></g><g><title>crossbeam_deque::deque::Worker&lt;T&gt;::is_empty (9 samples, 0.82%)</title><rect x="27.9452%" y="117" width="0.8219%" height="15" fill="rgb(244,137,37)" fg:x="306" fg:w="9"/><text x="28.1952%" y="127.50"></text></g><g><title>core::sync::atomic::AtomicIsize::load (9 samples, 0.82%)</title><rect x="27.9452%" y="101" width="0.8219%" height="15" fill="rgb(240,136,2)" fg:x="306" fg:w="9"/><text x="28.1952%" y="111.50"></text></g><g><title>core::sync::atomic::atomic_load (9 samples, 0.82%)</title><rect x="27.9452%" y="85" width="0.8219%" height="15" fill="rgb(239,18,37)" fg:x="306" fg:w="9"/><text x="28.1952%" y="95.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (2 samples, 0.18%)</title><rect x="28.7671%" y="101" width="0.1826%" height="15" fill="rgb(218,185,22)" fg:x="315" fg:w="2"/><text x="29.0171%" y="111.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (2 samples, 0.18%)</title><rect x="28.7671%" y="85" width="0.1826%" height="15" fill="rgb(225,218,4)" fg:x="315" fg:w="2"/><text x="29.0171%" y="95.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (2 samples, 0.18%)</title><rect x="28.7671%" y="69" width="0.1826%" height="15" fill="rgb(230,182,32)" fg:x="315" fg:w="2"/><text x="29.0171%" y="79.50"></text></g><g><title>crossbeam_deque::deque::Worker&lt;T&gt;::push (5 samples, 0.46%)</title><rect x="28.7671%" y="117" width="0.4566%" height="15" fill="rgb(242,56,43)" fg:x="315" fg:w="5"/><text x="29.0171%" y="127.50"></text></g><g><title>crossbeam_deque::deque::Buffer&lt;T&gt;::write (3 samples, 0.27%)</title><rect x="28.9498%" y="101" width="0.2740%" height="15" fill="rgb(233,99,24)" fg:x="317" fg:w="3"/><text x="29.1998%" y="111.50"></text></g><g><title>core::ptr::write_volatile (3 samples, 0.27%)</title><rect x="28.9498%" y="85" width="0.2740%" height="15" fill="rgb(234,209,42)" fg:x="317" fg:w="3"/><text x="29.1998%" y="95.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (56 samples, 5.11%)</title><rect x="24.3836%" y="533" width="5.1142%" height="15" fill="rgb(227,7,12)" fg:x="267" fg:w="56"/><text x="24.6336%" y="543.50">&lt;rayon..</text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call (56 samples, 5.11%)</title><rect x="24.3836%" y="517" width="5.1142%" height="15" fill="rgb(245,203,43)" fg:x="267" fg:w="56"/><text x="24.6336%" y="527.50">rayon_..</text></g><g><title>rayon_core::unwind::halt_unwinding (56 samples, 5.11%)</title><rect x="24.3836%" y="501" width="5.1142%" height="15" fill="rgb(238,205,33)" fg:x="267" fg:w="56"/><text x="24.6336%" y="511.50">rayon_..</text></g><g><title>std::panic::catch_unwind (56 samples, 5.11%)</title><rect x="24.3836%" y="485" width="5.1142%" height="15" fill="rgb(231,56,7)" fg:x="267" fg:w="56"/><text x="24.6336%" y="495.50">std::p..</text></g><g><title>std::panicking::try (56 samples, 5.11%)</title><rect x="24.3836%" y="469" width="5.1142%" height="15" fill="rgb(244,186,29)" fg:x="267" fg:w="56"/><text x="24.6336%" y="479.50">std::p..</text></g><g><title>std::panicking::try::do_call (56 samples, 5.11%)</title><rect x="24.3836%" y="453" width="5.1142%" height="15" fill="rgb(234,111,31)" fg:x="267" fg:w="56"/><text x="24.6336%" y="463.50">std::p..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (56 samples, 5.11%)</title><rect x="24.3836%" y="437" width="5.1142%" height="15" fill="rgb(241,149,10)" fg:x="267" fg:w="56"/><text x="24.6336%" y="447.50">&lt;core:..</text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call::_{{closure}} (56 samples, 5.11%)</title><rect x="24.3836%" y="421" width="5.1142%" height="15" fill="rgb(249,206,44)" fg:x="267" fg:w="56"/><text x="24.6336%" y="431.50">rayon_..</text></g><g><title>rayon_core::registry::Registry::in_worker_cold::_{{closure}}::_{{closure}} (56 samples, 5.11%)</title><rect x="24.3836%" y="405" width="5.1142%" height="15" fill="rgb(251,153,30)" fg:x="267" fg:w="56"/><text x="24.6336%" y="415.50">rayon_..</text></g><g><title>rayon_core::thread_pool::ThreadPool::install::_{{closure}} (56 samples, 5.11%)</title><rect x="24.3836%" y="389" width="5.1142%" height="15" fill="rgb(239,152,38)" fg:x="267" fg:w="56"/><text x="24.6336%" y="399.50">rayon_..</text></g><g><title>rayon_core::thread_pool::ThreadPool::scope::_{{closure}} (56 samples, 5.11%)</title><rect x="24.3836%" y="373" width="5.1142%" height="15" fill="rgb(249,139,47)" fg:x="267" fg:w="56"/><text x="24.6336%" y="383.50">rayon_..</text></g><g><title>rayon_core::scope::scope (56 samples, 5.11%)</title><rect x="24.3836%" y="357" width="5.1142%" height="15" fill="rgb(244,64,35)" fg:x="267" fg:w="56"/><text x="24.6336%" y="367.50">rayon_..</text></g><g><title>rayon_core::registry::in_worker (56 samples, 5.11%)</title><rect x="24.3836%" y="341" width="5.1142%" height="15" fill="rgb(216,46,15)" fg:x="267" fg:w="56"/><text x="24.6336%" y="351.50">rayon_..</text></g><g><title>rayon_core::scope::scope::_{{closure}} (56 samples, 5.11%)</title><rect x="24.3836%" y="325" width="5.1142%" height="15" fill="rgb(250,74,19)" fg:x="267" fg:w="56"/><text x="24.6336%" y="335.50">rayon_..</text></g><g><title>rayon_core::scope::ScopeBase::complete (56 samples, 5.11%)</title><rect x="24.3836%" y="309" width="5.1142%" height="15" fill="rgb(249,42,33)" fg:x="267" fg:w="56"/><text x="24.6336%" y="319.50">rayon_..</text></g><g><title>rayon_core::scope::ScopeBase::execute_job_closure (56 samples, 5.11%)</title><rect x="24.3836%" y="293" width="5.1142%" height="15" fill="rgb(242,149,17)" fg:x="267" fg:w="56"/><text x="24.6336%" y="303.50">rayon_..</text></g><g><title>rayon_core::unwind::halt_unwinding (56 samples, 5.11%)</title><rect x="24.3836%" y="277" width="5.1142%" height="15" fill="rgb(244,29,21)" fg:x="267" fg:w="56"/><text x="24.6336%" y="287.50">rayon_..</text></g><g><title>std::panic::catch_unwind (56 samples, 5.11%)</title><rect x="24.3836%" y="261" width="5.1142%" height="15" fill="rgb(220,130,37)" fg:x="267" fg:w="56"/><text x="24.6336%" y="271.50">std::p..</text></g><g><title>std::panicking::try (56 samples, 5.11%)</title><rect x="24.3836%" y="245" width="5.1142%" height="15" fill="rgb(211,67,2)" fg:x="267" fg:w="56"/><text x="24.6336%" y="255.50">std::p..</text></g><g><title>std::panicking::try::do_call (56 samples, 5.11%)</title><rect x="24.3836%" y="229" width="5.1142%" height="15" fill="rgb(235,68,52)" fg:x="267" fg:w="56"/><text x="24.6336%" y="239.50">std::p..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (56 samples, 5.11%)</title><rect x="24.3836%" y="213" width="5.1142%" height="15" fill="rgb(246,142,3)" fg:x="267" fg:w="56"/><text x="24.6336%" y="223.50">&lt;core:..</text></g><g><title>rayon_core::scope::scope::_{{closure}}::_{{closure}} (56 samples, 5.11%)</title><rect x="24.3836%" y="197" width="5.1142%" height="15" fill="rgb(241,25,7)" fg:x="267" fg:w="56"/><text x="24.6336%" y="207.50">rayon_..</text></g><g><title>julia::generate_image_buffer::_{{closure}} (56 samples, 5.11%)</title><rect x="24.3836%" y="181" width="5.1142%" height="15" fill="rgb(242,119,39)" fg:x="267" fg:w="56"/><text x="24.6336%" y="191.50">julia:..</text></g><g><title>rayon_core::scope::Scope::spawn (33 samples, 3.01%)</title><rect x="26.4840%" y="165" width="3.0137%" height="15" fill="rgb(241,98,45)" fg:x="290" fg:w="33"/><text x="26.7340%" y="175.50">ray..</text></g><g><title>rayon_core::registry::Registry::inject_or_push (18 samples, 1.64%)</title><rect x="27.8539%" y="149" width="1.6438%" height="15" fill="rgb(254,28,30)" fg:x="305" fg:w="18"/><text x="28.1039%" y="159.50"></text></g><g><title>rayon_core::registry::WorkerThread::push (17 samples, 1.55%)</title><rect x="27.9452%" y="133" width="1.5525%" height="15" fill="rgb(241,142,54)" fg:x="306" fg:w="17"/><text x="28.1952%" y="143.50"></text></g><g><title>rayon_core::sleep::Sleep::new_internal_jobs (3 samples, 0.27%)</title><rect x="29.2237%" y="117" width="0.2740%" height="15" fill="rgb(222,85,15)" fg:x="320" fg:w="3"/><text x="29.4737%" y="127.50"></text></g><g><title>rayon_core::sleep::Sleep::new_jobs (3 samples, 0.27%)</title><rect x="29.2237%" y="101" width="0.2740%" height="15" fill="rgb(210,85,47)" fg:x="320" fg:w="3"/><text x="29.4737%" y="111.50"></text></g><g><title>rayon_core::sleep::counters::AtomicCounters::increment_jobs_event_counter_if (3 samples, 0.27%)</title><rect x="29.2237%" y="85" width="0.2740%" height="15" fill="rgb(224,206,25)" fg:x="320" fg:w="3"/><text x="29.4737%" y="95.50"></text></g><g><title>core::ops::function::Fn::call (3 samples, 0.27%)</title><rect x="29.2237%" y="69" width="0.2740%" height="15" fill="rgb(243,201,19)" fg:x="320" fg:w="3"/><text x="29.4737%" y="79.50"></text></g><g><title>rayon_core::sleep::counters::JobsEventCounter::is_sleepy (3 samples, 0.27%)</title><rect x="29.2237%" y="53" width="0.2740%" height="15" fill="rgb(236,59,4)" fg:x="320" fg:w="3"/><text x="29.4737%" y="63.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (186 samples, 16.99%)</title><rect x="12.6027%" y="565" width="16.9863%" height="15" fill="rgb(254,179,45)" fg:x="138" fg:w="186"/><text x="12.8527%" y="575.50">rayon_core::registry::Work..</text></g><g><title>rayon_core::job::JobRef::execute (186 samples, 16.99%)</title><rect x="12.6027%" y="549" width="16.9863%" height="15" fill="rgb(226,14,10)" fg:x="138" fg:w="186"/><text x="12.8527%" y="559.50">rayon_core::job::JobRef::e..</text></g><g><title>rayon_core::registry::WorkerThread::find_work (1 samples, 0.09%)</title><rect x="29.4977%" y="533" width="0.0913%" height="15" fill="rgb(244,27,41)" fg:x="323" fg:w="1"/><text x="29.7477%" y="543.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (1 samples, 0.09%)</title><rect x="29.4977%" y="517" width="0.0913%" height="15" fill="rgb(235,35,32)" fg:x="323" fg:w="1"/><text x="29.7477%" y="527.50"></text></g><g><title>rayon_core::registry::WorkerThread::find_work::_{{closure}} (1 samples, 0.09%)</title><rect x="29.4977%" y="501" width="0.0913%" height="15" fill="rgb(218,68,31)" fg:x="323" fg:w="1"/><text x="29.7477%" y="511.50"></text></g><g><title>rayon_core::registry::WorkerThread::steal (1 samples, 0.09%)</title><rect x="29.4977%" y="485" width="0.0913%" height="15" fill="rgb(207,120,37)" fg:x="323" fg:w="1"/><text x="29.7477%" y="495.50"></text></g><g><title>rayon_core::registry::XorShift64Star::next_usize (1 samples, 0.09%)</title><rect x="29.4977%" y="469" width="0.0913%" height="15" fill="rgb(227,98,0)" fg:x="323" fg:w="1"/><text x="29.7477%" y="479.50"></text></g><g><title>rayon_core::registry::XorShift64Star::next (1 samples, 0.09%)</title><rect x="29.4977%" y="453" width="0.0913%" height="15" fill="rgb(207,7,3)" fg:x="323" fg:w="1"/><text x="29.7477%" y="463.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (1 samples, 0.09%)</title><rect x="29.4977%" y="437" width="0.0913%" height="15" fill="rgb(206,98,19)" fg:x="323" fg:w="1"/><text x="29.7477%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="29.4977%" y="421" width="0.0913%" height="15" fill="rgb(217,5,26)" fg:x="323" fg:w="1"/><text x="29.7477%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (1 samples, 0.09%)</title><rect x="29.6804%" y="485" width="0.0913%" height="15" fill="rgb(235,190,38)" fg:x="325" fg:w="1"/><text x="29.9304%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.09%)</title><rect x="29.6804%" y="469" width="0.0913%" height="15" fill="rgb(247,86,24)" fg:x="325" fg:w="1"/><text x="29.9304%" y="479.50"></text></g><g><title>rayon_core::registry::Registry::pop_injected_job (12 samples, 1.10%)</title><rect x="29.5890%" y="517" width="1.0959%" height="15" fill="rgb(205,101,16)" fg:x="324" fg:w="12"/><text x="29.8390%" y="527.50"></text></g><g><title>crossbeam_deque::deque::Injector&lt;T&gt;::steal (12 samples, 1.10%)</title><rect x="29.5890%" y="501" width="1.0959%" height="15" fill="rgb(246,168,33)" fg:x="324" fg:w="12"/><text x="29.8390%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (10 samples, 0.91%)</title><rect x="29.7717%" y="485" width="0.9132%" height="15" fill="rgb(231,114,1)" fg:x="326" fg:w="10"/><text x="30.0217%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_load (10 samples, 0.91%)</title><rect x="29.7717%" y="469" width="0.9132%" height="15" fill="rgb(207,184,53)" fg:x="326" fg:w="10"/><text x="30.0217%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::filter (4 samples, 0.37%)</title><rect x="30.7763%" y="501" width="0.3653%" height="15" fill="rgb(224,95,51)" fg:x="337" fg:w="4"/><text x="31.0263%" y="511.50"></text></g><g><title>core::iter::adapters::filter::Filter&lt;I,P&gt;::new (4 samples, 0.37%)</title><rect x="30.7763%" y="485" width="0.3653%" height="15" fill="rgb(212,188,45)" fg:x="337" fg:w="4"/><text x="31.0263%" y="495.50"></text></g><g><title>core::num::&lt;impl isize&gt;::wrapping_sub (6 samples, 0.55%)</title><rect x="34.2466%" y="373" width="0.5479%" height="15" fill="rgb(223,154,38)" fg:x="375" fg:w="6"/><text x="34.4966%" y="383.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::as_ref (2 samples, 0.18%)</title><rect x="34.7945%" y="341" width="0.1826%" height="15" fill="rgb(251,22,52)" fg:x="381" fg:w="2"/><text x="35.0445%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;crossbeam_epoch::guard::Guard&gt; (6 samples, 0.55%)</title><rect x="34.7945%" y="373" width="0.5479%" height="15" fill="rgb(229,209,22)" fg:x="381" fg:w="6"/><text x="35.0445%" y="383.50"></text></g><g><title>&lt;crossbeam_epoch::guard::Guard as core::ops::drop::Drop&gt;::drop (6 samples, 0.55%)</title><rect x="34.7945%" y="357" width="0.5479%" height="15" fill="rgb(234,138,34)" fg:x="381" fg:w="6"/><text x="35.0445%" y="367.50"></text></g><g><title>crossbeam_epoch::internal::Local::unpin (4 samples, 0.37%)</title><rect x="34.9772%" y="341" width="0.3653%" height="15" fill="rgb(212,95,11)" fg:x="383" fg:w="4"/><text x="35.2272%" y="351.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (2 samples, 0.18%)</title><rect x="35.1598%" y="325" width="0.1826%" height="15" fill="rgb(240,179,47)" fg:x="385" fg:w="2"/><text x="35.4098%" y="335.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (2 samples, 0.18%)</title><rect x="35.1598%" y="309" width="0.1826%" height="15" fill="rgb(240,163,11)" fg:x="385" fg:w="2"/><text x="35.4098%" y="319.50"></text></g><g><title>core::mem::replace (2 samples, 0.18%)</title><rect x="35.1598%" y="293" width="0.1826%" height="15" fill="rgb(236,37,12)" fg:x="385" fg:w="2"/><text x="35.4098%" y="303.50"></text></g><g><title>core::ptr::write (2 samples, 0.18%)</title><rect x="35.1598%" y="277" width="0.1826%" height="15" fill="rgb(232,164,16)" fg:x="385" fg:w="2"/><text x="35.4098%" y="287.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_err (20 samples, 1.83%)</title><rect x="35.3425%" y="373" width="1.8265%" height="15" fill="rgb(244,205,15)" fg:x="387" fg:w="20"/><text x="35.5925%" y="383.50">c..</text></g><g><title>core::result::Result&lt;T,E&gt;::is_ok (20 samples, 1.83%)</title><rect x="35.3425%" y="357" width="1.8265%" height="15" fill="rgb(223,117,47)" fg:x="387" fg:w="20"/><text x="35.5925%" y="367.50">c..</text></g><g><title>core::sync::atomic::AtomicIsize::load (5 samples, 0.46%)</title><rect x="37.1689%" y="373" width="0.4566%" height="15" fill="rgb(244,107,35)" fg:x="407" fg:w="5"/><text x="37.4189%" y="383.50"></text></g><g><title>core::sync::atomic::atomic_load (5 samples, 0.46%)</title><rect x="37.1689%" y="357" width="0.4566%" height="15" fill="rgb(205,140,8)" fg:x="407" fg:w="5"/><text x="37.4189%" y="367.50"></text></g><g><title>crossbeam_deque::deque::Buffer&lt;T&gt;::read (1 samples, 0.09%)</title><rect x="37.6256%" y="373" width="0.0913%" height="15" fill="rgb(228,84,46)" fg:x="412" fg:w="1"/><text x="37.8756%" y="383.50"></text></g><g><title>core::ptr::read_volatile (1 samples, 0.09%)</title><rect x="37.6256%" y="357" width="0.0913%" height="15" fill="rgb(254,188,9)" fg:x="412" fg:w="1"/><text x="37.8756%" y="367.50"></text></g><g><title>crossbeam_epoch::atomic::Shared&lt;T&gt;::deref (1 samples, 0.09%)</title><rect x="37.7169%" y="373" width="0.0913%" height="15" fill="rgb(206,112,54)" fg:x="413" fg:w="1"/><text x="37.9669%" y="383.50"></text></g><g><title>crossbeam_epoch::atomic::decompose_tag (1 samples, 0.09%)</title><rect x="37.7169%" y="357" width="0.0913%" height="15" fill="rgb(216,84,49)" fg:x="413" fg:w="1"/><text x="37.9669%" y="367.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap_or_else (6 samples, 0.55%)</title><rect x="37.8082%" y="341" width="0.5479%" height="15" fill="rgb(214,194,35)" fg:x="414" fg:w="6"/><text x="38.0582%" y="351.50"></text></g><g><title>crossbeam_epoch::default::is_pinned (33 samples, 3.01%)</title><rect x="37.8082%" y="373" width="3.0137%" height="15" fill="rgb(249,28,3)" fg:x="414" fg:w="33"/><text x="38.0582%" y="383.50">cro..</text></g><g><title>crossbeam_epoch::default::with_handle (33 samples, 3.01%)</title><rect x="37.8082%" y="357" width="3.0137%" height="15" fill="rgb(222,56,52)" fg:x="414" fg:w="33"/><text x="38.0582%" y="367.50">cro..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (27 samples, 2.47%)</title><rect x="38.3562%" y="341" width="2.4658%" height="15" fill="rgb(245,217,50)" fg:x="420" fg:w="27"/><text x="38.6062%" y="351.50">st..</text></g><g><title>crossbeam_epoch::default::HANDLE::__getit (27 samples, 2.47%)</title><rect x="38.3562%" y="325" width="2.4658%" height="15" fill="rgb(213,201,24)" fg:x="420" fg:w="27"/><text x="38.6062%" y="335.50">cr..</text></g><g><title>std::sys::thread_local::fast_local::Key&lt;T&gt;::get (27 samples, 2.47%)</title><rect x="38.3562%" y="309" width="2.4658%" height="15" fill="rgb(248,116,28)" fg:x="420" fg:w="27"/><text x="38.6062%" y="319.50">st..</text></g><g><title>std::sys::thread_local::lazy::LazyKeyInner&lt;T&gt;::get (27 samples, 2.47%)</title><rect x="38.3562%" y="293" width="2.4658%" height="15" fill="rgb(219,72,43)" fg:x="420" fg:w="27"/><text x="38.6062%" y="303.50">st..</text></g><g><title>core::option::Option&lt;T&gt;::as_ref (27 samples, 2.47%)</title><rect x="38.3562%" y="277" width="2.4658%" height="15" fill="rgb(209,138,14)" fg:x="420" fg:w="27"/><text x="38.6062%" y="287.50">co..</text></g><g><title>crossbeam_epoch::default::HANDLE::__getit (6 samples, 0.55%)</title><rect x="41.3699%" y="325" width="0.5479%" height="15" fill="rgb(222,18,33)" fg:x="453" fg:w="6"/><text x="41.6199%" y="335.50"></text></g><g><title>std::sys::thread_local::fast_local::Key&lt;T&gt;::get (6 samples, 0.55%)</title><rect x="41.3699%" y="309" width="0.5479%" height="15" fill="rgb(213,199,7)" fg:x="453" fg:w="6"/><text x="41.6199%" y="319.50"></text></g><g><title>std::sys::thread_local::lazy::LazyKeyInner&lt;T&gt;::get (6 samples, 0.55%)</title><rect x="41.3699%" y="293" width="0.5479%" height="15" fill="rgb(250,110,10)" fg:x="453" fg:w="6"/><text x="41.6199%" y="303.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (6 samples, 0.55%)</title><rect x="41.3699%" y="277" width="0.5479%" height="15" fill="rgb(248,123,6)" fg:x="453" fg:w="6"/><text x="41.6199%" y="287.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (22 samples, 2.01%)</title><rect x="42.1005%" y="261" width="2.0091%" height="15" fill="rgb(206,91,31)" fg:x="461" fg:w="22"/><text x="42.3505%" y="271.50">c..</text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (8 samples, 0.73%)</title><rect x="44.1096%" y="261" width="0.7306%" height="15" fill="rgb(211,154,13)" fg:x="483" fg:w="8"/><text x="44.3596%" y="271.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (6 samples, 0.55%)</title><rect x="44.2922%" y="245" width="0.5479%" height="15" fill="rgb(225,148,7)" fg:x="485" fg:w="6"/><text x="44.5422%" y="255.50"></text></g><g><title>crossbeam_epoch::epoch::Epoch::pinned (30 samples, 2.74%)</title><rect x="44.8402%" y="261" width="2.7397%" height="15" fill="rgb(220,160,43)" fg:x="491" fg:w="30"/><text x="45.0902%" y="271.50">cr..</text></g><g><title>&lt;crossbeam_epoch::sync::list::Iter&lt;T,C&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.27%)</title><rect x="47.8539%" y="229" width="0.2740%" height="15" fill="rgb(213,52,39)" fg:x="524" fg:w="3"/><text x="48.1039%" y="239.50"></text></g><g><title>crossbeam_epoch::atomic::Shared&lt;T&gt;::tag (3 samples, 0.27%)</title><rect x="47.8539%" y="213" width="0.2740%" height="15" fill="rgb(243,137,7)" fg:x="524" fg:w="3"/><text x="48.1039%" y="223.50"></text></g><g><title>crossbeam_epoch::atomic::decompose_tag (3 samples, 0.27%)</title><rect x="47.8539%" y="197" width="0.2740%" height="15" fill="rgb(230,79,13)" fg:x="524" fg:w="3"/><text x="48.1039%" y="207.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="48.0365%" y="181" width="0.0913%" height="15" fill="rgb(247,105,23)" fg:x="526" fg:w="1"/><text x="48.2865%" y="191.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="48.0365%" y="165" width="0.0913%" height="15" fill="rgb(223,179,41)" fg:x="526" fg:w="1"/><text x="48.2865%" y="175.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="48.0365%" y="149" width="0.0913%" height="15" fill="rgb(218,9,34)" fg:x="526" fg:w="1"/><text x="48.2865%" y="159.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="48.0365%" y="133" width="0.0913%" height="15" fill="rgb(222,106,8)" fg:x="526" fg:w="1"/><text x="48.2865%" y="143.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="48.0365%" y="117" width="0.0913%" height="15" fill="rgb(211,220,0)" fg:x="526" fg:w="1"/><text x="48.2865%" y="127.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="48.0365%" y="101" width="0.0913%" height="15" fill="rgb(229,52,16)" fg:x="526" fg:w="1"/><text x="48.2865%" y="111.50"></text></g><g><title>crossbeam_epoch::epoch::AtomicEpoch::load (10 samples, 0.91%)</title><rect x="48.1279%" y="229" width="0.9132%" height="15" fill="rgb(212,155,18)" fg:x="527" fg:w="10"/><text x="48.3779%" y="239.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (10 samples, 0.91%)</title><rect x="48.1279%" y="213" width="0.9132%" height="15" fill="rgb(242,21,14)" fg:x="527" fg:w="10"/><text x="48.3779%" y="223.50"></text></g><g><title>core::sync::atomic::atomic_load (10 samples, 0.91%)</title><rect x="48.1279%" y="197" width="0.9132%" height="15" fill="rgb(222,19,48)" fg:x="527" fg:w="10"/><text x="48.3779%" y="207.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::_{{closure}} (176 samples, 16.07%)</title><rect x="33.0594%" y="421" width="16.0731%" height="15" fill="rgb(232,45,27)" fg:x="362" fg:w="176"/><text x="33.3094%" y="431.50">core::iter::traits::itera..</text></g><g><title>rayon_core::registry::WorkerThread::steal::_{{closure}} (176 samples, 16.07%)</title><rect x="33.0594%" y="405" width="16.0731%" height="15" fill="rgb(249,103,42)" fg:x="362" fg:w="176"/><text x="33.3094%" y="415.50">rayon_core::registry::Wor..</text></g><g><title>crossbeam_deque::deque::Stealer&lt;T&gt;::steal (171 samples, 15.62%)</title><rect x="33.5160%" y="389" width="15.6164%" height="15" fill="rgb(246,81,33)" fg:x="367" fg:w="171"/><text x="33.7660%" y="399.50">crossbeam_deque::deque::..</text></g><g><title>crossbeam_epoch::default::pin (91 samples, 8.31%)</title><rect x="40.8219%" y="373" width="8.3105%" height="15" fill="rgb(252,33,42)" fg:x="447" fg:w="91"/><text x="41.0719%" y="383.50">crossbeam_ep..</text></g><g><title>crossbeam_epoch::default::with_handle (91 samples, 8.31%)</title><rect x="40.8219%" y="357" width="8.3105%" height="15" fill="rgb(209,212,41)" fg:x="447" fg:w="91"/><text x="41.0719%" y="367.50">crossbeam_ep..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (85 samples, 7.76%)</title><rect x="41.3699%" y="341" width="7.7626%" height="15" fill="rgb(207,154,6)" fg:x="453" fg:w="85"/><text x="41.6199%" y="351.50">std::thread..</text></g><g><title>crossbeam_epoch::default::with_handle::_{{closure}} (79 samples, 7.21%)</title><rect x="41.9178%" y="325" width="7.2146%" height="15" fill="rgb(223,64,47)" fg:x="459" fg:w="79"/><text x="42.1678%" y="335.50">crossbeam_..</text></g><g><title>crossbeam_epoch::default::pin::_{{closure}} (79 samples, 7.21%)</title><rect x="41.9178%" y="309" width="7.2146%" height="15" fill="rgb(211,161,38)" fg:x="459" fg:w="79"/><text x="42.1678%" y="319.50">crossbeam_..</text></g><g><title>crossbeam_epoch::collector::LocalHandle::pin (79 samples, 7.21%)</title><rect x="41.9178%" y="293" width="7.2146%" height="15" fill="rgb(219,138,40)" fg:x="459" fg:w="79"/><text x="42.1678%" y="303.50">crossbeam_..</text></g><g><title>crossbeam_epoch::internal::Local::pin (79 samples, 7.21%)</title><rect x="41.9178%" y="277" width="7.2146%" height="15" fill="rgb(241,228,46)" fg:x="459" fg:w="79"/><text x="42.1678%" y="287.50">crossbeam_..</text></g><g><title>crossbeam_epoch::internal::Global::collect (17 samples, 1.55%)</title><rect x="47.5799%" y="261" width="1.5525%" height="15" fill="rgb(223,209,38)" fg:x="521" fg:w="17"/><text x="47.8299%" y="271.50"></text></g><g><title>crossbeam_epoch::internal::Global::try_advance (17 samples, 1.55%)</title><rect x="47.5799%" y="245" width="1.5525%" height="15" fill="rgb(236,164,45)" fg:x="521" fg:w="17"/><text x="47.8299%" y="255.50"></text></g><g><title>crossbeam_epoch::sync::list::List&lt;T,C&gt;::iter (1 samples, 0.09%)</title><rect x="49.0411%" y="229" width="0.0913%" height="15" fill="rgb(231,15,5)" fg:x="537" fg:w="1"/><text x="49.2911%" y="239.50"></text></g><g><title>crossbeam_epoch::atomic::Atomic&lt;T&gt;::load (1 samples, 0.09%)</title><rect x="49.0411%" y="213" width="0.0913%" height="15" fill="rgb(252,35,15)" fg:x="537" fg:w="1"/><text x="49.2911%" y="223.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.09%)</title><rect x="49.0411%" y="197" width="0.0913%" height="15" fill="rgb(248,181,18)" fg:x="537" fg:w="1"/><text x="49.2911%" y="207.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.09%)</title><rect x="49.0411%" y="181" width="0.0913%" height="15" fill="rgb(233,39,42)" fg:x="537" fg:w="1"/><text x="49.2911%" y="191.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::_{{closure}} (182 samples, 16.62%)</title><rect x="32.6027%" y="437" width="16.6210%" height="15" fill="rgb(238,110,33)" fg:x="357" fg:w="182"/><text x="32.8527%" y="447.50">core::iter::adapters::filt..</text></g><g><title>rayon_core::registry::WorkerThread::steal::_{{closure}} (1 samples, 0.09%)</title><rect x="49.1324%" y="421" width="0.0913%" height="15" fill="rgb(233,195,10)" fg:x="538" fg:w="1"/><text x="49.3824%" y="431.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (3 samples, 0.27%)</title><rect x="49.2237%" y="437" width="0.2740%" height="15" fill="rgb(254,105,3)" fg:x="539" fg:w="3"/><text x="49.4737%" y="447.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (3 samples, 0.27%)</title><rect x="49.2237%" y="421" width="0.2740%" height="15" fill="rgb(221,225,9)" fg:x="539" fg:w="3"/><text x="49.4737%" y="431.50"></text></g><g><title>core::num::&lt;impl isize&gt;::wrapping_sub (28 samples, 2.56%)</title><rect x="51.3242%" y="357" width="2.5571%" height="15" fill="rgb(224,227,45)" fg:x="562" fg:w="28"/><text x="51.5742%" y="367.50">co..</text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::as_ref (3 samples, 0.27%)</title><rect x="53.8813%" y="325" width="0.2740%" height="15" fill="rgb(229,198,43)" fg:x="590" fg:w="3"/><text x="54.1313%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;crossbeam_epoch::guard::Guard&gt; (7 samples, 0.64%)</title><rect x="53.8813%" y="357" width="0.6393%" height="15" fill="rgb(206,209,35)" fg:x="590" fg:w="7"/><text x="54.1313%" y="367.50"></text></g><g><title>&lt;crossbeam_epoch::guard::Guard as core::ops::drop::Drop&gt;::drop (7 samples, 0.64%)</title><rect x="53.8813%" y="341" width="0.6393%" height="15" fill="rgb(245,195,53)" fg:x="590" fg:w="7"/><text x="54.1313%" y="351.50"></text></g><g><title>crossbeam_epoch::internal::Local::unpin (4 samples, 0.37%)</title><rect x="54.1553%" y="325" width="0.3653%" height="15" fill="rgb(240,92,26)" fg:x="593" fg:w="4"/><text x="54.4053%" y="335.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (1 samples, 0.09%)</title><rect x="54.4292%" y="309" width="0.0913%" height="15" fill="rgb(207,40,23)" fg:x="596" fg:w="1"/><text x="54.6792%" y="319.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (1 samples, 0.09%)</title><rect x="54.4292%" y="293" width="0.0913%" height="15" fill="rgb(223,111,35)" fg:x="596" fg:w="1"/><text x="54.6792%" y="303.50"></text></g><g><title>core::mem::replace (1 samples, 0.09%)</title><rect x="54.4292%" y="277" width="0.0913%" height="15" fill="rgb(229,147,28)" fg:x="596" fg:w="1"/><text x="54.6792%" y="287.50"></text></g><g><title>core::ptr::write (1 samples, 0.09%)</title><rect x="54.4292%" y="261" width="0.0913%" height="15" fill="rgb(211,29,28)" fg:x="596" fg:w="1"/><text x="54.6792%" y="271.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_err (76 samples, 6.94%)</title><rect x="54.5205%" y="357" width="6.9406%" height="15" fill="rgb(228,72,33)" fg:x="597" fg:w="76"/><text x="54.7705%" y="367.50">core::res..</text></g><g><title>core::result::Result&lt;T,E&gt;::is_ok (76 samples, 6.94%)</title><rect x="54.5205%" y="341" width="6.9406%" height="15" fill="rgb(205,214,31)" fg:x="597" fg:w="76"/><text x="54.7705%" y="351.50">core::res..</text></g><g><title>core::sync::atomic::AtomicIsize::load (2 samples, 0.18%)</title><rect x="61.4612%" y="357" width="0.1826%" height="15" fill="rgb(224,111,15)" fg:x="673" fg:w="2"/><text x="61.7112%" y="367.50"></text></g><g><title>core::sync::atomic::atomic_load (2 samples, 0.18%)</title><rect x="61.4612%" y="341" width="0.1826%" height="15" fill="rgb(253,21,26)" fg:x="673" fg:w="2"/><text x="61.7112%" y="351.50"></text></g><g><title>core::ptr::read_volatile (25 samples, 2.28%)</title><rect x="61.6438%" y="341" width="2.2831%" height="15" fill="rgb(245,139,43)" fg:x="675" fg:w="25"/><text x="61.8938%" y="351.50">c..</text></g><g><title>crossbeam_deque::deque::Buffer&lt;T&gt;::read (27 samples, 2.47%)</title><rect x="61.6438%" y="357" width="2.4658%" height="15" fill="rgb(252,170,7)" fg:x="675" fg:w="27"/><text x="61.8938%" y="367.50">cr..</text></g><g><title>crossbeam_deque::deque::Buffer&lt;T&gt;::at (2 samples, 0.18%)</title><rect x="63.9269%" y="341" width="0.1826%" height="15" fill="rgb(231,118,14)" fg:x="700" fg:w="2"/><text x="64.1769%" y="351.50"></text></g><g><title>crossbeam_epoch::atomic::Atomic&lt;T&gt;::load (2 samples, 0.18%)</title><rect x="64.1096%" y="357" width="0.1826%" height="15" fill="rgb(238,83,0)" fg:x="702" fg:w="2"/><text x="64.3596%" y="367.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (2 samples, 0.18%)</title><rect x="64.1096%" y="341" width="0.1826%" height="15" fill="rgb(221,39,39)" fg:x="702" fg:w="2"/><text x="64.3596%" y="351.50"></text></g><g><title>core::sync::atomic::atomic_load (2 samples, 0.18%)</title><rect x="64.1096%" y="325" width="0.1826%" height="15" fill="rgb(222,119,46)" fg:x="702" fg:w="2"/><text x="64.3596%" y="335.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap_or_else (3 samples, 0.27%)</title><rect x="64.2922%" y="325" width="0.2740%" height="15" fill="rgb(222,165,49)" fg:x="704" fg:w="3"/><text x="64.5422%" y="335.50"></text></g><g><title>crossbeam_epoch::default::is_pinned (89 samples, 8.13%)</title><rect x="64.2922%" y="357" width="8.1279%" height="15" fill="rgb(219,113,52)" fg:x="704" fg:w="89"/><text x="64.5422%" y="367.50">crossbeam_e..</text></g><g><title>crossbeam_epoch::default::with_handle (89 samples, 8.13%)</title><rect x="64.2922%" y="341" width="8.1279%" height="15" fill="rgb(214,7,15)" fg:x="704" fg:w="89"/><text x="64.5422%" y="351.50">crossbeam_e..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (86 samples, 7.85%)</title><rect x="64.5662%" y="325" width="7.8539%" height="15" fill="rgb(235,32,4)" fg:x="707" fg:w="86"/><text x="64.8162%" y="335.50">std::thread..</text></g><g><title>crossbeam_epoch::default::HANDLE::__getit (84 samples, 7.67%)</title><rect x="64.7489%" y="309" width="7.6712%" height="15" fill="rgb(238,90,54)" fg:x="709" fg:w="84"/><text x="64.9989%" y="319.50">crossbeam_e..</text></g><g><title>std::sys::thread_local::fast_local::Key&lt;T&gt;::get (84 samples, 7.67%)</title><rect x="64.7489%" y="293" width="7.6712%" height="15" fill="rgb(213,208,19)" fg:x="709" fg:w="84"/><text x="64.9989%" y="303.50">std::sys::t..</text></g><g><title>std::sys::thread_local::lazy::LazyKeyInner&lt;T&gt;::get (84 samples, 7.67%)</title><rect x="64.7489%" y="277" width="7.6712%" height="15" fill="rgb(233,156,4)" fg:x="709" fg:w="84"/><text x="64.9989%" y="287.50">std::sys::t..</text></g><g><title>core::option::Option&lt;T&gt;::as_ref (84 samples, 7.67%)</title><rect x="64.7489%" y="261" width="7.6712%" height="15" fill="rgb(207,194,5)" fg:x="709" fg:w="84"/><text x="64.9989%" y="271.50">core::optio..</text></g><g><title>crossbeam_epoch::default::HANDLE::__getit (7 samples, 0.64%)</title><rect x="72.6027%" y="309" width="0.6393%" height="15" fill="rgb(206,111,30)" fg:x="795" fg:w="7"/><text x="72.8527%" y="319.50"></text></g><g><title>std::sys::thread_local::fast_local::Key&lt;T&gt;::get (7 samples, 0.64%)</title><rect x="72.6027%" y="293" width="0.6393%" height="15" fill="rgb(243,70,54)" fg:x="795" fg:w="7"/><text x="72.8527%" y="303.50"></text></g><g><title>std::sys::thread_local::lazy::LazyKeyInner&lt;T&gt;::get (7 samples, 0.64%)</title><rect x="72.6027%" y="277" width="0.6393%" height="15" fill="rgb(242,28,8)" fg:x="795" fg:w="7"/><text x="72.8527%" y="287.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (7 samples, 0.64%)</title><rect x="72.6027%" y="261" width="0.6393%" height="15" fill="rgb(219,106,18)" fg:x="795" fg:w="7"/><text x="72.8527%" y="271.50"></text></g><g><title>&lt;core::num::wrapping::Wrapping&lt;usize&gt; as core::ops::arith::Add&gt;::add (1 samples, 0.09%)</title><rect x="73.6073%" y="245" width="0.0913%" height="15" fill="rgb(244,222,10)" fg:x="806" fg:w="1"/><text x="73.8573%" y="255.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_add (1 samples, 0.09%)</title><rect x="73.6073%" y="229" width="0.0913%" height="15" fill="rgb(236,179,52)" fg:x="806" fg:w="1"/><text x="73.8573%" y="239.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (32 samples, 2.92%)</title><rect x="73.6986%" y="245" width="2.9224%" height="15" fill="rgb(213,23,39)" fg:x="807" fg:w="32"/><text x="73.9486%" y="255.50">co..</text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (11 samples, 1.00%)</title><rect x="76.6210%" y="245" width="1.0046%" height="15" fill="rgb(238,48,10)" fg:x="839" fg:w="11"/><text x="76.8710%" y="255.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (8 samples, 0.73%)</title><rect x="76.8950%" y="229" width="0.7306%" height="15" fill="rgb(251,196,23)" fg:x="842" fg:w="8"/><text x="77.1450%" y="239.50"></text></g><g><title>crossbeam_epoch::epoch::AtomicEpoch::compare_exchange (2 samples, 0.18%)</title><rect x="77.6256%" y="245" width="0.1826%" height="15" fill="rgb(250,152,24)" fg:x="850" fg:w="2"/><text x="77.8756%" y="255.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (2 samples, 0.18%)</title><rect x="77.6256%" y="229" width="0.1826%" height="15" fill="rgb(209,150,17)" fg:x="850" fg:w="2"/><text x="77.8756%" y="239.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (2 samples, 0.18%)</title><rect x="77.6256%" y="213" width="0.1826%" height="15" fill="rgb(234,202,34)" fg:x="850" fg:w="2"/><text x="77.8756%" y="223.50"></text></g><g><title>crossbeam_epoch::epoch::Epoch::pinned (40 samples, 3.65%)</title><rect x="77.8082%" y="245" width="3.6530%" height="15" fill="rgb(253,148,53)" fg:x="852" fg:w="40"/><text x="78.0582%" y="255.50">cros..</text></g><g><title>&lt;crossbeam_epoch::sync::list::Iter&lt;T,C&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.27%)</title><rect x="81.6438%" y="213" width="0.2740%" height="15" fill="rgb(218,129,16)" fg:x="894" fg:w="3"/><text x="81.8938%" y="223.50"></text></g><g><title>crossbeam_epoch::atomic::Shared&lt;T&gt;::tag (3 samples, 0.27%)</title><rect x="81.6438%" y="197" width="0.2740%" height="15" fill="rgb(216,85,19)" fg:x="894" fg:w="3"/><text x="81.8938%" y="207.50"></text></g><g><title>crossbeam_epoch::atomic::decompose_tag (3 samples, 0.27%)</title><rect x="81.6438%" y="181" width="0.2740%" height="15" fill="rgb(235,228,7)" fg:x="894" fg:w="3"/><text x="81.8938%" y="191.50"></text></g><g><title>core::sync::atomic::fence (1 samples, 0.09%)</title><rect x="81.9178%" y="213" width="0.0913%" height="15" fill="rgb(245,175,0)" fg:x="897" fg:w="1"/><text x="82.1678%" y="223.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (568 samples, 51.87%)</title><rect x="31.1416%" y="501" width="51.8721%" height="15" fill="rgb(208,168,36)" fg:x="341" fg:w="568"/><text x="31.3916%" y="511.50">core::iter::traits::iterator::Iterator::find_map</text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (568 samples, 51.87%)</title><rect x="31.1416%" y="485" width="51.8721%" height="15" fill="rgb(246,171,24)" fg:x="341" fg:w="568"/><text x="31.3916%" y="495.50">&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;..</text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (568 samples, 51.87%)</title><rect x="31.1416%" y="469" width="51.8721%" height="15" fill="rgb(215,142,24)" fg:x="341" fg:w="568"/><text x="31.3916%" y="479.50">&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (558 samples, 50.96%)</title><rect x="32.0548%" y="453" width="50.9589%" height="15" fill="rgb(250,187,7)" fg:x="351" fg:w="558"/><text x="32.3048%" y="463.50">core::iter::traits::iterator::Iterator::try_fold</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (367 samples, 33.52%)</title><rect x="49.4977%" y="437" width="33.5160%" height="15" fill="rgb(228,66,33)" fg:x="542" fg:w="367"/><text x="49.7477%" y="447.50">core::ops::function::impls::&lt;impl core::ops::function:..</text></g><g><title>core::iter::adapters::filter::filter_try_fold::_{{closure}} (367 samples, 33.52%)</title><rect x="49.4977%" y="421" width="33.5160%" height="15" fill="rgb(234,215,21)" fg:x="542" fg:w="367"/><text x="49.7477%" y="431.50">core::iter::adapters::filter::filter_try_fold::_{{clos..</text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::_{{closure}} (360 samples, 32.88%)</title><rect x="50.1370%" y="405" width="32.8767%" height="15" fill="rgb(222,191,20)" fg:x="549" fg:w="360"/><text x="50.3870%" y="415.50">core::iter::traits::iterator::Iterator::find_map::che..</text></g><g><title>rayon_core::registry::WorkerThread::steal::_{{closure}} (360 samples, 32.88%)</title><rect x="50.1370%" y="389" width="32.8767%" height="15" fill="rgb(245,79,54)" fg:x="549" fg:w="360"/><text x="50.3870%" y="399.50">rayon_core::registry::WorkerThread::steal::_{{closure..</text></g><g><title>crossbeam_deque::deque::Stealer&lt;T&gt;::steal (356 samples, 32.51%)</title><rect x="50.5023%" y="373" width="32.5114%" height="15" fill="rgb(240,10,37)" fg:x="553" fg:w="356"/><text x="50.7523%" y="383.50">crossbeam_deque::deque::Stealer&lt;T&gt;::steal</text></g><g><title>crossbeam_epoch::default::pin (116 samples, 10.59%)</title><rect x="72.4201%" y="357" width="10.5936%" height="15" fill="rgb(214,192,32)" fg:x="793" fg:w="116"/><text x="72.6701%" y="367.50">crossbeam_epoch..</text></g><g><title>crossbeam_epoch::default::with_handle (115 samples, 10.50%)</title><rect x="72.5114%" y="341" width="10.5023%" height="15" fill="rgb(209,36,54)" fg:x="794" fg:w="115"/><text x="72.7614%" y="351.50">crossbeam_epoch..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (114 samples, 10.41%)</title><rect x="72.6027%" y="325" width="10.4110%" height="15" fill="rgb(220,10,11)" fg:x="795" fg:w="114"/><text x="72.8527%" y="335.50">std::thread::lo..</text></g><g><title>crossbeam_epoch::default::with_handle::_{{closure}} (107 samples, 9.77%)</title><rect x="73.2420%" y="309" width="9.7717%" height="15" fill="rgb(221,106,17)" fg:x="802" fg:w="107"/><text x="73.4920%" y="319.50">crossbeam_epoc..</text></g><g><title>crossbeam_epoch::default::pin::_{{closure}} (107 samples, 9.77%)</title><rect x="73.2420%" y="293" width="9.7717%" height="15" fill="rgb(251,142,44)" fg:x="802" fg:w="107"/><text x="73.4920%" y="303.50">crossbeam_epoc..</text></g><g><title>crossbeam_epoch::collector::LocalHandle::pin (107 samples, 9.77%)</title><rect x="73.2420%" y="277" width="9.7717%" height="15" fill="rgb(238,13,15)" fg:x="802" fg:w="107"/><text x="73.4920%" y="287.50">crossbeam_epoc..</text></g><g><title>crossbeam_epoch::internal::Local::pin (107 samples, 9.77%)</title><rect x="73.2420%" y="261" width="9.7717%" height="15" fill="rgb(208,107,27)" fg:x="802" fg:w="107"/><text x="73.4920%" y="271.50">crossbeam_epoc..</text></g><g><title>crossbeam_epoch::internal::Global::collect (17 samples, 1.55%)</title><rect x="81.4612%" y="245" width="1.5525%" height="15" fill="rgb(205,136,37)" fg:x="892" fg:w="17"/><text x="81.7112%" y="255.50"></text></g><g><title>crossbeam_epoch::internal::Global::try_advance (16 samples, 1.46%)</title><rect x="81.5525%" y="229" width="1.4612%" height="15" fill="rgb(250,205,27)" fg:x="893" fg:w="16"/><text x="81.8025%" y="239.50"></text></g><g><title>crossbeam_epoch::epoch::AtomicEpoch::load (11 samples, 1.00%)</title><rect x="82.0091%" y="213" width="1.0046%" height="15" fill="rgb(210,80,43)" fg:x="898" fg:w="11"/><text x="82.2591%" y="223.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (11 samples, 1.00%)</title><rect x="82.0091%" y="197" width="1.0046%" height="15" fill="rgb(247,160,36)" fg:x="898" fg:w="11"/><text x="82.2591%" y="207.50"></text></g><g><title>core::sync::atomic::atomic_load (11 samples, 1.00%)</title><rect x="82.0091%" y="181" width="1.0046%" height="15" fill="rgb(234,13,49)" fg:x="898" fg:w="11"/><text x="82.2591%" y="191.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (1 samples, 0.09%)</title><rect x="83.0137%" y="501" width="0.0913%" height="15" fill="rgb(234,122,0)" fg:x="909" fg:w="1"/><text x="83.2637%" y="511.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (590 samples, 53.88%)</title><rect x="29.5890%" y="549" width="53.8813%" height="15" fill="rgb(207,146,38)" fg:x="324" fg:w="590"/><text x="29.8390%" y="559.50">core::option::Option&lt;T&gt;::or_else</text></g><g><title>rayon_core::registry::WorkerThread::find_work::_{{closure}} (590 samples, 53.88%)</title><rect x="29.5890%" y="533" width="53.8813%" height="15" fill="rgb(207,177,25)" fg:x="324" fg:w="590"/><text x="29.8390%" y="543.50">rayon_core::registry::WorkerThread::find_work::_{{closure}}</text></g><g><title>rayon_core::registry::WorkerThread::steal (578 samples, 52.79%)</title><rect x="30.6849%" y="517" width="52.7854%" height="15" fill="rgb(211,178,42)" fg:x="336" fg:w="578"/><text x="30.9349%" y="527.50">rayon_core::registry::WorkerThread::steal</text></g><g><title>rayon_core::registry::XorShift64Star::next_usize (4 samples, 0.37%)</title><rect x="83.1050%" y="501" width="0.3653%" height="15" fill="rgb(230,69,54)" fg:x="910" fg:w="4"/><text x="83.3550%" y="511.50"></text></g><g><title>rayon_core::registry::XorShift64Star::next (4 samples, 0.37%)</title><rect x="83.1050%" y="485" width="0.3653%" height="15" fill="rgb(214,135,41)" fg:x="910" fg:w="4"/><text x="83.3550%" y="495.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (2 samples, 0.18%)</title><rect x="83.2877%" y="469" width="0.1826%" height="15" fill="rgb(237,67,25)" fg:x="912" fg:w="2"/><text x="83.5377%" y="479.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (1 samples, 0.09%)</title><rect x="83.4703%" y="533" width="0.0913%" height="15" fill="rgb(222,189,50)" fg:x="914" fg:w="1"/><text x="83.7203%" y="543.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap_or_else (1 samples, 0.09%)</title><rect x="83.7443%" y="485" width="0.0913%" height="15" fill="rgb(245,148,34)" fg:x="917" fg:w="1"/><text x="83.9943%" y="495.50"></text></g><g><title>crossbeam_epoch::default::is_pinned (3 samples, 0.27%)</title><rect x="83.7443%" y="517" width="0.2740%" height="15" fill="rgb(222,29,6)" fg:x="917" fg:w="3"/><text x="83.9943%" y="527.50"></text></g><g><title>crossbeam_epoch::default::with_handle (3 samples, 0.27%)</title><rect x="83.7443%" y="501" width="0.2740%" height="15" fill="rgb(221,189,43)" fg:x="917" fg:w="3"/><text x="83.9943%" y="511.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2 samples, 0.18%)</title><rect x="83.8356%" y="485" width="0.1826%" height="15" fill="rgb(207,36,27)" fg:x="918" fg:w="2"/><text x="84.0856%" y="495.50"></text></g><g><title>crossbeam_epoch::default::HANDLE::__getit (2 samples, 0.18%)</title><rect x="83.8356%" y="469" width="0.1826%" height="15" fill="rgb(217,90,24)" fg:x="918" fg:w="2"/><text x="84.0856%" y="479.50"></text></g><g><title>std::sys::thread_local::fast_local::Key&lt;T&gt;::get (2 samples, 0.18%)</title><rect x="83.8356%" y="453" width="0.1826%" height="15" fill="rgb(224,66,35)" fg:x="918" fg:w="2"/><text x="84.0856%" y="463.50"></text></g><g><title>std::sys::thread_local::lazy::LazyKeyInner&lt;T&gt;::get (2 samples, 0.18%)</title><rect x="83.8356%" y="437" width="0.1826%" height="15" fill="rgb(221,13,50)" fg:x="918" fg:w="2"/><text x="84.0856%" y="447.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (2 samples, 0.18%)</title><rect x="83.8356%" y="421" width="0.1826%" height="15" fill="rgb(236,68,49)" fg:x="918" fg:w="2"/><text x="84.0856%" y="431.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (2 samples, 0.18%)</title><rect x="84.0183%" y="405" width="0.1826%" height="15" fill="rgb(229,146,28)" fg:x="920" fg:w="2"/><text x="84.2683%" y="415.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (1 samples, 0.09%)</title><rect x="84.2009%" y="405" width="0.0913%" height="15" fill="rgb(225,31,38)" fg:x="922" fg:w="1"/><text x="84.4509%" y="415.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (1 samples, 0.09%)</title><rect x="84.2009%" y="389" width="0.0913%" height="15" fill="rgb(250,208,3)" fg:x="922" fg:w="1"/><text x="84.4509%" y="399.50"></text></g><g><title>crossbeam_epoch::epoch::Epoch::pinned (2 samples, 0.18%)</title><rect x="84.2922%" y="405" width="0.1826%" height="15" fill="rgb(246,54,23)" fg:x="923" fg:w="2"/><text x="84.5422%" y="415.50"></text></g><g><title>crossbeam_deque::deque::Stealer&lt;T&gt;::steal (12 samples, 1.10%)</title><rect x="83.5616%" y="533" width="1.0959%" height="15" fill="rgb(243,76,11)" fg:x="915" fg:w="12"/><text x="83.8116%" y="543.50"></text></g><g><title>crossbeam_epoch::default::pin (7 samples, 0.64%)</title><rect x="84.0183%" y="517" width="0.6393%" height="15" fill="rgb(245,21,50)" fg:x="920" fg:w="7"/><text x="84.2683%" y="527.50"></text></g><g><title>crossbeam_epoch::default::with_handle (7 samples, 0.64%)</title><rect x="84.0183%" y="501" width="0.6393%" height="15" fill="rgb(228,9,43)" fg:x="920" fg:w="7"/><text x="84.2683%" y="511.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (7 samples, 0.64%)</title><rect x="84.0183%" y="485" width="0.6393%" height="15" fill="rgb(208,100,47)" fg:x="920" fg:w="7"/><text x="84.2683%" y="495.50"></text></g><g><title>crossbeam_epoch::default::with_handle::_{{closure}} (7 samples, 0.64%)</title><rect x="84.0183%" y="469" width="0.6393%" height="15" fill="rgb(232,26,8)" fg:x="920" fg:w="7"/><text x="84.2683%" y="479.50"></text></g><g><title>crossbeam_epoch::default::pin::_{{closure}} (7 samples, 0.64%)</title><rect x="84.0183%" y="453" width="0.6393%" height="15" fill="rgb(216,166,38)" fg:x="920" fg:w="7"/><text x="84.2683%" y="463.50"></text></g><g><title>crossbeam_epoch::collector::LocalHandle::pin (7 samples, 0.64%)</title><rect x="84.0183%" y="437" width="0.6393%" height="15" fill="rgb(251,202,51)" fg:x="920" fg:w="7"/><text x="84.2683%" y="447.50"></text></g><g><title>crossbeam_epoch::internal::Local::pin (7 samples, 0.64%)</title><rect x="84.0183%" y="421" width="0.6393%" height="15" fill="rgb(254,216,34)" fg:x="920" fg:w="7"/><text x="84.2683%" y="431.50"></text></g><g><title>crossbeam_epoch::internal::Global::collect (2 samples, 0.18%)</title><rect x="84.4749%" y="405" width="0.1826%" height="15" fill="rgb(251,32,27)" fg:x="925" fg:w="2"/><text x="84.7249%" y="415.50"></text></g><g><title>crossbeam_epoch::internal::Global::try_advance (2 samples, 0.18%)</title><rect x="84.4749%" y="389" width="0.1826%" height="15" fill="rgb(208,127,28)" fg:x="925" fg:w="2"/><text x="84.7249%" y="399.50"></text></g><g><title>&lt;crossbeam_epoch::sync::list::Iter&lt;T,C&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.18%)</title><rect x="84.4749%" y="373" width="0.1826%" height="15" fill="rgb(224,137,22)" fg:x="925" fg:w="2"/><text x="84.7249%" y="383.50"></text></g><g><title>crossbeam_epoch::atomic::Shared&lt;T&gt;::tag (2 samples, 0.18%)</title><rect x="84.4749%" y="357" width="0.1826%" height="15" fill="rgb(254,70,32)" fg:x="925" fg:w="2"/><text x="84.7249%" y="367.50"></text></g><g><title>crossbeam_epoch::atomic::decompose_tag (2 samples, 0.18%)</title><rect x="84.4749%" y="341" width="0.1826%" height="15" fill="rgb(229,75,37)" fg:x="925" fg:w="2"/><text x="84.7249%" y="351.50"></text></g><g><title>rayon_core::registry::WorkerThread::find_work (604 samples, 55.16%)</title><rect x="29.5890%" y="565" width="55.1598%" height="15" fill="rgb(252,64,23)" fg:x="324" fg:w="604"/><text x="29.8390%" y="575.50">rayon_core::registry::WorkerThread::find_work</text></g><g><title>rayon_core::registry::WorkerThread::take_local_job (14 samples, 1.28%)</title><rect x="83.4703%" y="549" width="1.2785%" height="15" fill="rgb(232,162,48)" fg:x="914" fg:w="14"/><text x="83.7203%" y="559.50"></text></g><g><title>crossbeam_deque::deque::Worker&lt;T&gt;::pop (1 samples, 0.09%)</title><rect x="84.6575%" y="533" width="0.0913%" height="15" fill="rgb(246,160,12)" fg:x="927" fg:w="1"/><text x="84.9075%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicIsize::load (1 samples, 0.09%)</title><rect x="84.6575%" y="517" width="0.0913%" height="15" fill="rgb(247,166,0)" fg:x="927" fg:w="1"/><text x="84.9075%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.09%)</title><rect x="84.6575%" y="501" width="0.0913%" height="15" fill="rgb(249,219,21)" fg:x="927" fg:w="1"/><text x="84.9075%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="84.8402%" y="549" width="0.0913%" height="15" fill="rgb(205,209,3)" fg:x="929" fg:w="1"/><text x="85.0902%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="84.8402%" y="533" width="0.0913%" height="15" fill="rgb(243,44,1)" fg:x="929" fg:w="1"/><text x="85.0902%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="84.8402%" y="517" width="0.0913%" height="15" fill="rgb(206,159,16)" fg:x="929" fg:w="1"/><text x="85.0902%" y="527.50"></text></g><g><title>crossbeam_epoch::default::is_pinned (1 samples, 0.09%)</title><rect x="84.9315%" y="533" width="0.0913%" height="15" fill="rgb(244,77,30)" fg:x="930" fg:w="1"/><text x="85.1815%" y="543.50"></text></g><g><title>crossbeam_epoch::default::with_handle (1 samples, 0.09%)</title><rect x="84.9315%" y="517" width="0.0913%" height="15" fill="rgb(218,69,12)" fg:x="930" fg:w="1"/><text x="85.1815%" y="527.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.09%)</title><rect x="84.9315%" y="501" width="0.0913%" height="15" fill="rgb(212,87,7)" fg:x="930" fg:w="1"/><text x="85.1815%" y="511.50"></text></g><g><title>crossbeam_epoch::default::HANDLE::__getit (1 samples, 0.09%)</title><rect x="84.9315%" y="485" width="0.0913%" height="15" fill="rgb(245,114,25)" fg:x="930" fg:w="1"/><text x="85.1815%" y="495.50"></text></g><g><title>std::sys::thread_local::fast_local::Key&lt;T&gt;::get (1 samples, 0.09%)</title><rect x="84.9315%" y="469" width="0.0913%" height="15" fill="rgb(210,61,42)" fg:x="930" fg:w="1"/><text x="85.1815%" y="479.50"></text></g><g><title>std::sys::thread_local::lazy::LazyKeyInner&lt;T&gt;::get (1 samples, 0.09%)</title><rect x="84.9315%" y="453" width="0.0913%" height="15" fill="rgb(211,52,33)" fg:x="930" fg:w="1"/><text x="85.1815%" y="463.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (1 samples, 0.09%)</title><rect x="84.9315%" y="437" width="0.0913%" height="15" fill="rgb(234,58,33)" fg:x="930" fg:w="1"/><text x="85.1815%" y="447.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (6 samples, 0.55%)</title><rect x="85.0228%" y="421" width="0.5479%" height="15" fill="rgb(220,115,36)" fg:x="931" fg:w="6"/><text x="85.2728%" y="431.50"></text></g><g><title>crossbeam_epoch::epoch::AtomicEpoch::load (1 samples, 0.09%)</title><rect x="85.5708%" y="421" width="0.0913%" height="15" fill="rgb(243,153,54)" fg:x="937" fg:w="1"/><text x="85.8208%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.09%)</title><rect x="85.5708%" y="405" width="0.0913%" height="15" fill="rgb(251,47,18)" fg:x="937" fg:w="1"/><text x="85.8208%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.09%)</title><rect x="85.5708%" y="389" width="0.0913%" height="15" fill="rgb(242,102,42)" fg:x="937" fg:w="1"/><text x="85.8208%" y="399.50"></text></g><g><title>crossbeam_epoch::epoch::Epoch::pinned (4 samples, 0.37%)</title><rect x="85.6621%" y="421" width="0.3653%" height="15" fill="rgb(234,31,38)" fg:x="938" fg:w="4"/><text x="85.9121%" y="431.50"></text></g><g><title>&lt;crossbeam_epoch::sync::list::Iter&lt;T,C&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.09%)</title><rect x="86.0274%" y="389" width="0.0913%" height="15" fill="rgb(221,117,51)" fg:x="942" fg:w="1"/><text x="86.2774%" y="399.50"></text></g><g><title>crossbeam_epoch::atomic::Shared&lt;T&gt;::tag (1 samples, 0.09%)</title><rect x="86.0274%" y="373" width="0.0913%" height="15" fill="rgb(212,20,18)" fg:x="942" fg:w="1"/><text x="86.2774%" y="383.50"></text></g><g><title>crossbeam_epoch::atomic::decompose_tag (1 samples, 0.09%)</title><rect x="86.0274%" y="357" width="0.0913%" height="15" fill="rgb(245,133,36)" fg:x="942" fg:w="1"/><text x="86.2774%" y="367.50"></text></g><g><title>rayon_core::registry::WorkerThread::take_local_job (16 samples, 1.46%)</title><rect x="84.7489%" y="565" width="1.4612%" height="15" fill="rgb(212,6,19)" fg:x="928" fg:w="16"/><text x="84.9989%" y="575.50"></text></g><g><title>crossbeam_deque::deque::Stealer&lt;T&gt;::steal (14 samples, 1.28%)</title><rect x="84.9315%" y="549" width="1.2785%" height="15" fill="rgb(218,1,36)" fg:x="930" fg:w="14"/><text x="85.1815%" y="559.50"></text></g><g><title>crossbeam_epoch::default::pin (13 samples, 1.19%)</title><rect x="85.0228%" y="533" width="1.1872%" height="15" fill="rgb(246,84,54)" fg:x="931" fg:w="13"/><text x="85.2728%" y="543.50"></text></g><g><title>crossbeam_epoch::default::with_handle (13 samples, 1.19%)</title><rect x="85.0228%" y="517" width="1.1872%" height="15" fill="rgb(242,110,6)" fg:x="931" fg:w="13"/><text x="85.2728%" y="527.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (13 samples, 1.19%)</title><rect x="85.0228%" y="501" width="1.1872%" height="15" fill="rgb(214,47,5)" fg:x="931" fg:w="13"/><text x="85.2728%" y="511.50"></text></g><g><title>crossbeam_epoch::default::with_handle::_{{closure}} (13 samples, 1.19%)</title><rect x="85.0228%" y="485" width="1.1872%" height="15" fill="rgb(218,159,25)" fg:x="931" fg:w="13"/><text x="85.2728%" y="495.50"></text></g><g><title>crossbeam_epoch::default::pin::_{{closure}} (13 samples, 1.19%)</title><rect x="85.0228%" y="469" width="1.1872%" height="15" fill="rgb(215,211,28)" fg:x="931" fg:w="13"/><text x="85.2728%" y="479.50"></text></g><g><title>crossbeam_epoch::collector::LocalHandle::pin (13 samples, 1.19%)</title><rect x="85.0228%" y="453" width="1.1872%" height="15" fill="rgb(238,59,32)" fg:x="931" fg:w="13"/><text x="85.2728%" y="463.50"></text></g><g><title>crossbeam_epoch::internal::Local::pin (13 samples, 1.19%)</title><rect x="85.0228%" y="437" width="1.1872%" height="15" fill="rgb(226,82,3)" fg:x="931" fg:w="13"/><text x="85.2728%" y="447.50"></text></g><g><title>crossbeam_epoch::internal::Global::collect (2 samples, 0.18%)</title><rect x="86.0274%" y="421" width="0.1826%" height="15" fill="rgb(240,164,32)" fg:x="942" fg:w="2"/><text x="86.2774%" y="431.50"></text></g><g><title>crossbeam_epoch::internal::Global::try_advance (2 samples, 0.18%)</title><rect x="86.0274%" y="405" width="0.1826%" height="15" fill="rgb(232,46,7)" fg:x="942" fg:w="2"/><text x="86.2774%" y="415.50"></text></g><g><title>crossbeam_epoch::epoch::AtomicEpoch::load (1 samples, 0.09%)</title><rect x="86.1187%" y="389" width="0.0913%" height="15" fill="rgb(229,129,53)" fg:x="943" fg:w="1"/><text x="86.3687%" y="399.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.09%)</title><rect x="86.1187%" y="373" width="0.0913%" height="15" fill="rgb(234,188,29)" fg:x="943" fg:w="1"/><text x="86.3687%" y="383.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.09%)</title><rect x="86.1187%" y="357" width="0.0913%" height="15" fill="rgb(246,141,4)" fg:x="943" fg:w="1"/><text x="86.3687%" y="367.50"></text></g><g><title>__sched_yield (75 samples, 6.85%)</title><rect x="86.2100%" y="549" width="6.8493%" height="15" fill="rgb(229,23,39)" fg:x="944" fg:w="75"/><text x="86.4600%" y="559.50">__sched_y..</text></g><g><title>[unknown] (75 samples, 6.85%)</title><rect x="86.2100%" y="533" width="6.8493%" height="15" fill="rgb(206,12,3)" fg:x="944" fg:w="75"/><text x="86.4600%" y="543.50">[unknown]</text></g><g><title>[unknown] (68 samples, 6.21%)</title><rect x="86.8493%" y="517" width="6.2100%" height="15" fill="rgb(252,226,20)" fg:x="951" fg:w="68"/><text x="87.0993%" y="527.50">[unknown]</text></g><g><title>[unknown] (65 samples, 5.94%)</title><rect x="87.1233%" y="501" width="5.9361%" height="15" fill="rgb(216,123,35)" fg:x="954" fg:w="65"/><text x="87.3733%" y="511.50">[unknown]</text></g><g><title>[unknown] (62 samples, 5.66%)</title><rect x="87.3973%" y="485" width="5.6621%" height="15" fill="rgb(212,68,40)" fg:x="957" fg:w="62"/><text x="87.6473%" y="495.50">[unknow..</text></g><g><title>[unknown] (51 samples, 4.66%)</title><rect x="88.4018%" y="469" width="4.6575%" height="15" fill="rgb(254,125,32)" fg:x="968" fg:w="51"/><text x="88.6518%" y="479.50">[unkn..</text></g><g><title>[unknown] (43 samples, 3.93%)</title><rect x="89.1324%" y="453" width="3.9269%" height="15" fill="rgb(253,97,22)" fg:x="976" fg:w="43"/><text x="89.3824%" y="463.50">[unk..</text></g><g><title>[unknown] (31 samples, 2.83%)</title><rect x="90.2283%" y="437" width="2.8311%" height="15" fill="rgb(241,101,14)" fg:x="988" fg:w="31"/><text x="90.4783%" y="447.50">[u..</text></g><g><title>[unknown] (9 samples, 0.82%)</title><rect x="92.2374%" y="421" width="0.8219%" height="15" fill="rgb(238,103,29)" fg:x="1010" fg:w="9"/><text x="92.4874%" y="431.50"></text></g><g><title>[unknown] (8 samples, 0.73%)</title><rect x="92.3288%" y="405" width="0.7306%" height="15" fill="rgb(233,195,47)" fg:x="1011" fg:w="8"/><text x="92.5788%" y="415.50"></text></g><g><title>[unknown] (4 samples, 0.37%)</title><rect x="92.6941%" y="389" width="0.3653%" height="15" fill="rgb(246,218,30)" fg:x="1015" fg:w="4"/><text x="92.9441%" y="399.50"></text></g><g><title>std::sync::poison::Flag::done (2 samples, 0.18%)</title><rect x="93.0594%" y="501" width="0.1826%" height="15" fill="rgb(219,145,47)" fg:x="1019" fg:w="2"/><text x="93.3094%" y="511.50"></text></g><g><title>rayon_core::sleep::Sleep::no_work_found (78 samples, 7.12%)</title><rect x="86.2100%" y="565" width="7.1233%" height="15" fill="rgb(243,12,26)" fg:x="944" fg:w="78"/><text x="86.4600%" y="575.50">rayon_core..</text></g><g><title>rayon_core::sleep::Sleep::sleep (3 samples, 0.27%)</title><rect x="93.0594%" y="549" width="0.2740%" height="15" fill="rgb(214,87,16)" fg:x="1019" fg:w="3"/><text x="93.3094%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;bool&gt;&gt; (3 samples, 0.27%)</title><rect x="93.0594%" y="533" width="0.2740%" height="15" fill="rgb(208,99,42)" fg:x="1019" fg:w="3"/><text x="93.3094%" y="543.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.27%)</title><rect x="93.0594%" y="517" width="0.2740%" height="15" fill="rgb(253,99,2)" fg:x="1019" fg:w="3"/><text x="93.3094%" y="527.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (1 samples, 0.09%)</title><rect x="93.2420%" y="501" width="0.0913%" height="15" fill="rgb(220,168,23)" fg:x="1021" fg:w="1"/><text x="93.4920%" y="511.50"></text></g><g><title>rayon_core::sleep::Sleep::start_looking (8 samples, 0.73%)</title><rect x="93.3333%" y="565" width="0.7306%" height="15" fill="rgb(242,38,24)" fg:x="1022" fg:w="8"/><text x="93.5833%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;bool&gt;&gt; (5 samples, 0.46%)</title><rect x="94.1553%" y="517" width="0.4566%" height="15" fill="rgb(225,182,9)" fg:x="1031" fg:w="5"/><text x="94.4053%" y="527.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.46%)</title><rect x="94.1553%" y="501" width="0.4566%" height="15" fill="rgb(243,178,37)" fg:x="1031" fg:w="5"/><text x="94.4053%" y="511.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (5 samples, 0.46%)</title><rect x="94.1553%" y="485" width="0.4566%" height="15" fill="rgb(232,139,19)" fg:x="1031" fg:w="5"/><text x="94.4053%" y="495.50"></text></g><g><title>syscall (5 samples, 0.46%)</title><rect x="94.1553%" y="469" width="0.4566%" height="15" fill="rgb(225,201,24)" fg:x="1031" fg:w="5"/><text x="94.4053%" y="479.50"></text></g><g><title>[unknown] (5 samples, 0.46%)</title><rect x="94.1553%" y="453" width="0.4566%" height="15" fill="rgb(221,47,46)" fg:x="1031" fg:w="5"/><text x="94.4053%" y="463.50"></text></g><g><title>[unknown] (4 samples, 0.37%)</title><rect x="94.2466%" y="437" width="0.3653%" height="15" fill="rgb(249,23,13)" fg:x="1032" fg:w="4"/><text x="94.4966%" y="447.50"></text></g><g><title>[unknown] (4 samples, 0.37%)</title><rect x="94.2466%" y="421" width="0.3653%" height="15" fill="rgb(219,9,5)" fg:x="1032" fg:w="4"/><text x="94.4966%" y="431.50"></text></g><g><title>[unknown] (4 samples, 0.37%)</title><rect x="94.2466%" y="405" width="0.3653%" height="15" fill="rgb(254,171,16)" fg:x="1032" fg:w="4"/><text x="94.4966%" y="415.50"></text></g><g><title>[unknown] (4 samples, 0.37%)</title><rect x="94.2466%" y="389" width="0.3653%" height="15" fill="rgb(230,171,20)" fg:x="1032" fg:w="4"/><text x="94.4966%" y="399.50"></text></g><g><title>[unknown] (3 samples, 0.27%)</title><rect x="94.3379%" y="373" width="0.2740%" height="15" fill="rgb(210,71,41)" fg:x="1033" fg:w="3"/><text x="94.5879%" y="383.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (1 samples, 0.09%)</title><rect x="94.6119%" y="501" width="0.0913%" height="15" fill="rgb(206,173,20)" fg:x="1036" fg:w="1"/><text x="94.8619%" y="511.50"></text></g><g><title>std::sync::poison::Flag::guard (1 samples, 0.09%)</title><rect x="94.6119%" y="485" width="0.0913%" height="15" fill="rgb(233,88,34)" fg:x="1036" fg:w="1"/><text x="94.8619%" y="495.50"></text></g><g><title>std::thread::panicking (1 samples, 0.09%)</title><rect x="94.6119%" y="469" width="0.0913%" height="15" fill="rgb(223,209,46)" fg:x="1036" fg:w="1"/><text x="94.8619%" y="479.50"></text></g><g><title>std::panicking::panicking (1 samples, 0.09%)</title><rect x="94.6119%" y="453" width="0.0913%" height="15" fill="rgb(250,43,18)" fg:x="1036" fg:w="1"/><text x="94.8619%" y="463.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (1 samples, 0.09%)</title><rect x="94.6119%" y="437" width="0.0913%" height="15" fill="rgb(208,13,10)" fg:x="1036" fg:w="1"/><text x="94.8619%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.09%)</title><rect x="94.6119%" y="421" width="0.0913%" height="15" fill="rgb(212,200,36)" fg:x="1036" fg:w="1"/><text x="94.8619%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.09%)</title><rect x="94.6119%" y="405" width="0.0913%" height="15" fill="rgb(225,90,30)" fg:x="1036" fg:w="1"/><text x="94.8619%" y="415.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_err (5 samples, 0.46%)</title><rect x="94.7032%" y="485" width="0.4566%" height="15" fill="rgb(236,182,39)" fg:x="1037" fg:w="5"/><text x="94.9532%" y="495.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_ok (5 samples, 0.46%)</title><rect x="94.7032%" y="469" width="0.4566%" height="15" fill="rgb(212,144,35)" fg:x="1037" fg:w="5"/><text x="94.9532%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="95.0685%" y="453" width="0.0913%" height="15" fill="rgb(228,63,44)" fg:x="1041" fg:w="1"/><text x="95.3185%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="95.0685%" y="437" width="0.0913%" height="15" fill="rgb(228,109,6)" fg:x="1041" fg:w="1"/><text x="95.3185%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="95.0685%" y="421" width="0.0913%" height="15" fill="rgb(238,117,24)" fg:x="1041" fg:w="1"/><text x="95.3185%" y="431.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (9 samples, 0.82%)</title><rect x="94.6119%" y="517" width="0.8219%" height="15" fill="rgb(242,26,26)" fg:x="1036" fg:w="9"/><text x="94.8619%" y="527.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (8 samples, 0.73%)</title><rect x="94.7032%" y="501" width="0.7306%" height="15" fill="rgb(221,92,48)" fg:x="1037" fg:w="8"/><text x="94.9532%" y="511.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock_contended (3 samples, 0.27%)</title><rect x="95.1598%" y="485" width="0.2740%" height="15" fill="rgb(209,209,32)" fg:x="1042" fg:w="3"/><text x="95.4098%" y="495.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::spin (3 samples, 0.27%)</title><rect x="95.1598%" y="469" width="0.2740%" height="15" fill="rgb(221,70,22)" fg:x="1042" fg:w="3"/><text x="95.4098%" y="479.50"></text></g><g><title>rayon_core::sleep::Sleep::wake_any_threads (16 samples, 1.46%)</title><rect x="94.0639%" y="549" width="1.4612%" height="15" fill="rgb(248,145,5)" fg:x="1030" fg:w="16"/><text x="94.3139%" y="559.50"></text></g><g><title>rayon_core::sleep::Sleep::wake_specific_thread (15 samples, 1.37%)</title><rect x="94.1553%" y="533" width="1.3699%" height="15" fill="rgb(226,116,26)" fg:x="1031" fg:w="15"/><text x="94.4053%" y="543.50"></text></g><g><title>syscall (1 samples, 0.09%)</title><rect x="95.4338%" y="517" width="0.0913%" height="15" fill="rgb(244,5,17)" fg:x="1045" fg:w="1"/><text x="95.6838%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="95.4338%" y="501" width="0.0913%" height="15" fill="rgb(252,159,33)" fg:x="1045" fg:w="1"/><text x="95.6838%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="95.4338%" y="485" width="0.0913%" height="15" fill="rgb(206,71,0)" fg:x="1045" fg:w="1"/><text x="95.6838%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="95.4338%" y="469" width="0.0913%" height="15" fill="rgb(233,118,54)" fg:x="1045" fg:w="1"/><text x="95.6838%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="95.4338%" y="453" width="0.0913%" height="15" fill="rgb(234,83,48)" fg:x="1045" fg:w="1"/><text x="95.6838%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="95.4338%" y="437" width="0.0913%" height="15" fill="rgb(228,3,54)" fg:x="1045" fg:w="1"/><text x="95.6838%" y="447.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (920 samples, 84.02%)</title><rect x="12.6027%" y="597" width="84.0183%" height="15" fill="rgb(226,155,13)" fg:x="138" fg:w="920"/><text x="12.8527%" y="607.50">rayon_core::registry::WorkerThread::wait_until</text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (920 samples, 84.02%)</title><rect x="12.6027%" y="581" width="84.0183%" height="15" fill="rgb(241,28,37)" fg:x="138" fg:w="920"/><text x="12.8527%" y="591.50">rayon_core::registry::WorkerThread::wait_until_cold</text></g><g><title>rayon_core::sleep::Sleep::work_found (28 samples, 2.56%)</title><rect x="94.0639%" y="565" width="2.5571%" height="15" fill="rgb(233,93,10)" fg:x="1030" fg:w="28"/><text x="94.3139%" y="575.50">ra..</text></g><g><title>rayon_core::sleep::counters::AtomicCounters::sub_inactive_thread (12 samples, 1.10%)</title><rect x="95.5251%" y="549" width="1.0959%" height="15" fill="rgb(225,113,19)" fg:x="1046" fg:w="12"/><text x="95.7751%" y="559.50"></text></g><g><title>rayon_core::sleep::counters::Counters::sleeping_threads (12 samples, 1.10%)</title><rect x="95.5251%" y="533" width="1.0959%" height="15" fill="rgb(241,2,18)" fg:x="1046" fg:w="12"/><text x="95.7751%" y="543.50"></text></g><g><title>rayon_core::sleep::counters::select_thread (12 samples, 1.10%)</title><rect x="95.5251%" y="517" width="1.0959%" height="15" fill="rgb(228,207,21)" fg:x="1046" fg:w="12"/><text x="95.7751%" y="527.50"></text></g><g><title>rayon_core::sleep::Sleep::sleep (1 samples, 0.09%)</title><rect x="96.6210%" y="565" width="0.0913%" height="15" fill="rgb(213,211,35)" fg:x="1058" fg:w="1"/><text x="96.8710%" y="575.50"></text></g><g><title>std::sync::condvar::Condvar::wait (1 samples, 0.09%)</title><rect x="96.6210%" y="549" width="0.0913%" height="15" fill="rgb(209,83,10)" fg:x="1058" fg:w="1"/><text x="96.8710%" y="559.50"></text></g><g><title>std::sys::sync::condvar::futex::Condvar::wait (1 samples, 0.09%)</title><rect x="96.6210%" y="533" width="0.0913%" height="15" fill="rgb(209,164,1)" fg:x="1058" fg:w="1"/><text x="96.8710%" y="543.50"></text></g><g><title>std::sys::sync::condvar::futex::Condvar::wait_optional_timeout (1 samples, 0.09%)</title><rect x="96.6210%" y="517" width="0.0913%" height="15" fill="rgb(213,184,43)" fg:x="1058" fg:w="1"/><text x="96.8710%" y="527.50"></text></g><g><title>std::sys::pal::unix::futex::futex_wait (1 samples, 0.09%)</title><rect x="96.6210%" y="501" width="0.0913%" height="15" fill="rgb(231,61,34)" fg:x="1058" fg:w="1"/><text x="96.8710%" y="511.50"></text></g><g><title>syscall (1 samples, 0.09%)</title><rect x="96.6210%" y="485" width="0.0913%" height="15" fill="rgb(235,75,3)" fg:x="1058" fg:w="1"/><text x="96.8710%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="96.6210%" y="469" width="0.0913%" height="15" fill="rgb(220,106,47)" fg:x="1058" fg:w="1"/><text x="96.8710%" y="479.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (951 samples, 86.85%)</title><rect x="10.1370%" y="805" width="86.8493%" height="15" fill="rgb(210,196,33)" fg:x="111" fg:w="951"/><text x="10.3870%" y="815.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (947 samples, 86.48%)</title><rect x="10.5023%" y="789" width="86.4840%" height="15" fill="rgb(229,154,42)" fg:x="115" fg:w="947"/><text x="10.7523%" y="799.50">core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>std::thread::Builder::spawn_unchecked_::_{{closure}} (947 samples, 86.48%)</title><rect x="10.5023%" y="773" width="86.4840%" height="15" fill="rgb(228,114,26)" fg:x="115" fg:w="947"/><text x="10.7523%" y="783.50">std::thread::Builder::spawn_unchecked_::_{{closure}}</text></g><g><title>std::panic::catch_unwind (945 samples, 86.30%)</title><rect x="10.6849%" y="757" width="86.3014%" height="15" fill="rgb(208,144,1)" fg:x="117" fg:w="945"/><text x="10.9349%" y="767.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (945 samples, 86.30%)</title><rect x="10.6849%" y="741" width="86.3014%" height="15" fill="rgb(239,112,37)" fg:x="117" fg:w="945"/><text x="10.9349%" y="751.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (945 samples, 86.30%)</title><rect x="10.6849%" y="725" width="86.3014%" height="15" fill="rgb(210,96,50)" fg:x="117" fg:w="945"/><text x="10.9349%" y="735.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (945 samples, 86.30%)</title><rect x="10.6849%" y="709" width="86.3014%" height="15" fill="rgb(222,178,2)" fg:x="117" fg:w="945"/><text x="10.9349%" y="719.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once</text></g><g><title>std::thread::Builder::spawn_unchecked_::_{{closure}}::_{{closure}} (945 samples, 86.30%)</title><rect x="10.6849%" y="693" width="86.3014%" height="15" fill="rgb(226,74,18)" fg:x="117" fg:w="945"/><text x="10.9349%" y="703.50">std::thread::Builder::spawn_unchecked_::_{{closure}}::_{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (945 samples, 86.30%)</title><rect x="10.6849%" y="677" width="86.3014%" height="15" fill="rgb(225,67,54)" fg:x="117" fg:w="945"/><text x="10.9349%" y="687.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>&lt;rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn&gt;::spawn::_{{closure}} (945 samples, 86.30%)</title><rect x="10.6849%" y="661" width="86.3014%" height="15" fill="rgb(251,92,32)" fg:x="117" fg:w="945"/><text x="10.9349%" y="671.50">&lt;rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn&gt;::spawn::_{{closure}}</text></g><g><title>rayon_core::registry::ThreadBuilder::run (945 samples, 86.30%)</title><rect x="10.6849%" y="645" width="86.3014%" height="15" fill="rgb(228,149,22)" fg:x="117" fg:w="945"/><text x="10.9349%" y="655.50">rayon_core::registry::ThreadBuilder::run</text></g><g><title>rayon_core::registry::main_loop (945 samples, 86.30%)</title><rect x="10.6849%" y="629" width="86.3014%" height="15" fill="rgb(243,54,13)" fg:x="117" fg:w="945"/><text x="10.9349%" y="639.50">rayon_core::registry::main_loop</text></g><g><title>rayon_core::registry::WorkerThread::wait_until_out_of_work (929 samples, 84.84%)</title><rect x="12.1461%" y="613" width="84.8402%" height="15" fill="rgb(243,180,28)" fg:x="133" fg:w="929"/><text x="12.3961%" y="623.50">rayon_core::registry::WorkerThread::wait_until_out_of_work</text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (4 samples, 0.37%)</title><rect x="96.6210%" y="597" width="0.3653%" height="15" fill="rgb(208,167,24)" fg:x="1058" fg:w="4"/><text x="96.8710%" y="607.50"></text></g><g><title>rayon_core::sleep::Sleep::work_found (4 samples, 0.37%)</title><rect x="96.6210%" y="581" width="0.3653%" height="15" fill="rgb(245,73,45)" fg:x="1058" fg:w="4"/><text x="96.8710%" y="591.50"></text></g><g><title>rayon_core::sleep::Sleep::wake_any_threads (3 samples, 0.27%)</title><rect x="96.7123%" y="565" width="0.2740%" height="15" fill="rgb(237,203,48)" fg:x="1059" fg:w="3"/><text x="96.9623%" y="575.50"></text></g><g><title>rayon_core::sleep::Sleep::wake_specific_thread (3 samples, 0.27%)</title><rect x="96.7123%" y="549" width="0.2740%" height="15" fill="rgb(211,197,16)" fg:x="1059" fg:w="3"/><text x="96.9623%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;bool&gt;&gt; (3 samples, 0.27%)</title><rect x="96.7123%" y="533" width="0.2740%" height="15" fill="rgb(243,99,51)" fg:x="1059" fg:w="3"/><text x="96.9623%" y="543.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.27%)</title><rect x="96.7123%" y="517" width="0.2740%" height="15" fill="rgb(215,123,29)" fg:x="1059" fg:w="3"/><text x="96.9623%" y="527.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (3 samples, 0.27%)</title><rect x="96.7123%" y="501" width="0.2740%" height="15" fill="rgb(239,186,37)" fg:x="1059" fg:w="3"/><text x="96.9623%" y="511.50"></text></g><g><title>syscall (3 samples, 0.27%)</title><rect x="96.7123%" y="485" width="0.2740%" height="15" fill="rgb(252,136,39)" fg:x="1059" fg:w="3"/><text x="96.9623%" y="495.50"></text></g><g><title>[unknown] (3 samples, 0.27%)</title><rect x="96.7123%" y="469" width="0.2740%" height="15" fill="rgb(223,213,32)" fg:x="1059" fg:w="3"/><text x="96.9623%" y="479.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (952 samples, 86.94%)</title><rect x="10.1370%" y="821" width="86.9406%" height="15" fill="rgb(233,115,5)" fg:x="111" fg:w="952"/><text x="10.3870%" y="831.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.09%)</title><rect x="96.9863%" y="805" width="0.0913%" height="15" fill="rgb(207,226,44)" fg:x="1062" fg:w="1"/><text x="97.2363%" y="815.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.09%)</title><rect x="96.9863%" y="789" width="0.0913%" height="15" fill="rgb(208,126,0)" fg:x="1062" fg:w="1"/><text x="97.2363%" y="799.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.09%)</title><rect x="96.9863%" y="773" width="0.0913%" height="15" fill="rgb(244,66,21)" fg:x="1062" fg:w="1"/><text x="97.2363%" y="783.50"></text></g><g><title>cfree@GLIBC_2.2.5 (1 samples, 0.09%)</title><rect x="96.9863%" y="757" width="0.0913%" height="15" fill="rgb(222,97,12)" fg:x="1062" fg:w="1"/><text x="97.2363%" y="767.50"></text></g><g><title>__GI___sigaltstack (1 samples, 0.09%)</title><rect x="97.0776%" y="773" width="0.0913%" height="15" fill="rgb(219,213,19)" fg:x="1063" fg:w="1"/><text x="97.3276%" y="783.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="97.0776%" y="757" width="0.0913%" height="15" fill="rgb(252,169,30)" fg:x="1063" fg:w="1"/><text x="97.3276%" y="767.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="97.0776%" y="741" width="0.0913%" height="15" fill="rgb(206,32,51)" fg:x="1063" fg:w="1"/><text x="97.3276%" y="751.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="97.0776%" y="725" width="0.0913%" height="15" fill="rgb(250,172,42)" fg:x="1063" fg:w="1"/><text x="97.3276%" y="735.50"></text></g><g><title>__munmap (1 samples, 0.09%)</title><rect x="97.1689%" y="773" width="0.0913%" height="15" fill="rgb(209,34,43)" fg:x="1064" fg:w="1"/><text x="97.4189%" y="783.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="97.1689%" y="757" width="0.0913%" height="15" fill="rgb(223,11,35)" fg:x="1064" fg:w="1"/><text x="97.4189%" y="767.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="97.1689%" y="741" width="0.0913%" height="15" fill="rgb(251,219,26)" fg:x="1064" fg:w="1"/><text x="97.4189%" y="751.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="97.1689%" y="725" width="0.0913%" height="15" fill="rgb(231,119,3)" fg:x="1064" fg:w="1"/><text x="97.4189%" y="735.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="97.1689%" y="709" width="0.0913%" height="15" fill="rgb(216,97,11)" fg:x="1064" fg:w="1"/><text x="97.4189%" y="719.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="97.1689%" y="693" width="0.0913%" height="15" fill="rgb(223,59,9)" fg:x="1064" fg:w="1"/><text x="97.4189%" y="703.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="97.1689%" y="677" width="0.0913%" height="15" fill="rgb(233,93,31)" fg:x="1064" fg:w="1"/><text x="97.4189%" y="687.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="97.1689%" y="661" width="0.0913%" height="15" fill="rgb(239,81,33)" fg:x="1064" fg:w="1"/><text x="97.4189%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sys::pal::unix::stack_overflow::Handler&gt; (5 samples, 0.46%)</title><rect x="97.0776%" y="821" width="0.4566%" height="15" fill="rgb(213,120,34)" fg:x="1063" fg:w="5"/><text x="97.3276%" y="831.50"></text></g><g><title>&lt;std::sys::pal::unix::stack_overflow::Handler as core::ops::drop::Drop&gt;::drop (5 samples, 0.46%)</title><rect x="97.0776%" y="805" width="0.4566%" height="15" fill="rgb(243,49,53)" fg:x="1063" fg:w="5"/><text x="97.3276%" y="815.50"></text></g><g><title>std::sys::pal::unix::stack_overflow::imp::drop_handler (5 samples, 0.46%)</title><rect x="97.0776%" y="789" width="0.4566%" height="15" fill="rgb(247,216,33)" fg:x="1063" fg:w="5"/><text x="97.3276%" y="799.50"></text></g><g><title>std::sys::pal::unix::stack_overflow::imp::sigstack_size (3 samples, 0.27%)</title><rect x="97.2603%" y="773" width="0.2740%" height="15" fill="rgb(226,26,14)" fg:x="1065" fg:w="3"/><text x="97.5103%" y="783.50"></text></g><g><title>__getauxval (3 samples, 0.27%)</title><rect x="97.2603%" y="757" width="0.2740%" height="15" fill="rgb(215,49,53)" fg:x="1065" fg:w="3"/><text x="97.5103%" y="767.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="97.8995%" y="693" width="0.0913%" height="15" fill="rgb(245,162,40)" fg:x="1072" fg:w="1"/><text x="98.1495%" y="703.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="97.8995%" y="677" width="0.0913%" height="15" fill="rgb(229,68,17)" fg:x="1072" fg:w="1"/><text x="98.1495%" y="687.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="97.8995%" y="661" width="0.0913%" height="15" fill="rgb(213,182,10)" fg:x="1072" fg:w="1"/><text x="98.1495%" y="671.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="97.8995%" y="645" width="0.0913%" height="15" fill="rgb(245,125,30)" fg:x="1072" fg:w="1"/><text x="98.1495%" y="655.50"></text></g><g><title>__mmap (9 samples, 0.82%)</title><rect x="97.9909%" y="693" width="0.8219%" height="15" fill="rgb(232,202,2)" fg:x="1073" fg:w="9"/><text x="98.2409%" y="703.50"></text></g><g><title>[unknown] (7 samples, 0.64%)</title><rect x="98.1735%" y="677" width="0.6393%" height="15" fill="rgb(237,140,51)" fg:x="1075" fg:w="7"/><text x="98.4235%" y="687.50"></text></g><g><title>[unknown] (6 samples, 0.55%)</title><rect x="98.2648%" y="661" width="0.5479%" height="15" fill="rgb(236,157,25)" fg:x="1076" fg:w="6"/><text x="98.5148%" y="671.50"></text></g><g><title>[unknown] (6 samples, 0.55%)</title><rect x="98.2648%" y="645" width="0.5479%" height="15" fill="rgb(219,209,0)" fg:x="1076" fg:w="6"/><text x="98.5148%" y="655.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="98.7215%" y="629" width="0.0913%" height="15" fill="rgb(240,116,54)" fg:x="1081" fg:w="1"/><text x="98.9715%" y="639.50"></text></g><g><title>alloc_new_heap (12 samples, 1.10%)</title><rect x="97.8082%" y="709" width="1.0959%" height="15" fill="rgb(216,10,36)" fg:x="1071" fg:w="12"/><text x="98.0582%" y="719.50"></text></g><g><title>__mprotect (1 samples, 0.09%)</title><rect x="98.8128%" y="693" width="0.0913%" height="15" fill="rgb(222,72,44)" fg:x="1082" fg:w="1"/><text x="99.0628%" y="703.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="98.8128%" y="677" width="0.0913%" height="15" fill="rgb(232,159,9)" fg:x="1082" fg:w="1"/><text x="99.0628%" y="687.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="98.8128%" y="661" width="0.0913%" height="15" fill="rgb(210,39,32)" fg:x="1082" fg:w="1"/><text x="99.0628%" y="671.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="98.8128%" y="645" width="0.0913%" height="15" fill="rgb(216,194,45)" fg:x="1082" fg:w="1"/><text x="99.0628%" y="655.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="98.8128%" y="629" width="0.0913%" height="15" fill="rgb(218,18,35)" fg:x="1082" fg:w="1"/><text x="99.0628%" y="639.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="98.8128%" y="613" width="0.0913%" height="15" fill="rgb(207,83,51)" fg:x="1082" fg:w="1"/><text x="99.0628%" y="623.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="98.8128%" y="597" width="0.0913%" height="15" fill="rgb(225,63,43)" fg:x="1082" fg:w="1"/><text x="99.0628%" y="607.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="98.8128%" y="581" width="0.0913%" height="15" fill="rgb(207,57,36)" fg:x="1082" fg:w="1"/><text x="99.0628%" y="591.50"></text></g><g><title>malloc (14 samples, 1.28%)</title><rect x="97.7169%" y="757" width="1.2785%" height="15" fill="rgb(216,99,33)" fg:x="1070" fg:w="14"/><text x="97.9669%" y="767.50"></text></g><g><title>tcache_init.part.0 (14 samples, 1.28%)</title><rect x="97.7169%" y="741" width="1.2785%" height="15" fill="rgb(225,42,16)" fg:x="1070" fg:w="14"/><text x="97.9669%" y="751.50"></text></g><g><title>arena_get2.part.0 (14 samples, 1.28%)</title><rect x="97.7169%" y="725" width="1.2785%" height="15" fill="rgb(220,201,45)" fg:x="1070" fg:w="14"/><text x="97.9669%" y="735.50"></text></g><g><title>new_heap (1 samples, 0.09%)</title><rect x="98.9041%" y="709" width="0.0913%" height="15" fill="rgb(225,33,4)" fg:x="1083" fg:w="1"/><text x="99.1541%" y="719.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="99.5434%" y="741" width="0.0913%" height="15" fill="rgb(224,33,50)" fg:x="1090" fg:w="1"/><text x="99.7934%" y="751.50"></text></g><g><title>pthread_attr_init@@GLIBC_2.2.5 (9 samples, 0.82%)</title><rect x="98.9954%" y="757" width="0.8219%" height="15" fill="rgb(246,198,51)" fg:x="1084" fg:w="9"/><text x="99.2454%" y="767.50"></text></g><g><title>__getpagesize (2 samples, 0.18%)</title><rect x="99.6347%" y="741" width="0.1826%" height="15" fill="rgb(205,22,4)" fg:x="1091" fg:w="2"/><text x="99.8847%" y="751.50"></text></g><g><title>pthread_getaffinity_np@GLIBC_2.3.4 (1 samples, 0.09%)</title><rect x="99.8174%" y="757" width="0.0913%" height="15" fill="rgb(206,3,8)" fg:x="1093" fg:w="1"/><text x="100.0674%" y="767.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="99.8174%" y="741" width="0.0913%" height="15" fill="rgb(251,23,15)" fg:x="1093" fg:w="1"/><text x="100.0674%" y="751.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="99.8174%" y="725" width="0.0913%" height="15" fill="rgb(252,88,28)" fg:x="1093" fg:w="1"/><text x="100.0674%" y="735.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="99.8174%" y="709" width="0.0913%" height="15" fill="rgb(212,127,14)" fg:x="1093" fg:w="1"/><text x="100.0674%" y="719.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="99.8174%" y="693" width="0.0913%" height="15" fill="rgb(247,145,37)" fg:x="1093" fg:w="1"/><text x="100.0674%" y="703.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="99.8174%" y="677" width="0.0913%" height="15" fill="rgb(209,117,53)" fg:x="1093" fg:w="1"/><text x="100.0674%" y="687.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="99.8174%" y="661" width="0.0913%" height="15" fill="rgb(212,90,42)" fg:x="1093" fg:w="1"/><text x="100.0674%" y="671.50"></text></g><g><title>all (1,095 samples, 100%)</title><rect x="0.0000%" y="901" width="100.0000%" height="15" fill="rgb(218,164,37)" fg:x="0" fg:w="1095"/><text x="0.2500%" y="911.50"></text></g><g><title>julia (1,095 samples, 100.00%)</title><rect x="0.0000%" y="885" width="100.0000%" height="15" fill="rgb(246,65,34)" fg:x="0" fg:w="1095"/><text x="0.2500%" y="895.50">julia</text></g><g><title>clone3 (1,053 samples, 96.16%)</title><rect x="3.8356%" y="869" width="96.1644%" height="15" fill="rgb(231,100,33)" fg:x="42" fg:w="1053"/><text x="4.0856%" y="879.50">clone3</text></g><g><title>start_thread (1,051 samples, 95.98%)</title><rect x="4.0183%" y="853" width="95.9817%" height="15" fill="rgb(228,126,14)" fg:x="44" fg:w="1051"/><text x="4.2683%" y="863.50">start_thread</text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (984 samples, 89.86%)</title><rect x="10.1370%" y="837" width="89.8630%" height="15" fill="rgb(215,173,21)" fg:x="111" fg:w="984"/><text x="10.3870%" y="847.50">std::sys::pal::unix::thread::Thread::new::thread_start</text></g><g><title>std::sys::pal::unix::stack_overflow::Handler::new (27 samples, 2.47%)</title><rect x="97.5342%" y="821" width="2.4658%" height="15" fill="rgb(210,6,40)" fg:x="1068" fg:w="27"/><text x="97.7842%" y="831.50">st..</text></g><g><title>std::sys::pal::unix::stack_overflow::imp::make_handler (27 samples, 2.47%)</title><rect x="97.5342%" y="805" width="2.4658%" height="15" fill="rgb(212,48,18)" fg:x="1068" fg:w="27"/><text x="97.7842%" y="815.50">st..</text></g><g><title>std::sys::pal::unix::stack_overflow::imp::current_guard (27 samples, 2.47%)</title><rect x="97.5342%" y="789" width="2.4658%" height="15" fill="rgb(230,214,11)" fg:x="1068" fg:w="27"/><text x="97.7842%" y="799.50">st..</text></g><g><title>pthread_getattr_np@@GLIBC_2.32 (26 samples, 2.37%)</title><rect x="97.6256%" y="773" width="2.3744%" height="15" fill="rgb(254,105,39)" fg:x="1069" fg:w="26"/><text x="97.8756%" y="783.50">pt..</text></g><g><title>realloc (1 samples, 0.09%)</title><rect x="99.9087%" y="757" width="0.0913%" height="15" fill="rgb(245,158,5)" fg:x="1094" fg:w="1"/><text x="100.1587%" y="767.50"></text></g></svg></svg>