<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2022" onload="init(evt)" viewBox="0 0 1200 2022" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="2022" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="2005.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="2005.00"> </text><svg id="frames" x="10" width="1180" total_samples="1464"><g><title>[unknown] (2 samples, 0.14%)</title><rect x="1.2295%" y="1925" width="0.1366%" height="15" fill="rgb(227,0,7)" fg:x="18" fg:w="2"/><text x="1.4795%" y="1935.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="1.2978%" y="1909" width="0.0683%" height="15" fill="rgb(217,0,24)" fg:x="19" fg:w="1"/><text x="1.5478%" y="1919.50"></text></g><g><title>[unknown] (21 samples, 1.43%)</title><rect x="0.0000%" y="1941" width="1.4344%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="21"/><text x="0.2500%" y="1951.50"></text></g><g><title>syscall (1 samples, 0.07%)</title><rect x="1.3661%" y="1925" width="0.0683%" height="15" fill="rgb(248,212,6)" fg:x="20" fg:w="1"/><text x="1.6161%" y="1935.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="1.3661%" y="1909" width="0.0683%" height="15" fill="rgb(208,68,35)" fg:x="20" fg:w="1"/><text x="1.6161%" y="1919.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="1.4344%" y="1925" width="0.0683%" height="15" fill="rgb(232,128,0)" fg:x="21" fg:w="1"/><text x="1.6844%" y="1935.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="1.4344%" y="1909" width="0.0683%" height="15" fill="rgb(207,160,47)" fg:x="21" fg:w="1"/><text x="1.6844%" y="1919.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="1.4344%" y="1893" width="0.0683%" height="15" fill="rgb(228,23,34)" fg:x="21" fg:w="1"/><text x="1.6844%" y="1903.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="1.4344%" y="1877" width="0.0683%" height="15" fill="rgb(218,30,26)" fg:x="21" fg:w="1"/><text x="1.6844%" y="1887.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="1.4344%" y="1861" width="0.0683%" height="15" fill="rgb(220,122,19)" fg:x="21" fg:w="1"/><text x="1.6844%" y="1871.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.07%)</title><rect x="1.5027%" y="1669" width="0.0683%" height="15" fill="rgb(250,228,42)" fg:x="22" fg:w="1"/><text x="1.7527%" y="1679.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.07%)</title><rect x="1.5027%" y="1653" width="0.0683%" height="15" fill="rgb(240,193,28)" fg:x="22" fg:w="1"/><text x="1.7527%" y="1663.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.07%)</title><rect x="1.5027%" y="1637" width="0.0683%" height="15" fill="rgb(216,20,37)" fg:x="22" fg:w="1"/><text x="1.7527%" y="1647.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.07%)</title><rect x="1.5027%" y="1621" width="0.0683%" height="15" fill="rgb(206,188,39)" fg:x="22" fg:w="1"/><text x="1.7527%" y="1631.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.07%)</title><rect x="1.5027%" y="1605" width="0.0683%" height="15" fill="rgb(217,207,13)" fg:x="22" fg:w="1"/><text x="1.7527%" y="1615.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.07%)</title><rect x="1.5027%" y="1589" width="0.0683%" height="15" fill="rgb(231,73,38)" fg:x="22" fg:w="1"/><text x="1.7527%" y="1599.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.07%)</title><rect x="1.5027%" y="1573" width="0.0683%" height="15" fill="rgb(225,20,46)" fg:x="22" fg:w="1"/><text x="1.7527%" y="1583.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="1.5027%" y="1557" width="0.0683%" height="15" fill="rgb(210,31,41)" fg:x="22" fg:w="1"/><text x="1.7527%" y="1567.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="1.5027%" y="1541" width="0.0683%" height="15" fill="rgb(221,200,47)" fg:x="22" fg:w="1"/><text x="1.7527%" y="1551.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="1.5027%" y="1525" width="0.0683%" height="15" fill="rgb(226,26,5)" fg:x="22" fg:w="1"/><text x="1.7527%" y="1535.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="1.5027%" y="1509" width="0.0683%" height="15" fill="rgb(249,33,26)" fg:x="22" fg:w="1"/><text x="1.7527%" y="1519.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="1.5027%" y="1493" width="0.0683%" height="15" fill="rgb(235,183,28)" fg:x="22" fg:w="1"/><text x="1.7527%" y="1503.50"></text></g><g><title>adler32::RollingAdler32::update_buffer (1 samples, 0.07%)</title><rect x="1.5710%" y="1525" width="0.0683%" height="15" fill="rgb(221,5,38)" fg:x="23" fg:w="1"/><text x="1.8210%" y="1535.50"></text></g><g><title>adler32::do16 (1 samples, 0.07%)</title><rect x="1.5710%" y="1509" width="0.0683%" height="15" fill="rgb(247,18,42)" fg:x="23" fg:w="1"/><text x="1.8210%" y="1519.50"></text></g><g><title>adler32::do8 (1 samples, 0.07%)</title><rect x="1.5710%" y="1493" width="0.0683%" height="15" fill="rgb(241,131,45)" fg:x="23" fg:w="1"/><text x="1.8210%" y="1503.50"></text></g><g><title>adler32::do4 (1 samples, 0.07%)</title><rect x="1.5710%" y="1477" width="0.0683%" height="15" fill="rgb(249,31,29)" fg:x="23" fg:w="1"/><text x="1.8210%" y="1487.50"></text></g><g><title>adler32::do2 (1 samples, 0.07%)</title><rect x="1.5710%" y="1461" width="0.0683%" height="15" fill="rgb(225,111,53)" fg:x="23" fg:w="1"/><text x="1.8210%" y="1471.50"></text></g><g><title>adler32::do1 (1 samples, 0.07%)</title><rect x="1.5710%" y="1445" width="0.0683%" height="15" fill="rgb(238,160,17)" fg:x="23" fg:w="1"/><text x="1.8210%" y="1455.50"></text></g><g><title>deflate::chained_hash_table::ChainedHashTable::add_hash_value (1 samples, 0.07%)</title><rect x="1.6393%" y="1461" width="0.0683%" height="15" fill="rgb(214,148,48)" fg:x="24" fg:w="1"/><text x="1.8893%" y="1471.50"></text></g><g><title>deflate::chained_hash_table::ChainedHashTable::add_with_hash (1 samples, 0.07%)</title><rect x="1.6393%" y="1445" width="0.0683%" height="15" fill="rgb(232,36,49)" fg:x="24" fg:w="1"/><text x="1.8893%" y="1455.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.14%)</title><rect x="1.7077%" y="1445" width="0.1366%" height="15" fill="rgb(209,103,24)" fg:x="25" fg:w="2"/><text x="1.9577%" y="1455.50"></text></g><g><title>__libc_start_main@@GLIBC_2.34 (6 samples, 0.41%)</title><rect x="1.5027%" y="1925" width="0.4098%" height="15" fill="rgb(229,88,8)" fg:x="22" fg:w="6"/><text x="1.7527%" y="1935.50"></text></g><g><title>__libc_start_call_main (6 samples, 0.41%)</title><rect x="1.5027%" y="1909" width="0.4098%" height="15" fill="rgb(213,181,19)" fg:x="22" fg:w="6"/><text x="1.7527%" y="1919.50"></text></g><g><title>main (6 samples, 0.41%)</title><rect x="1.5027%" y="1893" width="0.4098%" height="15" fill="rgb(254,191,54)" fg:x="22" fg:w="6"/><text x="1.7527%" y="1903.50"></text></g><g><title>std::rt::lang_start_internal (6 samples, 0.41%)</title><rect x="1.5027%" y="1877" width="0.4098%" height="15" fill="rgb(241,83,37)" fg:x="22" fg:w="6"/><text x="1.7527%" y="1887.50"></text></g><g><title>std::panic::catch_unwind (6 samples, 0.41%)</title><rect x="1.5027%" y="1861" width="0.4098%" height="15" fill="rgb(233,36,39)" fg:x="22" fg:w="6"/><text x="1.7527%" y="1871.50"></text></g><g><title>std::panicking::try (6 samples, 0.41%)</title><rect x="1.5027%" y="1845" width="0.4098%" height="15" fill="rgb(226,3,54)" fg:x="22" fg:w="6"/><text x="1.7527%" y="1855.50"></text></g><g><title>std::panicking::try::do_call (6 samples, 0.41%)</title><rect x="1.5027%" y="1829" width="0.4098%" height="15" fill="rgb(245,192,40)" fg:x="22" fg:w="6"/><text x="1.7527%" y="1839.50"></text></g><g><title>std::rt::lang_start_internal::_{{closure}} (6 samples, 0.41%)</title><rect x="1.5027%" y="1813" width="0.4098%" height="15" fill="rgb(238,167,29)" fg:x="22" fg:w="6"/><text x="1.7527%" y="1823.50"></text></g><g><title>std::panic::catch_unwind (6 samples, 0.41%)</title><rect x="1.5027%" y="1797" width="0.4098%" height="15" fill="rgb(232,182,51)" fg:x="22" fg:w="6"/><text x="1.7527%" y="1807.50"></text></g><g><title>std::panicking::try (6 samples, 0.41%)</title><rect x="1.5027%" y="1781" width="0.4098%" height="15" fill="rgb(231,60,39)" fg:x="22" fg:w="6"/><text x="1.7527%" y="1791.50"></text></g><g><title>std::panicking::try::do_call (6 samples, 0.41%)</title><rect x="1.5027%" y="1765" width="0.4098%" height="15" fill="rgb(208,69,12)" fg:x="22" fg:w="6"/><text x="1.7527%" y="1775.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (6 samples, 0.41%)</title><rect x="1.5027%" y="1749" width="0.4098%" height="15" fill="rgb(235,93,37)" fg:x="22" fg:w="6"/><text x="1.7527%" y="1759.50"></text></g><g><title>std::rt::lang_start::_{{closure}} (6 samples, 0.41%)</title><rect x="1.5027%" y="1733" width="0.4098%" height="15" fill="rgb(213,116,39)" fg:x="22" fg:w="6"/><text x="1.7527%" y="1743.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (6 samples, 0.41%)</title><rect x="1.5027%" y="1717" width="0.4098%" height="15" fill="rgb(222,207,29)" fg:x="22" fg:w="6"/><text x="1.7527%" y="1727.50"></text></g><g><title>core::ops::function::FnOnce::call_once (6 samples, 0.41%)</title><rect x="1.5027%" y="1701" width="0.4098%" height="15" fill="rgb(206,96,30)" fg:x="22" fg:w="6"/><text x="1.7527%" y="1711.50"></text></g><g><title>julia::main (6 samples, 0.41%)</title><rect x="1.5027%" y="1685" width="0.4098%" height="15" fill="rgb(218,138,4)" fg:x="22" fg:w="6"/><text x="1.7527%" y="1695.50"></text></g><g><title>image::buffer_::ImageBuffer&lt;P,Container&gt;::save (5 samples, 0.34%)</title><rect x="1.5710%" y="1669" width="0.3415%" height="15" fill="rgb(250,191,14)" fg:x="23" fg:w="5"/><text x="1.8210%" y="1679.50"></text></g><g><title>image::dynimage::save_buffer (5 samples, 0.34%)</title><rect x="1.5710%" y="1653" width="0.3415%" height="15" fill="rgb(239,60,40)" fg:x="23" fg:w="5"/><text x="1.8210%" y="1663.50"></text></g><g><title>image::io::free_functions::save_buffer_impl (5 samples, 0.34%)</title><rect x="1.5710%" y="1637" width="0.3415%" height="15" fill="rgb(206,27,48)" fg:x="23" fg:w="5"/><text x="1.8210%" y="1647.50"></text></g><g><title>image::io::free_functions::save_buffer_with_format_impl (5 samples, 0.34%)</title><rect x="1.5710%" y="1621" width="0.3415%" height="15" fill="rgb(225,35,8)" fg:x="23" fg:w="5"/><text x="1.8210%" y="1631.50"></text></g><g><title>&lt;image::codecs::png::PngEncoder&lt;W&gt; as image::image::ImageEncoder&gt;::write_image (5 samples, 0.34%)</title><rect x="1.5710%" y="1605" width="0.3415%" height="15" fill="rgb(250,213,24)" fg:x="23" fg:w="5"/><text x="1.8210%" y="1615.50"></text></g><g><title>image::codecs::png::PngEncoder&lt;W&gt;::encode (5 samples, 0.34%)</title><rect x="1.5710%" y="1589" width="0.3415%" height="15" fill="rgb(247,123,22)" fg:x="23" fg:w="5"/><text x="1.8210%" y="1599.50"></text></g><g><title>png::encoder::Writer&lt;W&gt;::write_image_data (5 samples, 0.34%)</title><rect x="1.5710%" y="1573" width="0.3415%" height="15" fill="rgb(231,138,38)" fg:x="23" fg:w="5"/><text x="1.8210%" y="1583.50"></text></g><g><title>std::io::Write::write_all (5 samples, 0.34%)</title><rect x="1.5710%" y="1557" width="0.3415%" height="15" fill="rgb(231,145,46)" fg:x="23" fg:w="5"/><text x="1.8210%" y="1567.50"></text></g><g><title>&lt;deflate::writer::ZlibEncoder&lt;W&gt; as std::io::Write&gt;::write (5 samples, 0.34%)</title><rect x="1.5710%" y="1541" width="0.3415%" height="15" fill="rgb(251,118,11)" fg:x="23" fg:w="5"/><text x="1.8210%" y="1551.50"></text></g><g><title>deflate::compress::compress_data_dynamic_n (4 samples, 0.27%)</title><rect x="1.6393%" y="1525" width="0.2732%" height="15" fill="rgb(217,147,25)" fg:x="24" fg:w="4"/><text x="1.8893%" y="1535.50"></text></g><g><title>deflate::lz77::lz77_compress_block (4 samples, 0.27%)</title><rect x="1.6393%" y="1509" width="0.2732%" height="15" fill="rgb(247,81,37)" fg:x="24" fg:w="4"/><text x="1.8893%" y="1519.50"></text></g><g><title>deflate::lz77::process_chunk (4 samples, 0.27%)</title><rect x="1.6393%" y="1493" width="0.2732%" height="15" fill="rgb(209,12,38)" fg:x="24" fg:w="4"/><text x="1.8893%" y="1503.50"></text></g><g><title>deflate::lz77::process_chunk_greedy (4 samples, 0.27%)</title><rect x="1.6393%" y="1477" width="0.2732%" height="15" fill="rgb(227,1,9)" fg:x="24" fg:w="4"/><text x="1.8893%" y="1487.50"></text></g><g><title>deflate::lz77::add_to_hash_table (3 samples, 0.20%)</title><rect x="1.7077%" y="1461" width="0.2049%" height="15" fill="rgb(248,47,43)" fg:x="25" fg:w="3"/><text x="1.9577%" y="1471.50"></text></g><g><title>deflate::chained_hash_table::update_hash (1 samples, 0.07%)</title><rect x="1.8443%" y="1445" width="0.0683%" height="15" fill="rgb(221,10,30)" fg:x="27" fg:w="1"/><text x="2.0943%" y="1455.50"></text></g><g><title>deflate::chained_hash_table::update_hash_conf (1 samples, 0.07%)</title><rect x="1.8443%" y="1429" width="0.0683%" height="15" fill="rgb(210,229,1)" fg:x="27" fg:w="1"/><text x="2.0943%" y="1439.50"></text></g><g><title>[unknown] (2 samples, 0.14%)</title><rect x="1.9126%" y="1909" width="0.1366%" height="15" fill="rgb(222,148,37)" fg:x="28" fg:w="2"/><text x="2.1626%" y="1919.50"></text></g><g><title>[unknown] (2 samples, 0.14%)</title><rect x="1.9126%" y="1893" width="0.1366%" height="15" fill="rgb(234,67,33)" fg:x="28" fg:w="2"/><text x="2.1626%" y="1903.50"></text></g><g><title>_dl_sysdep_parse_arguments (1 samples, 0.07%)</title><rect x="2.0492%" y="1877" width="0.0683%" height="15" fill="rgb(247,98,35)" fg:x="30" fg:w="1"/><text x="2.2992%" y="1887.50"></text></g><g><title>_dl_start_final (2 samples, 0.14%)</title><rect x="2.0492%" y="1909" width="0.1366%" height="15" fill="rgb(247,138,52)" fg:x="30" fg:w="2"/><text x="2.2992%" y="1919.50"></text></g><g><title>_dl_sysdep_start (2 samples, 0.14%)</title><rect x="2.0492%" y="1893" width="0.1366%" height="15" fill="rgb(213,79,30)" fg:x="30" fg:w="2"/><text x="2.2992%" y="1903.50"></text></g><g><title>dl_main (1 samples, 0.07%)</title><rect x="2.1175%" y="1877" width="0.0683%" height="15" fill="rgb(246,177,23)" fg:x="31" fg:w="1"/><text x="2.3675%" y="1887.50"></text></g><g><title>setup_vdso_pointers (1 samples, 0.07%)</title><rect x="2.1175%" y="1861" width="0.0683%" height="15" fill="rgb(230,62,27)" fg:x="31" fg:w="1"/><text x="2.3675%" y="1871.50"></text></g><g><title>dl_vdso_vsym (1 samples, 0.07%)</title><rect x="2.1175%" y="1845" width="0.0683%" height="15" fill="rgb(216,154,8)" fg:x="31" fg:w="1"/><text x="2.3675%" y="1855.50"></text></g><g><title>_dl_lookup_symbol_x (1 samples, 0.07%)</title><rect x="2.1175%" y="1829" width="0.0683%" height="15" fill="rgb(244,35,45)" fg:x="31" fg:w="1"/><text x="2.3675%" y="1839.50"></text></g><g><title>_start (13 samples, 0.89%)</title><rect x="1.4344%" y="1941" width="0.8880%" height="15" fill="rgb(251,115,12)" fg:x="21" fg:w="13"/><text x="1.6844%" y="1951.50"></text></g><g><title>_dl_start (6 samples, 0.41%)</title><rect x="1.9126%" y="1925" width="0.4098%" height="15" fill="rgb(240,54,50)" fg:x="28" fg:w="6"/><text x="2.1626%" y="1935.50"></text></g><g><title>rtld_timer_start (2 samples, 0.14%)</title><rect x="2.1858%" y="1909" width="0.1366%" height="15" fill="rgb(233,84,52)" fg:x="32" fg:w="2"/><text x="2.4358%" y="1919.50"></text></g><g><title>[unknown] (2 samples, 0.14%)</title><rect x="2.1858%" y="1893" width="0.1366%" height="15" fill="rgb(207,117,47)" fg:x="32" fg:w="2"/><text x="2.4358%" y="1903.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="2.2541%" y="1877" width="0.0683%" height="15" fill="rgb(249,43,39)" fg:x="33" fg:w="1"/><text x="2.5041%" y="1887.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="2.2541%" y="1861" width="0.0683%" height="15" fill="rgb(209,38,44)" fg:x="33" fg:w="1"/><text x="2.5041%" y="1871.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="2.2541%" y="1845" width="0.0683%" height="15" fill="rgb(236,212,23)" fg:x="33" fg:w="1"/><text x="2.5041%" y="1855.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="2.3224%" y="1925" width="0.0683%" height="15" fill="rgb(242,79,21)" fg:x="34" fg:w="1"/><text x="2.5724%" y="1935.50"></text></g><g><title>[unknown] (33 samples, 2.25%)</title><rect x="2.8689%" y="1909" width="2.2541%" height="15" fill="rgb(211,96,35)" fg:x="42" fg:w="33"/><text x="3.1189%" y="1919.50">[..</text></g><g><title>[unknown] (28 samples, 1.91%)</title><rect x="3.2104%" y="1893" width="1.9126%" height="15" fill="rgb(253,215,40)" fg:x="47" fg:w="28"/><text x="3.4604%" y="1903.50">[..</text></g><g><title>[unknown] (20 samples, 1.37%)</title><rect x="3.7568%" y="1877" width="1.3661%" height="15" fill="rgb(211,81,21)" fg:x="55" fg:w="20"/><text x="4.0068%" y="1887.50"></text></g><g><title>[unknown] (13 samples, 0.89%)</title><rect x="4.2350%" y="1861" width="0.8880%" height="15" fill="rgb(208,190,38)" fg:x="62" fg:w="13"/><text x="4.4850%" y="1871.50"></text></g><g><title>[unknown] (2 samples, 0.14%)</title><rect x="4.9863%" y="1845" width="0.1366%" height="15" fill="rgb(235,213,38)" fg:x="73" fg:w="2"/><text x="5.2363%" y="1855.50"></text></g><g><title>__ctype_init (2 samples, 0.14%)</title><rect x="5.1230%" y="1909" width="0.1366%" height="15" fill="rgb(237,122,38)" fg:x="75" fg:w="2"/><text x="5.3730%" y="1919.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="5.1913%" y="1893" width="0.0683%" height="15" fill="rgb(244,218,35)" fg:x="76" fg:w="1"/><text x="5.4413%" y="1903.50"></text></g><g><title>__sigsetjmp (2 samples, 0.14%)</title><rect x="5.2596%" y="1909" width="0.1366%" height="15" fill="rgb(240,68,47)" fg:x="77" fg:w="2"/><text x="5.5096%" y="1919.50"></text></g><g><title>_setjmp (4 samples, 0.27%)</title><rect x="5.3962%" y="1909" width="0.2732%" height="15" fill="rgb(210,16,53)" fg:x="79" fg:w="4"/><text x="5.6462%" y="1919.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="5.6011%" y="1893" width="0.0683%" height="15" fill="rgb(235,124,12)" fg:x="82" fg:w="1"/><text x="5.8511%" y="1903.50"></text></g><g><title>&lt;rayon_core::latch::LockLatch as rayon_core::latch::Latch&gt;::set (1 samples, 0.07%)</title><rect x="5.7377%" y="1685" width="0.0683%" height="15" fill="rgb(224,169,11)" fg:x="84" fg:w="1"/><text x="5.9877%" y="1695.50"></text></g><g><title>syscall (1 samples, 0.07%)</title><rect x="5.7377%" y="1669" width="0.0683%" height="15" fill="rgb(250,166,2)" fg:x="84" fg:w="1"/><text x="5.9877%" y="1679.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="5.7377%" y="1653" width="0.0683%" height="15" fill="rgb(242,216,29)" fg:x="84" fg:w="1"/><text x="5.9877%" y="1663.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="5.7377%" y="1637" width="0.0683%" height="15" fill="rgb(230,116,27)" fg:x="84" fg:w="1"/><text x="5.9877%" y="1647.50"></text></g><g><title>&lt;rayon_core::registry::WorkerThread as core::convert::From&lt;rayon_core::registry::ThreadBuilder&gt;&gt;::from (1 samples, 0.07%)</title><rect x="5.8060%" y="1685" width="0.0683%" height="15" fill="rgb(228,99,48)" fg:x="85" fg:w="1"/><text x="6.0560%" y="1695.50"></text></g><g><title>rayon_core::job::JobFifo::new (1 samples, 0.07%)</title><rect x="5.8060%" y="1669" width="0.0683%" height="15" fill="rgb(253,11,6)" fg:x="85" fg:w="1"/><text x="6.0560%" y="1679.50"></text></g><g><title>crossbeam_deque::deque::Injector&lt;T&gt;::new (1 samples, 0.07%)</title><rect x="5.8060%" y="1653" width="0.0683%" height="15" fill="rgb(247,143,39)" fg:x="85" fg:w="1"/><text x="6.0560%" y="1663.50"></text></g><g><title>&lt;crossbeam_deque::deque::Injector&lt;T&gt; as core::default::Default&gt;::default (1 samples, 0.07%)</title><rect x="5.8060%" y="1637" width="0.0683%" height="15" fill="rgb(236,97,10)" fg:x="85" fg:w="1"/><text x="6.0560%" y="1647.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1 samples, 0.07%)</title><rect x="5.8060%" y="1621" width="0.0683%" height="15" fill="rgb(233,208,19)" fg:x="85" fg:w="1"/><text x="6.0560%" y="1631.50"></text></g><g><title>malloc (1 samples, 0.07%)</title><rect x="5.8060%" y="1605" width="0.0683%" height="15" fill="rgb(216,164,2)" fg:x="85" fg:w="1"/><text x="6.0560%" y="1615.50"></text></g><g><title>_int_malloc (1 samples, 0.07%)</title><rect x="5.8060%" y="1589" width="0.0683%" height="15" fill="rgb(220,129,5)" fg:x="85" fg:w="1"/><text x="6.0560%" y="1599.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="5.8060%" y="1573" width="0.0683%" height="15" fill="rgb(242,17,10)" fg:x="85" fg:w="1"/><text x="6.0560%" y="1583.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (5 samples, 0.34%)</title><rect x="5.9426%" y="1589" width="0.3415%" height="15" fill="rgb(242,107,0)" fg:x="87" fg:w="5"/><text x="6.1926%" y="1599.50"></text></g><g><title>core::mem::replace (5 samples, 0.34%)</title><rect x="5.9426%" y="1573" width="0.3415%" height="15" fill="rgb(251,28,31)" fg:x="87" fg:w="5"/><text x="6.1926%" y="1583.50"></text></g><g><title>core::ptr::write (5 samples, 0.34%)</title><rect x="5.9426%" y="1557" width="0.3415%" height="15" fill="rgb(233,223,10)" fg:x="87" fg:w="5"/><text x="6.1926%" y="1567.50"></text></g><g><title>&lt;core::slice::iter::ChunksExactMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.20%)</title><rect x="6.8989%" y="1333" width="0.2049%" height="15" fill="rgb(215,21,27)" fg:x="101" fg:w="3"/><text x="7.1489%" y="1343.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut [T]&gt;::split_at_mut (1 samples, 0.07%)</title><rect x="7.0355%" y="1317" width="0.0683%" height="15" fill="rgb(232,23,21)" fg:x="103" fg:w="1"/><text x="7.2855%" y="1327.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut [T]&gt;::split_at_mut_unchecked (1 samples, 0.07%)</title><rect x="7.0355%" y="1301" width="0.0683%" height="15" fill="rgb(244,5,23)" fg:x="103" fg:w="1"/><text x="7.2855%" y="1311.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.07%)</title><rect x="7.0355%" y="1285" width="0.0683%" height="15" fill="rgb(226,81,46)" fg:x="103" fg:w="1"/><text x="7.2855%" y="1295.50"></text></g><g><title>core::ops::function::FnOnce::call_once (11 samples, 0.75%)</title><rect x="6.4208%" y="1381" width="0.7514%" height="15" fill="rgb(247,70,30)" fg:x="94" fg:w="11"/><text x="6.6708%" y="1391.50"></text></g><g><title>&lt;image::buffer_::EnumeratePixelsMut&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.75%)</title><rect x="6.4208%" y="1365" width="0.7514%" height="15" fill="rgb(212,68,19)" fg:x="94" fg:w="11"/><text x="6.6708%" y="1375.50"></text></g><g><title>&lt;image::buffer_::PixelsMut&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.27%)</title><rect x="6.8989%" y="1349" width="0.2732%" height="15" fill="rgb(240,187,13)" fg:x="101" fg:w="4"/><text x="7.1489%" y="1359.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.07%)</title><rect x="7.1038%" y="1333" width="0.0683%" height="15" fill="rgb(223,113,26)" fg:x="104" fg:w="1"/><text x="7.3538%" y="1343.50"></text></g><g><title>&lt;image::buffer_::PixelsMut&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next::_{{closure}} (1 samples, 0.07%)</title><rect x="7.1038%" y="1317" width="0.0683%" height="15" fill="rgb(206,192,2)" fg:x="104" fg:w="1"/><text x="7.3538%" y="1327.50"></text></g><g><title>&lt;image::color::Rgb&lt;T&gt; as image::traits::Pixel&gt;::from_slice_mut (1 samples, 0.07%)</title><rect x="7.1038%" y="1301" width="0.0683%" height="15" fill="rgb(241,108,4)" fg:x="104" fg:w="1"/><text x="7.3538%" y="1311.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.96%)</title><rect x="6.4208%" y="1429" width="0.9563%" height="15" fill="rgb(247,173,49)" fg:x="94" fg:w="14"/><text x="6.6708%" y="1439.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (14 samples, 0.96%)</title><rect x="6.4208%" y="1413" width="0.9563%" height="15" fill="rgb(224,114,35)" fg:x="94" fg:w="14"/><text x="6.6708%" y="1423.50"></text></g><g><title>core::iter::adapters::fuse::and_then_or_clear (14 samples, 0.96%)</title><rect x="6.4208%" y="1397" width="0.9563%" height="15" fill="rgb(245,159,27)" fg:x="94" fg:w="14"/><text x="6.6708%" y="1407.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (3 samples, 0.20%)</title><rect x="7.1721%" y="1381" width="0.2049%" height="15" fill="rgb(245,172,44)" fg:x="105" fg:w="3"/><text x="7.4221%" y="1391.50"></text></g><g><title>&lt;f64 as core::ops::arith::Add&gt;::add (3 samples, 0.20%)</title><rect x="11.1339%" y="1365" width="0.2049%" height="15" fill="rgb(236,23,11)" fg:x="163" fg:w="3"/><text x="11.3839%" y="1375.50"></text></g><g><title>&lt;num_complex::Complex&lt;T&gt; as core::ops::arith::Mul&gt;::mul (4 samples, 0.27%)</title><rect x="11.1339%" y="1381" width="0.2732%" height="15" fill="rgb(205,117,38)" fg:x="163" fg:w="4"/><text x="11.3839%" y="1391.50"></text></g><g><title>&lt;f64 as core::ops::arith::Mul&gt;::mul (1 samples, 0.07%)</title><rect x="11.3388%" y="1365" width="0.0683%" height="15" fill="rgb(237,72,25)" fg:x="166" fg:w="1"/><text x="11.5888%" y="1375.50"></text></g><g><title>[unknown] (2 samples, 0.14%)</title><rect x="11.4071%" y="1381" width="0.1366%" height="15" fill="rgb(244,70,9)" fg:x="167" fg:w="2"/><text x="11.6571%" y="1391.50"></text></g><g><title>[unknown] (2 samples, 0.14%)</title><rect x="11.4071%" y="1365" width="0.1366%" height="15" fill="rgb(217,125,39)" fg:x="167" fg:w="2"/><text x="11.6571%" y="1375.50"></text></g><g><title>[unknown] (2 samples, 0.14%)</title><rect x="11.4071%" y="1349" width="0.1366%" height="15" fill="rgb(235,36,10)" fg:x="167" fg:w="2"/><text x="11.6571%" y="1359.50"></text></g><g><title>[unknown] (2 samples, 0.14%)</title><rect x="11.4071%" y="1333" width="0.1366%" height="15" fill="rgb(251,123,47)" fg:x="167" fg:w="2"/><text x="11.6571%" y="1343.50"></text></g><g><title>[unknown] (2 samples, 0.14%)</title><rect x="11.4071%" y="1317" width="0.1366%" height="15" fill="rgb(221,13,13)" fg:x="167" fg:w="2"/><text x="11.6571%" y="1327.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="11.4754%" y="1301" width="0.0683%" height="15" fill="rgb(238,131,9)" fg:x="168" fg:w="1"/><text x="11.7254%" y="1311.50"></text></g><g><title>num_complex::Complex&lt;T&gt;::norm (88 samples, 6.01%)</title><rect x="11.5437%" y="1381" width="6.0109%" height="15" fill="rgb(211,50,8)" fg:x="169" fg:w="88"/><text x="11.7937%" y="1391.50">num_comp..</text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::hypot (88 samples, 6.01%)</title><rect x="11.5437%" y="1365" width="6.0109%" height="15" fill="rgb(245,182,24)" fg:x="169" fg:w="88"/><text x="11.7937%" y="1375.50">&lt;f64 as ..</text></g><g><title>std::f64::&lt;impl f64&gt;::hypot (88 samples, 6.01%)</title><rect x="11.5437%" y="1349" width="6.0109%" height="15" fill="rgb(242,14,37)" fg:x="169" fg:w="88"/><text x="11.7937%" y="1359.50">std::f64..</text></g><g><title>hypot (88 samples, 6.01%)</title><rect x="11.5437%" y="1333" width="6.0109%" height="15" fill="rgb(246,228,12)" fg:x="169" fg:w="88"/><text x="11.7937%" y="1343.50">hypot</text></g><g><title>[libm.so.6] (76 samples, 5.19%)</title><rect x="18.7158%" y="1349" width="5.1913%" height="15" fill="rgb(213,55,15)" fg:x="274" fg:w="76"/><text x="18.9658%" y="1359.50">[libm...</text></g><g><title>[unknown] (3 samples, 0.20%)</title><rect x="23.7022%" y="1333" width="0.2049%" height="15" fill="rgb(209,9,3)" fg:x="347" fg:w="3"/><text x="23.9522%" y="1343.50"></text></g><g><title>[unknown] (3 samples, 0.20%)</title><rect x="23.7022%" y="1317" width="0.2049%" height="15" fill="rgb(230,59,30)" fg:x="347" fg:w="3"/><text x="23.9522%" y="1327.50"></text></g><g><title>[unknown] (3 samples, 0.20%)</title><rect x="23.7022%" y="1301" width="0.2049%" height="15" fill="rgb(209,121,21)" fg:x="347" fg:w="3"/><text x="23.9522%" y="1311.50"></text></g><g><title>[unknown] (2 samples, 0.14%)</title><rect x="23.7705%" y="1285" width="0.1366%" height="15" fill="rgb(220,109,13)" fg:x="348" fg:w="2"/><text x="24.0205%" y="1295.50"></text></g><g><title>[unknown] (2 samples, 0.14%)</title><rect x="23.7705%" y="1269" width="0.1366%" height="15" fill="rgb(232,18,1)" fg:x="348" fg:w="2"/><text x="24.0205%" y="1279.50"></text></g><g><title>[unknown] (2 samples, 0.14%)</title><rect x="23.7705%" y="1253" width="0.1366%" height="15" fill="rgb(215,41,42)" fg:x="348" fg:w="2"/><text x="24.0205%" y="1263.50"></text></g><g><title>&lt;rayon::iter::for_each::ForEachConsumer&lt;F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume (246 samples, 16.80%)</title><rect x="7.3770%" y="1429" width="16.8033%" height="15" fill="rgb(224,123,36)" fg:x="108" fg:w="246"/><text x="7.6270%" y="1439.50">&lt;rayon::iter::for_each::Fo..</text></g><g><title>julia::generate_image_buffer::_{{closure}} (245 samples, 16.73%)</title><rect x="7.4454%" y="1413" width="16.7350%" height="15" fill="rgb(240,125,3)" fg:x="109" fg:w="245"/><text x="7.6954%" y="1423.50">julia::generate_image_buff..</text></g><g><title>julia::color_generator (222 samples, 15.16%)</title><rect x="9.0164%" y="1397" width="15.1639%" height="15" fill="rgb(205,98,50)" fg:x="132" fg:w="222"/><text x="9.2664%" y="1407.50">julia::color_generator</text></g><g><title>std::f64::&lt;impl f64&gt;::powf (97 samples, 6.63%)</title><rect x="17.5546%" y="1381" width="6.6257%" height="15" fill="rgb(205,185,37)" fg:x="257" fg:w="97"/><text x="17.8046%" y="1391.50">std::f64:..</text></g><g><title>pow (96 samples, 6.56%)</title><rect x="17.6230%" y="1365" width="6.5574%" height="15" fill="rgb(238,207,15)" fg:x="258" fg:w="96"/><text x="17.8730%" y="1375.50">pow</text></g><g><title>__pow_finite@plt (4 samples, 0.27%)</title><rect x="23.9071%" y="1349" width="0.2732%" height="15" fill="rgb(213,199,42)" fg:x="350" fg:w="4"/><text x="24.1571%" y="1359.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="27.7322%" y="1365" width="0.0683%" height="15" fill="rgb(235,201,11)" fg:x="406" fg:w="1"/><text x="27.9822%" y="1375.50"></text></g><g><title>core::bool::&lt;impl bool&gt;::then (1 samples, 0.07%)</title><rect x="27.8005%" y="1333" width="0.0683%" height="15" fill="rgb(207,46,11)" fg:x="407" fg:w="1"/><text x="28.0505%" y="1343.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.07%)</title><rect x="27.8005%" y="1317" width="0.0683%" height="15" fill="rgb(241,35,35)" fg:x="407" fg:w="1"/><text x="28.0505%" y="1327.50"></text></g><g><title>std::sys::pal::unix::os::errno (1 samples, 0.07%)</title><rect x="27.8005%" y="1301" width="0.0683%" height="15" fill="rgb(243,32,47)" fg:x="407" fg:w="1"/><text x="28.0505%" y="1311.50"></text></g><g><title>syscall (1 samples, 0.07%)</title><rect x="27.8005%" y="1285" width="0.0683%" height="15" fill="rgb(247,202,23)" fg:x="407" fg:w="1"/><text x="28.0505%" y="1295.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="27.8005%" y="1269" width="0.0683%" height="15" fill="rgb(219,102,11)" fg:x="407" fg:w="1"/><text x="28.0505%" y="1279.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock_contended (2 samples, 0.14%)</title><rect x="27.8005%" y="1365" width="0.1366%" height="15" fill="rgb(243,110,44)" fg:x="407" fg:w="2"/><text x="28.0505%" y="1375.50"></text></g><g><title>std::sys::pal::unix::futex::futex_wait (2 samples, 0.14%)</title><rect x="27.8005%" y="1349" width="0.1366%" height="15" fill="rgb(222,74,54)" fg:x="407" fg:w="2"/><text x="28.0505%" y="1359.50"></text></g><g><title>syscall (1 samples, 0.07%)</title><rect x="27.8689%" y="1333" width="0.0683%" height="15" fill="rgb(216,99,12)" fg:x="408" fg:w="1"/><text x="28.1189%" y="1343.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="27.8689%" y="1317" width="0.0683%" height="15" fill="rgb(226,22,26)" fg:x="408" fg:w="1"/><text x="28.1189%" y="1327.50"></text></g><g><title>core::mem::drop (306 samples, 20.90%)</title><rect x="24.1803%" y="1429" width="20.9016%" height="15" fill="rgb(217,163,10)" fg:x="354" fg:w="306"/><text x="24.4303%" y="1439.50">core::mem::drop</text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;core::iter::adapters::fuse::Fuse&lt;image::buffer_::EnumeratePixelsMut&lt;image::color::Rgb&lt;u8&gt;&gt;&gt;&gt;&gt; (306 samples, 20.90%)</title><rect x="24.1803%" y="1413" width="20.9016%" height="15" fill="rgb(213,25,53)" fg:x="354" fg:w="306"/><text x="24.4303%" y="1423.50">core::ptr::drop_in_place&lt;std::syn..</text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (306 samples, 20.90%)</title><rect x="24.1803%" y="1397" width="20.9016%" height="15" fill="rgb(252,105,26)" fg:x="354" fg:w="306"/><text x="24.4303%" y="1407.50">&lt;std::sync::mutex::MutexGuard&lt;T&gt; ..</text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (306 samples, 20.90%)</title><rect x="24.1803%" y="1381" width="20.9016%" height="15" fill="rgb(220,39,43)" fg:x="354" fg:w="306"/><text x="24.4303%" y="1391.50">std::sys::sync::mutex::futex::Mut..</text></g><g><title>syscall (251 samples, 17.14%)</title><rect x="27.9372%" y="1365" width="17.1448%" height="15" fill="rgb(229,68,48)" fg:x="409" fg:w="251"/><text x="28.1872%" y="1375.50">syscall</text></g><g><title>[unknown] (249 samples, 17.01%)</title><rect x="28.0738%" y="1349" width="17.0082%" height="15" fill="rgb(252,8,32)" fg:x="411" fg:w="249"/><text x="28.3238%" y="1359.50">[unknown]</text></g><g><title>[unknown] (236 samples, 16.12%)</title><rect x="28.9617%" y="1333" width="16.1202%" height="15" fill="rgb(223,20,43)" fg:x="424" fg:w="236"/><text x="29.2117%" y="1343.50">[unknown]</text></g><g><title>[unknown] (230 samples, 15.71%)</title><rect x="29.3716%" y="1317" width="15.7104%" height="15" fill="rgb(229,81,49)" fg:x="430" fg:w="230"/><text x="29.6216%" y="1327.50">[unknown]</text></g><g><title>[unknown] (215 samples, 14.69%)</title><rect x="30.3962%" y="1301" width="14.6858%" height="15" fill="rgb(236,28,36)" fg:x="445" fg:w="215"/><text x="30.6462%" y="1311.50">[unknown]</text></g><g><title>[unknown] (208 samples, 14.21%)</title><rect x="30.8743%" y="1285" width="14.2077%" height="15" fill="rgb(249,185,26)" fg:x="452" fg:w="208"/><text x="31.1243%" y="1295.50">[unknown]</text></g><g><title>[unknown] (157 samples, 10.72%)</title><rect x="34.3579%" y="1269" width="10.7240%" height="15" fill="rgb(249,174,33)" fg:x="503" fg:w="157"/><text x="34.6079%" y="1279.50">[unknown]</text></g><g><title>[unknown] (126 samples, 8.61%)</title><rect x="36.4754%" y="1253" width="8.6066%" height="15" fill="rgb(233,201,37)" fg:x="534" fg:w="126"/><text x="36.7254%" y="1263.50">[unknown]</text></g><g><title>[unknown] (2 samples, 0.14%)</title><rect x="44.9454%" y="1237" width="0.1366%" height="15" fill="rgb(221,78,26)" fg:x="658" fg:w="2"/><text x="45.1954%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;core::iter::adapters::fuse::Fuse&lt;image::buffer_::EnumeratePixelsMut&lt;image::color::Rgb&lt;u8&gt;&gt;&gt;&gt;&gt; (1 samples, 0.07%)</title><rect x="45.0820%" y="1429" width="0.0683%" height="15" fill="rgb(250,127,30)" fg:x="660" fg:w="1"/><text x="45.3320%" y="1439.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.07%)</title><rect x="45.0820%" y="1413" width="0.0683%" height="15" fill="rgb(230,49,44)" fg:x="660" fg:w="1"/><text x="45.3320%" y="1423.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (1 samples, 0.07%)</title><rect x="45.0820%" y="1397" width="0.0683%" height="15" fill="rgb(229,67,23)" fg:x="660" fg:w="1"/><text x="45.3320%" y="1407.50"></text></g><g><title>syscall (1 samples, 0.07%)</title><rect x="45.0820%" y="1381" width="0.0683%" height="15" fill="rgb(249,83,47)" fg:x="660" fg:w="1"/><text x="45.3320%" y="1391.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="45.0820%" y="1365" width="0.0683%" height="15" fill="rgb(215,43,3)" fg:x="660" fg:w="1"/><text x="45.3320%" y="1375.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="45.0820%" y="1349" width="0.0683%" height="15" fill="rgb(238,154,13)" fg:x="660" fg:w="1"/><text x="45.3320%" y="1359.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="45.0820%" y="1333" width="0.0683%" height="15" fill="rgb(219,56,2)" fg:x="660" fg:w="1"/><text x="45.3320%" y="1343.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="45.0820%" y="1317" width="0.0683%" height="15" fill="rgb(233,0,4)" fg:x="660" fg:w="1"/><text x="45.3320%" y="1327.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="45.0820%" y="1301" width="0.0683%" height="15" fill="rgb(235,30,7)" fg:x="660" fg:w="1"/><text x="45.3320%" y="1311.50"></text></g><g><title>std::sync::poison::Flag::guard (14 samples, 0.96%)</title><rect x="45.1503%" y="1397" width="0.9563%" height="15" fill="rgb(250,79,13)" fg:x="661" fg:w="14"/><text x="45.4003%" y="1407.50"></text></g><g><title>std::thread::panicking (5 samples, 0.34%)</title><rect x="45.7650%" y="1381" width="0.3415%" height="15" fill="rgb(211,146,34)" fg:x="670" fg:w="5"/><text x="46.0150%" y="1391.50"></text></g><g><title>std::panicking::panicking (5 samples, 0.34%)</title><rect x="45.7650%" y="1365" width="0.3415%" height="15" fill="rgb(228,22,38)" fg:x="670" fg:w="5"/><text x="46.0150%" y="1375.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (5 samples, 0.34%)</title><rect x="45.7650%" y="1349" width="0.3415%" height="15" fill="rgb(235,168,5)" fg:x="670" fg:w="5"/><text x="46.0150%" y="1359.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (4 samples, 0.27%)</title><rect x="45.8333%" y="1333" width="0.2732%" height="15" fill="rgb(221,155,16)" fg:x="671" fg:w="4"/><text x="46.0833%" y="1343.50"></text></g><g><title>core::sync::atomic::atomic_load (4 samples, 0.27%)</title><rect x="45.8333%" y="1317" width="0.2732%" height="15" fill="rgb(215,215,53)" fg:x="671" fg:w="4"/><text x="46.0833%" y="1327.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (17 samples, 1.16%)</title><rect x="45.1503%" y="1413" width="1.1612%" height="15" fill="rgb(223,4,10)" fg:x="661" fg:w="17"/><text x="45.4003%" y="1423.50"></text></g><g><title>std::sync::poison::map_result (3 samples, 0.20%)</title><rect x="46.1066%" y="1397" width="0.2049%" height="15" fill="rgb(234,103,6)" fg:x="675" fg:w="3"/><text x="46.3566%" y="1407.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="46.5164%" y="1397" width="0.0683%" height="15" fill="rgb(227,97,0)" fg:x="681" fg:w="1"/><text x="46.7664%" y="1407.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="46.5164%" y="1381" width="0.0683%" height="15" fill="rgb(234,150,53)" fg:x="681" fg:w="1"/><text x="46.7664%" y="1391.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="46.5164%" y="1365" width="0.0683%" height="15" fill="rgb(228,201,54)" fg:x="681" fg:w="1"/><text x="46.7664%" y="1375.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_err (52 samples, 3.55%)</title><rect x="46.5847%" y="1397" width="3.5519%" height="15" fill="rgb(222,22,37)" fg:x="682" fg:w="52"/><text x="46.8347%" y="1407.50">core..</text></g><g><title>core::result::Result&lt;T,E&gt;::is_ok (52 samples, 3.55%)</title><rect x="46.5847%" y="1381" width="3.5519%" height="15" fill="rgb(237,53,32)" fg:x="682" fg:w="52"/><text x="46.8347%" y="1391.50">core..</text></g><g><title>[unknown] (4 samples, 0.27%)</title><rect x="53.9617%" y="1381" width="0.2732%" height="15" fill="rgb(233,25,53)" fg:x="790" fg:w="4"/><text x="54.2117%" y="1391.50"></text></g><g><title>[unknown] (3 samples, 0.20%)</title><rect x="54.0301%" y="1365" width="0.2049%" height="15" fill="rgb(210,40,34)" fg:x="791" fg:w="3"/><text x="54.2801%" y="1375.50"></text></g><g><title>[unknown] (2 samples, 0.14%)</title><rect x="54.0984%" y="1349" width="0.1366%" height="15" fill="rgb(241,220,44)" fg:x="792" fg:w="2"/><text x="54.3484%" y="1359.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="54.1667%" y="1333" width="0.0683%" height="15" fill="rgb(235,28,35)" fg:x="793" fg:w="1"/><text x="54.4167%" y="1343.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (2 samples, 0.14%)</title><rect x="54.2350%" y="1381" width="0.1366%" height="15" fill="rgb(210,56,17)" fg:x="794" fg:w="2"/><text x="54.4850%" y="1391.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (2 samples, 0.14%)</title><rect x="54.2350%" y="1365" width="0.1366%" height="15" fill="rgb(224,130,29)" fg:x="794" fg:w="2"/><text x="54.4850%" y="1375.50"></text></g><g><title>[unknown] (2 samples, 0.14%)</title><rect x="56.4891%" y="1365" width="0.1366%" height="15" fill="rgb(235,212,8)" fg:x="827" fg:w="2"/><text x="56.7391%" y="1375.50"></text></g><g><title>[unknown] (2 samples, 0.14%)</title><rect x="56.4891%" y="1349" width="0.1366%" height="15" fill="rgb(223,33,50)" fg:x="827" fg:w="2"/><text x="56.7391%" y="1359.50"></text></g><g><title>[unknown] (2 samples, 0.14%)</title><rect x="56.4891%" y="1333" width="0.1366%" height="15" fill="rgb(219,149,13)" fg:x="827" fg:w="2"/><text x="56.7391%" y="1343.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="56.5574%" y="1317" width="0.0683%" height="15" fill="rgb(250,156,29)" fg:x="828" fg:w="1"/><text x="56.8074%" y="1327.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (2 samples, 0.14%)</title><rect x="56.6257%" y="1365" width="0.1366%" height="15" fill="rgb(216,193,19)" fg:x="829" fg:w="2"/><text x="56.8757%" y="1375.50"></text></g><g><title>core::sync::atomic::atomic_load (2 samples, 0.14%)</title><rect x="56.6257%" y="1349" width="0.1366%" height="15" fill="rgb(216,135,14)" fg:x="829" fg:w="2"/><text x="56.8757%" y="1359.50"></text></g><g><title>std::sys::pal::unix::futex::futex_wait (251 samples, 17.14%)</title><rect x="54.3716%" y="1381" width="17.1448%" height="15" fill="rgb(241,47,5)" fg:x="796" fg:w="251"/><text x="54.6216%" y="1391.50">std::sys::pal::unix::futex:..</text></g><g><title>syscall (216 samples, 14.75%)</title><rect x="56.7623%" y="1365" width="14.7541%" height="15" fill="rgb(233,42,35)" fg:x="831" fg:w="216"/><text x="57.0123%" y="1375.50">syscall</text></g><g><title>[unknown] (214 samples, 14.62%)</title><rect x="56.8989%" y="1349" width="14.6175%" height="15" fill="rgb(231,13,6)" fg:x="833" fg:w="214"/><text x="57.1489%" y="1359.50">[unknown]</text></g><g><title>[unknown] (210 samples, 14.34%)</title><rect x="57.1721%" y="1333" width="14.3443%" height="15" fill="rgb(207,181,40)" fg:x="837" fg:w="210"/><text x="57.4221%" y="1343.50">[unknown]</text></g><g><title>[unknown] (203 samples, 13.87%)</title><rect x="57.6503%" y="1317" width="13.8661%" height="15" fill="rgb(254,173,49)" fg:x="844" fg:w="203"/><text x="57.9003%" y="1327.50">[unknown]</text></g><g><title>[unknown] (195 samples, 13.32%)</title><rect x="58.1967%" y="1301" width="13.3197%" height="15" fill="rgb(221,1,38)" fg:x="852" fg:w="195"/><text x="58.4467%" y="1311.50">[unknown]</text></g><g><title>[unknown] (192 samples, 13.11%)</title><rect x="58.4016%" y="1285" width="13.1148%" height="15" fill="rgb(206,124,46)" fg:x="855" fg:w="192"/><text x="58.6516%" y="1295.50">[unknown]</text></g><g><title>[unknown] (177 samples, 12.09%)</title><rect x="59.4262%" y="1269" width="12.0902%" height="15" fill="rgb(249,21,11)" fg:x="870" fg:w="177"/><text x="59.6762%" y="1279.50">[unknown]</text></g><g><title>[unknown] (164 samples, 11.20%)</title><rect x="60.3142%" y="1253" width="11.2022%" height="15" fill="rgb(222,201,40)" fg:x="883" fg:w="164"/><text x="60.5642%" y="1263.50">[unknown]</text></g><g><title>[unknown] (156 samples, 10.66%)</title><rect x="60.8607%" y="1237" width="10.6557%" height="15" fill="rgb(235,61,29)" fg:x="891" fg:w="156"/><text x="61.1107%" y="1247.50">[unknown]</text></g><g><title>[unknown] (98 samples, 6.69%)</title><rect x="64.8224%" y="1221" width="6.6940%" height="15" fill="rgb(219,207,3)" fg:x="949" fg:w="98"/><text x="65.0724%" y="1231.50">[unknown]</text></g><g><title>[unknown] (61 samples, 4.17%)</title><rect x="67.3497%" y="1205" width="4.1667%" height="15" fill="rgb(222,56,46)" fg:x="986" fg:w="61"/><text x="67.5997%" y="1215.50">[unkn..</text></g><g><title>[unknown] (6 samples, 0.41%)</title><rect x="79.5765%" y="1365" width="0.4098%" height="15" fill="rgb(239,76,54)" fg:x="1165" fg:w="6"/><text x="79.8265%" y="1375.50"></text></g><g><title>[unknown] (6 samples, 0.41%)</title><rect x="79.5765%" y="1349" width="0.4098%" height="15" fill="rgb(231,124,27)" fg:x="1165" fg:w="6"/><text x="79.8265%" y="1359.50"></text></g><g><title>[unknown] (5 samples, 0.34%)</title><rect x="79.6448%" y="1333" width="0.3415%" height="15" fill="rgb(249,195,6)" fg:x="1166" fg:w="5"/><text x="79.8948%" y="1343.50"></text></g><g><title>[unknown] (4 samples, 0.27%)</title><rect x="79.7131%" y="1317" width="0.2732%" height="15" fill="rgb(237,174,47)" fg:x="1167" fg:w="4"/><text x="79.9631%" y="1327.50"></text></g><g><title>[unknown] (4 samples, 0.27%)</title><rect x="79.7131%" y="1301" width="0.2732%" height="15" fill="rgb(206,201,31)" fg:x="1167" fg:w="4"/><text x="79.9631%" y="1311.50"></text></g><g><title>[unknown] (4 samples, 0.27%)</title><rect x="79.7131%" y="1285" width="0.2732%" height="15" fill="rgb(231,57,52)" fg:x="1167" fg:w="4"/><text x="79.9631%" y="1295.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock_contended (447 samples, 30.53%)</title><rect x="50.1366%" y="1397" width="30.5328%" height="15" fill="rgb(248,177,22)" fg:x="734" fg:w="447"/><text x="50.3866%" y="1407.50">std::sys::sync::mutex::futex::Mutex::lock_contend..</text></g><g><title>std::sys::sync::mutex::futex::Mutex::spin (134 samples, 9.15%)</title><rect x="71.5164%" y="1381" width="9.1530%" height="15" fill="rgb(215,211,37)" fg:x="1047" fg:w="134"/><text x="71.7664%" y="1391.50">std::sys::syn..</text></g><g><title>core::sync::atomic::AtomicU32::load (10 samples, 0.68%)</title><rect x="79.9863%" y="1365" width="0.6831%" height="15" fill="rgb(241,128,51)" fg:x="1171" fg:w="10"/><text x="80.2363%" y="1375.50"></text></g><g><title>core::sync::atomic::atomic_load (10 samples, 0.68%)</title><rect x="79.9863%" y="1349" width="0.6831%" height="15" fill="rgb(227,165,31)" fg:x="1171" fg:w="10"/><text x="80.2363%" y="1359.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (529 samples, 36.13%)</title><rect x="45.1503%" y="1429" width="36.1339%" height="15" fill="rgb(228,167,24)" fg:x="661" fg:w="529"/><text x="45.4003%" y="1439.50">std::sync::mutex::Mutex&lt;T&gt;::lock</text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (512 samples, 34.97%)</title><rect x="46.3115%" y="1413" width="34.9727%" height="15" fill="rgb(228,143,12)" fg:x="678" fg:w="512"/><text x="46.5615%" y="1423.50">std::sys::sync::mutex::futex::Mutex::lock</text></g><g><title>syscall (9 samples, 0.61%)</title><rect x="80.6694%" y="1397" width="0.6148%" height="15" fill="rgb(249,149,8)" fg:x="1181" fg:w="9"/><text x="80.9194%" y="1407.50"></text></g><g><title>[unknown] (9 samples, 0.61%)</title><rect x="80.6694%" y="1381" width="0.6148%" height="15" fill="rgb(243,35,44)" fg:x="1181" fg:w="9"/><text x="80.9194%" y="1391.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock_contended (1 samples, 0.07%)</title><rect x="81.2842%" y="1429" width="0.0683%" height="15" fill="rgb(246,89,9)" fg:x="1190" fg:w="1"/><text x="81.5342%" y="1439.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::spin (1 samples, 0.07%)</title><rect x="81.2842%" y="1413" width="0.0683%" height="15" fill="rgb(233,213,13)" fg:x="1190" fg:w="1"/><text x="81.5342%" y="1423.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (1 samples, 0.07%)</title><rect x="81.2842%" y="1397" width="0.0683%" height="15" fill="rgb(233,141,41)" fg:x="1190" fg:w="1"/><text x="81.5342%" y="1407.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.07%)</title><rect x="81.2842%" y="1381" width="0.0683%" height="15" fill="rgb(239,167,4)" fg:x="1190" fg:w="1"/><text x="81.5342%" y="1391.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="81.2842%" y="1365" width="0.0683%" height="15" fill="rgb(209,217,16)" fg:x="1190" fg:w="1"/><text x="81.5342%" y="1375.50"></text></g><g><title>&lt;&amp;rayon::iter::par_bridge::IterParallelProducer&lt;Iter&gt; as rayon::iter::plumbing::UnindexedProducer&gt;::fold_with (1,100 samples, 75.14%)</title><rect x="6.2842%" y="1445" width="75.1366%" height="15" fill="rgb(219,88,35)" fg:x="92" fg:w="1100"/><text x="6.5342%" y="1455.50">&lt;&amp;rayon::iter::par_bridge::IterParallelProducer&lt;Iter&gt; as rayon::iter::plumbing::UnindexedProducer&gt;::fold_with</text></g><g><title>syscall (1 samples, 0.07%)</title><rect x="81.3525%" y="1429" width="0.0683%" height="15" fill="rgb(220,193,23)" fg:x="1191" fg:w="1"/><text x="81.6025%" y="1439.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="81.3525%" y="1413" width="0.0683%" height="15" fill="rgb(230,90,52)" fg:x="1191" fg:w="1"/><text x="81.6025%" y="1423.50"></text></g><g><title>&lt;&amp;rayon::iter::par_bridge::IterParallelProducer&lt;Iter&gt; as rayon::iter::plumbing::UnindexedProducer&gt;::split (1 samples, 0.07%)</title><rect x="81.4208%" y="1429" width="0.0683%" height="15" fill="rgb(252,106,19)" fg:x="1192" fg:w="1"/><text x="81.6708%" y="1439.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_update (1 samples, 0.07%)</title><rect x="81.4208%" y="1413" width="0.0683%" height="15" fill="rgb(206,74,20)" fg:x="1192" fg:w="1"/><text x="81.6708%" y="1423.50"></text></g><g><title>&lt;&amp;rayon::iter::par_bridge::IterParallelProducer&lt;Iter&gt; as rayon::iter::plumbing::UnindexedProducer&gt;::split::_{{closure}} (1 samples, 0.07%)</title><rect x="81.4208%" y="1397" width="0.0683%" height="15" fill="rgb(230,138,44)" fg:x="1192" fg:w="1"/><text x="81.6708%" y="1407.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_sub (1 samples, 0.07%)</title><rect x="81.4208%" y="1381" width="0.0683%" height="15" fill="rgb(235,182,43)" fg:x="1192" fg:w="1"/><text x="81.6708%" y="1391.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_sub (1 samples, 0.07%)</title><rect x="81.4208%" y="1365" width="0.0683%" height="15" fill="rgb(242,16,51)" fg:x="1192" fg:w="1"/><text x="81.6708%" y="1375.50"></text></g><g><title>rayon::iter::plumbing::Splitter::try_split (1 samples, 0.07%)</title><rect x="81.4891%" y="1429" width="0.0683%" height="15" fill="rgb(248,9,4)" fg:x="1193" fg:w="1"/><text x="81.7391%" y="1439.50"></text></g><g><title>rayon_core::current_num_threads (1 samples, 0.07%)</title><rect x="81.4891%" y="1413" width="0.0683%" height="15" fill="rgb(210,31,22)" fg:x="1193" fg:w="1"/><text x="81.7391%" y="1423.50"></text></g><g><title>rayon_core::registry::Registry::current_num_threads (1 samples, 0.07%)</title><rect x="81.4891%" y="1397" width="0.0683%" height="15" fill="rgb(239,54,39)" fg:x="1193" fg:w="1"/><text x="81.7391%" y="1407.50"></text></g><g><title>rayon_core::registry::WorkerThread::current (1 samples, 0.07%)</title><rect x="81.4891%" y="1381" width="0.0683%" height="15" fill="rgb(230,99,41)" fg:x="1193" fg:w="1"/><text x="81.7391%" y="1391.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.07%)</title><rect x="81.4891%" y="1365" width="0.0683%" height="15" fill="rgb(253,106,12)" fg:x="1193" fg:w="1"/><text x="81.7391%" y="1375.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.07%)</title><rect x="81.4891%" y="1349" width="0.0683%" height="15" fill="rgb(213,46,41)" fg:x="1193" fg:w="1"/><text x="81.7391%" y="1359.50"></text></g><g><title>rayon_core::registry::WorkerThread::push (1 samples, 0.07%)</title><rect x="81.5574%" y="1029" width="0.0683%" height="15" fill="rgb(215,133,35)" fg:x="1194" fg:w="1"/><text x="81.8074%" y="1039.50"></text></g><g><title>crossbeam_deque::deque::Worker&lt;T&gt;::push (1 samples, 0.07%)</title><rect x="81.5574%" y="1013" width="0.0683%" height="15" fill="rgb(213,28,5)" fg:x="1194" fg:w="1"/><text x="81.8074%" y="1023.50"></text></g><g><title>crossbeam_deque::deque::Buffer&lt;T&gt;::write (1 samples, 0.07%)</title><rect x="81.5574%" y="997" width="0.0683%" height="15" fill="rgb(215,77,49)" fg:x="1194" fg:w="1"/><text x="81.8074%" y="1007.50"></text></g><g><title>core::ptr::write_volatile (1 samples, 0.07%)</title><rect x="81.5574%" y="981" width="0.0683%" height="15" fill="rgb(248,100,22)" fg:x="1194" fg:w="1"/><text x="81.8074%" y="991.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="81.6257%" y="901" width="0.0683%" height="15" fill="rgb(208,67,9)" fg:x="1195" fg:w="1"/><text x="81.8757%" y="911.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (1 samples, 0.07%)</title><rect x="81.6257%" y="885" width="0.0683%" height="15" fill="rgb(219,133,21)" fg:x="1195" fg:w="1"/><text x="81.8757%" y="895.50"></text></g><g><title>core::iter::adapters::fuse::and_then_or_clear (1 samples, 0.07%)</title><rect x="81.6257%" y="869" width="0.0683%" height="15" fill="rgb(246,46,29)" fg:x="1195" fg:w="1"/><text x="81.8757%" y="879.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.07%)</title><rect x="81.6257%" y="853" width="0.0683%" height="15" fill="rgb(246,185,52)" fg:x="1195" fg:w="1"/><text x="81.8757%" y="863.50"></text></g><g><title>&lt;image::buffer_::EnumeratePixelsMut&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="81.6257%" y="837" width="0.0683%" height="15" fill="rgb(252,136,11)" fg:x="1195" fg:w="1"/><text x="81.8757%" y="847.50"></text></g><g><title>num_complex::Complex&lt;T&gt;::norm (10 samples, 0.68%)</title><rect x="81.9672%" y="853" width="0.6831%" height="15" fill="rgb(219,138,53)" fg:x="1200" fg:w="10"/><text x="82.2172%" y="863.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::hypot (10 samples, 0.68%)</title><rect x="81.9672%" y="837" width="0.6831%" height="15" fill="rgb(211,51,23)" fg:x="1200" fg:w="10"/><text x="82.2172%" y="847.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::hypot (10 samples, 0.68%)</title><rect x="81.9672%" y="821" width="0.6831%" height="15" fill="rgb(247,221,28)" fg:x="1200" fg:w="10"/><text x="82.2172%" y="831.50"></text></g><g><title>hypot (8 samples, 0.55%)</title><rect x="82.1038%" y="805" width="0.5464%" height="15" fill="rgb(251,222,45)" fg:x="1202" fg:w="8"/><text x="82.3538%" y="815.50"></text></g><g><title>&lt;rayon::iter::for_each::ForEachConsumer&lt;F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume (25 samples, 1.71%)</title><rect x="81.6940%" y="901" width="1.7077%" height="15" fill="rgb(217,162,53)" fg:x="1196" fg:w="25"/><text x="81.9440%" y="911.50"></text></g><g><title>julia::generate_image_buffer::_{{closure}} (24 samples, 1.64%)</title><rect x="81.7623%" y="885" width="1.6393%" height="15" fill="rgb(229,93,14)" fg:x="1197" fg:w="24"/><text x="82.0123%" y="895.50"></text></g><g><title>julia::color_generator (23 samples, 1.57%)</title><rect x="81.8306%" y="869" width="1.5710%" height="15" fill="rgb(209,67,49)" fg:x="1198" fg:w="23"/><text x="82.0806%" y="879.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::powf (11 samples, 0.75%)</title><rect x="82.6503%" y="853" width="0.7514%" height="15" fill="rgb(213,87,29)" fg:x="1210" fg:w="11"/><text x="82.9003%" y="863.50"></text></g><g><title>pow (11 samples, 0.75%)</title><rect x="82.6503%" y="837" width="0.7514%" height="15" fill="rgb(205,151,52)" fg:x="1210" fg:w="11"/><text x="82.9003%" y="847.50"></text></g><g><title>[libm.so.6] (11 samples, 0.75%)</title><rect x="82.6503%" y="821" width="0.7514%" height="15" fill="rgb(253,215,39)" fg:x="1210" fg:w="11"/><text x="82.9003%" y="831.50"></text></g><g><title>core::bool::&lt;impl bool&gt;::then (1 samples, 0.07%)</title><rect x="83.8115%" y="805" width="0.0683%" height="15" fill="rgb(221,220,41)" fg:x="1227" fg:w="1"/><text x="84.0615%" y="815.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.07%)</title><rect x="83.8115%" y="789" width="0.0683%" height="15" fill="rgb(218,133,21)" fg:x="1227" fg:w="1"/><text x="84.0615%" y="799.50"></text></g><g><title>std::sys::pal::unix::os::errno (1 samples, 0.07%)</title><rect x="83.8115%" y="773" width="0.0683%" height="15" fill="rgb(221,193,43)" fg:x="1227" fg:w="1"/><text x="84.0615%" y="783.50"></text></g><g><title>syscall (1 samples, 0.07%)</title><rect x="83.8115%" y="757" width="0.0683%" height="15" fill="rgb(240,128,52)" fg:x="1227" fg:w="1"/><text x="84.0615%" y="767.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="83.8115%" y="741" width="0.0683%" height="15" fill="rgb(253,114,12)" fg:x="1227" fg:w="1"/><text x="84.0615%" y="751.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock_contended (2 samples, 0.14%)</title><rect x="83.8115%" y="837" width="0.1366%" height="15" fill="rgb(215,223,47)" fg:x="1227" fg:w="2"/><text x="84.0615%" y="847.50"></text></g><g><title>std::sys::pal::unix::futex::futex_wait (2 samples, 0.14%)</title><rect x="83.8115%" y="821" width="0.1366%" height="15" fill="rgb(248,225,23)" fg:x="1227" fg:w="2"/><text x="84.0615%" y="831.50"></text></g><g><title>syscall (1 samples, 0.07%)</title><rect x="83.8798%" y="805" width="0.0683%" height="15" fill="rgb(250,108,0)" fg:x="1228" fg:w="1"/><text x="84.1298%" y="815.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="83.8798%" y="789" width="0.0683%" height="15" fill="rgb(228,208,7)" fg:x="1228" fg:w="1"/><text x="84.1298%" y="799.50"></text></g><g><title>core::mem::drop (22 samples, 1.50%)</title><rect x="83.4016%" y="901" width="1.5027%" height="15" fill="rgb(244,45,10)" fg:x="1221" fg:w="22"/><text x="83.6516%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;core::iter::adapters::fuse::Fuse&lt;image::buffer_::EnumeratePixelsMut&lt;image::color::Rgb&lt;u8&gt;&gt;&gt;&gt;&gt; (22 samples, 1.50%)</title><rect x="83.4016%" y="885" width="1.5027%" height="15" fill="rgb(207,125,25)" fg:x="1221" fg:w="22"/><text x="83.6516%" y="895.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (22 samples, 1.50%)</title><rect x="83.4016%" y="869" width="1.5027%" height="15" fill="rgb(210,195,18)" fg:x="1221" fg:w="22"/><text x="83.6516%" y="879.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (22 samples, 1.50%)</title><rect x="83.4016%" y="853" width="1.5027%" height="15" fill="rgb(249,80,12)" fg:x="1221" fg:w="22"/><text x="83.6516%" y="863.50"></text></g><g><title>syscall (14 samples, 0.96%)</title><rect x="83.9481%" y="837" width="0.9563%" height="15" fill="rgb(221,65,9)" fg:x="1229" fg:w="14"/><text x="84.1981%" y="847.50"></text></g><g><title>[unknown] (14 samples, 0.96%)</title><rect x="83.9481%" y="821" width="0.9563%" height="15" fill="rgb(235,49,36)" fg:x="1229" fg:w="14"/><text x="84.1981%" y="831.50"></text></g><g><title>[unknown] (14 samples, 0.96%)</title><rect x="83.9481%" y="805" width="0.9563%" height="15" fill="rgb(225,32,20)" fg:x="1229" fg:w="14"/><text x="84.1981%" y="815.50"></text></g><g><title>[unknown] (14 samples, 0.96%)</title><rect x="83.9481%" y="789" width="0.9563%" height="15" fill="rgb(215,141,46)" fg:x="1229" fg:w="14"/><text x="84.1981%" y="799.50"></text></g><g><title>[unknown] (12 samples, 0.82%)</title><rect x="84.0847%" y="773" width="0.8197%" height="15" fill="rgb(250,160,47)" fg:x="1231" fg:w="12"/><text x="84.3347%" y="783.50"></text></g><g><title>[unknown] (11 samples, 0.75%)</title><rect x="84.1530%" y="757" width="0.7514%" height="15" fill="rgb(216,222,40)" fg:x="1232" fg:w="11"/><text x="84.4030%" y="767.50"></text></g><g><title>[unknown] (6 samples, 0.41%)</title><rect x="84.4945%" y="741" width="0.4098%" height="15" fill="rgb(234,217,39)" fg:x="1237" fg:w="6"/><text x="84.7445%" y="751.50"></text></g><g><title>[unknown] (4 samples, 0.27%)</title><rect x="84.6311%" y="725" width="0.2732%" height="15" fill="rgb(207,178,40)" fg:x="1239" fg:w="4"/><text x="84.8811%" y="735.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (3 samples, 0.20%)</title><rect x="84.9044%" y="885" width="0.2049%" height="15" fill="rgb(221,136,13)" fg:x="1243" fg:w="3"/><text x="85.1544%" y="895.50"></text></g><g><title>std::sync::poison::Flag::guard (3 samples, 0.20%)</title><rect x="84.9044%" y="869" width="0.2049%" height="15" fill="rgb(249,199,10)" fg:x="1243" fg:w="3"/><text x="85.1544%" y="879.50"></text></g><g><title>std::thread::panicking (1 samples, 0.07%)</title><rect x="85.0410%" y="853" width="0.0683%" height="15" fill="rgb(249,222,13)" fg:x="1245" fg:w="1"/><text x="85.2910%" y="863.50"></text></g><g><title>std::panicking::panicking (1 samples, 0.07%)</title><rect x="85.0410%" y="837" width="0.0683%" height="15" fill="rgb(244,185,38)" fg:x="1245" fg:w="1"/><text x="85.2910%" y="847.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (1 samples, 0.07%)</title><rect x="85.0410%" y="821" width="0.0683%" height="15" fill="rgb(236,202,9)" fg:x="1245" fg:w="1"/><text x="85.2910%" y="831.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.07%)</title><rect x="85.0410%" y="805" width="0.0683%" height="15" fill="rgb(250,229,37)" fg:x="1245" fg:w="1"/><text x="85.2910%" y="815.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.07%)</title><rect x="85.0410%" y="789" width="0.0683%" height="15" fill="rgb(206,174,23)" fg:x="1245" fg:w="1"/><text x="85.2910%" y="799.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_err (2 samples, 0.14%)</title><rect x="85.1093%" y="869" width="0.1366%" height="15" fill="rgb(211,33,43)" fg:x="1246" fg:w="2"/><text x="85.3593%" y="879.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_ok (2 samples, 0.14%)</title><rect x="85.1093%" y="853" width="0.1366%" height="15" fill="rgb(245,58,50)" fg:x="1246" fg:w="2"/><text x="85.3593%" y="863.50"></text></g><g><title>std::sys::pal::unix::futex::futex_wait (6 samples, 0.41%)</title><rect x="85.3825%" y="853" width="0.4098%" height="15" fill="rgb(244,68,36)" fg:x="1250" fg:w="6"/><text x="85.6325%" y="863.50"></text></g><g><title>syscall (6 samples, 0.41%)</title><rect x="85.3825%" y="837" width="0.4098%" height="15" fill="rgb(232,229,15)" fg:x="1250" fg:w="6"/><text x="85.6325%" y="847.50"></text></g><g><title>[unknown] (6 samples, 0.41%)</title><rect x="85.3825%" y="821" width="0.4098%" height="15" fill="rgb(254,30,23)" fg:x="1250" fg:w="6"/><text x="85.6325%" y="831.50"></text></g><g><title>[unknown] (6 samples, 0.41%)</title><rect x="85.3825%" y="805" width="0.4098%" height="15" fill="rgb(235,160,14)" fg:x="1250" fg:w="6"/><text x="85.6325%" y="815.50"></text></g><g><title>[unknown] (6 samples, 0.41%)</title><rect x="85.3825%" y="789" width="0.4098%" height="15" fill="rgb(212,155,44)" fg:x="1250" fg:w="6"/><text x="85.6325%" y="799.50"></text></g><g><title>[unknown] (5 samples, 0.34%)</title><rect x="85.4508%" y="773" width="0.3415%" height="15" fill="rgb(226,2,50)" fg:x="1251" fg:w="5"/><text x="85.7008%" y="783.50"></text></g><g><title>[unknown] (5 samples, 0.34%)</title><rect x="85.4508%" y="757" width="0.3415%" height="15" fill="rgb(234,177,6)" fg:x="1251" fg:w="5"/><text x="85.7008%" y="767.50"></text></g><g><title>[unknown] (4 samples, 0.27%)</title><rect x="85.5191%" y="741" width="0.2732%" height="15" fill="rgb(217,24,9)" fg:x="1252" fg:w="4"/><text x="85.7691%" y="751.50"></text></g><g><title>[unknown] (4 samples, 0.27%)</title><rect x="85.5191%" y="725" width="0.2732%" height="15" fill="rgb(220,13,46)" fg:x="1252" fg:w="4"/><text x="85.7691%" y="735.50"></text></g><g><title>[unknown] (4 samples, 0.27%)</title><rect x="85.5191%" y="709" width="0.2732%" height="15" fill="rgb(239,221,27)" fg:x="1252" fg:w="4"/><text x="85.7691%" y="719.50"></text></g><g><title>[unknown] (4 samples, 0.27%)</title><rect x="85.5191%" y="693" width="0.2732%" height="15" fill="rgb(222,198,25)" fg:x="1252" fg:w="4"/><text x="85.7691%" y="703.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="85.7240%" y="677" width="0.0683%" height="15" fill="rgb(211,99,13)" fg:x="1255" fg:w="1"/><text x="85.9740%" y="687.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock_contended (15 samples, 1.02%)</title><rect x="85.2459%" y="869" width="1.0246%" height="15" fill="rgb(232,111,31)" fg:x="1248" fg:w="15"/><text x="85.4959%" y="879.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::spin (7 samples, 0.48%)</title><rect x="85.7923%" y="853" width="0.4781%" height="15" fill="rgb(245,82,37)" fg:x="1256" fg:w="7"/><text x="86.0423%" y="863.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (1 samples, 0.07%)</title><rect x="86.2022%" y="837" width="0.0683%" height="15" fill="rgb(227,149,46)" fg:x="1262" fg:w="1"/><text x="86.4522%" y="847.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.07%)</title><rect x="86.2022%" y="821" width="0.0683%" height="15" fill="rgb(218,36,50)" fg:x="1262" fg:w="1"/><text x="86.4522%" y="831.50"></text></g><g><title>&lt;&amp;rayon::iter::par_bridge::IterParallelProducer&lt;Iter&gt; as rayon::iter::plumbing::UnindexedProducer&gt;::fold_with (70 samples, 4.78%)</title><rect x="81.6257%" y="917" width="4.7814%" height="15" fill="rgb(226,80,48)" fg:x="1195" fg:w="70"/><text x="81.8757%" y="927.50">&lt;&amp;rayo..</text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (22 samples, 1.50%)</title><rect x="84.9044%" y="901" width="1.5027%" height="15" fill="rgb(238,224,15)" fg:x="1243" fg:w="22"/><text x="85.1544%" y="911.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (19 samples, 1.30%)</title><rect x="85.1093%" y="885" width="1.2978%" height="15" fill="rgb(241,136,10)" fg:x="1246" fg:w="19"/><text x="85.3593%" y="895.50"></text></g><g><title>syscall (2 samples, 0.14%)</title><rect x="86.2705%" y="869" width="0.1366%" height="15" fill="rgb(208,32,45)" fg:x="1263" fg:w="2"/><text x="86.5205%" y="879.50"></text></g><g><title>[unknown] (2 samples, 0.14%)</title><rect x="86.2705%" y="853" width="0.1366%" height="15" fill="rgb(207,135,9)" fg:x="1263" fg:w="2"/><text x="86.5205%" y="863.50"></text></g><g><title>num_complex::Complex&lt;T&gt;::norm (4 samples, 0.27%)</title><rect x="86.8852%" y="325" width="0.2732%" height="15" fill="rgb(206,86,44)" fg:x="1272" fg:w="4"/><text x="87.1352%" y="335.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::hypot (4 samples, 0.27%)</title><rect x="86.8852%" y="309" width="0.2732%" height="15" fill="rgb(245,177,15)" fg:x="1272" fg:w="4"/><text x="87.1352%" y="319.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::hypot (4 samples, 0.27%)</title><rect x="86.8852%" y="293" width="0.2732%" height="15" fill="rgb(206,64,50)" fg:x="1272" fg:w="4"/><text x="87.1352%" y="303.50"></text></g><g><title>hypot (4 samples, 0.27%)</title><rect x="86.8852%" y="277" width="0.2732%" height="15" fill="rgb(234,36,40)" fg:x="1272" fg:w="4"/><text x="87.1352%" y="287.50"></text></g><g><title>&lt;rayon::iter::for_each::ForEachConsumer&lt;F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume (15 samples, 1.02%)</title><rect x="86.4071%" y="373" width="1.0246%" height="15" fill="rgb(213,64,8)" fg:x="1265" fg:w="15"/><text x="86.6571%" y="383.50"></text></g><g><title>julia::generate_image_buffer::_{{closure}} (15 samples, 1.02%)</title><rect x="86.4071%" y="357" width="1.0246%" height="15" fill="rgb(210,75,36)" fg:x="1265" fg:w="15"/><text x="86.6571%" y="367.50"></text></g><g><title>julia::color_generator (15 samples, 1.02%)</title><rect x="86.4071%" y="341" width="1.0246%" height="15" fill="rgb(229,88,21)" fg:x="1265" fg:w="15"/><text x="86.6571%" y="351.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::powf (4 samples, 0.27%)</title><rect x="87.1585%" y="325" width="0.2732%" height="15" fill="rgb(252,204,47)" fg:x="1276" fg:w="4"/><text x="87.4085%" y="335.50"></text></g><g><title>pow (4 samples, 0.27%)</title><rect x="87.1585%" y="309" width="0.2732%" height="15" fill="rgb(208,77,27)" fg:x="1276" fg:w="4"/><text x="87.4085%" y="319.50"></text></g><g><title>[libm.so.6] (4 samples, 0.27%)</title><rect x="87.1585%" y="293" width="0.2732%" height="15" fill="rgb(221,76,26)" fg:x="1276" fg:w="4"/><text x="87.4085%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="87.6366%" y="309" width="0.0683%" height="15" fill="rgb(225,139,18)" fg:x="1283" fg:w="1"/><text x="87.8866%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="87.6366%" y="293" width="0.0683%" height="15" fill="rgb(230,137,11)" fg:x="1283" fg:w="1"/><text x="87.8866%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="87.6366%" y="277" width="0.0683%" height="15" fill="rgb(212,28,1)" fg:x="1283" fg:w="1"/><text x="87.8866%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="87.6366%" y="261" width="0.0683%" height="15" fill="rgb(248,164,17)" fg:x="1283" fg:w="1"/><text x="87.8866%" y="271.50"></text></g><g><title>core::mem::drop (16 samples, 1.09%)</title><rect x="87.4317%" y="373" width="1.0929%" height="15" fill="rgb(222,171,42)" fg:x="1280" fg:w="16"/><text x="87.6817%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;core::iter::adapters::fuse::Fuse&lt;image::buffer_::EnumeratePixelsMut&lt;image::color::Rgb&lt;u8&gt;&gt;&gt;&gt;&gt; (16 samples, 1.09%)</title><rect x="87.4317%" y="357" width="1.0929%" height="15" fill="rgb(243,84,45)" fg:x="1280" fg:w="16"/><text x="87.6817%" y="367.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 1.09%)</title><rect x="87.4317%" y="341" width="1.0929%" height="15" fill="rgb(252,49,23)" fg:x="1280" fg:w="16"/><text x="87.6817%" y="351.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (16 samples, 1.09%)</title><rect x="87.4317%" y="325" width="1.0929%" height="15" fill="rgb(215,19,7)" fg:x="1280" fg:w="16"/><text x="87.6817%" y="335.50"></text></g><g><title>syscall (12 samples, 0.82%)</title><rect x="87.7049%" y="309" width="0.8197%" height="15" fill="rgb(238,81,41)" fg:x="1284" fg:w="12"/><text x="87.9549%" y="319.50"></text></g><g><title>[unknown] (12 samples, 0.82%)</title><rect x="87.7049%" y="293" width="0.8197%" height="15" fill="rgb(210,199,37)" fg:x="1284" fg:w="12"/><text x="87.9549%" y="303.50"></text></g><g><title>[unknown] (12 samples, 0.82%)</title><rect x="87.7049%" y="277" width="0.8197%" height="15" fill="rgb(244,192,49)" fg:x="1284" fg:w="12"/><text x="87.9549%" y="287.50"></text></g><g><title>[unknown] (12 samples, 0.82%)</title><rect x="87.7049%" y="261" width="0.8197%" height="15" fill="rgb(226,211,11)" fg:x="1284" fg:w="12"/><text x="87.9549%" y="271.50"></text></g><g><title>[unknown] (12 samples, 0.82%)</title><rect x="87.7049%" y="245" width="0.8197%" height="15" fill="rgb(236,162,54)" fg:x="1284" fg:w="12"/><text x="87.9549%" y="255.50"></text></g><g><title>[unknown] (12 samples, 0.82%)</title><rect x="87.7049%" y="229" width="0.8197%" height="15" fill="rgb(220,229,9)" fg:x="1284" fg:w="12"/><text x="87.9549%" y="239.50"></text></g><g><title>[unknown] (9 samples, 0.61%)</title><rect x="87.9098%" y="213" width="0.6148%" height="15" fill="rgb(250,87,22)" fg:x="1287" fg:w="9"/><text x="88.1598%" y="223.50"></text></g><g><title>[unknown] (9 samples, 0.61%)</title><rect x="87.9098%" y="197" width="0.6148%" height="15" fill="rgb(239,43,17)" fg:x="1287" fg:w="9"/><text x="88.1598%" y="207.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="88.4563%" y="181" width="0.0683%" height="15" fill="rgb(231,177,25)" fg:x="1295" fg:w="1"/><text x="88.7063%" y="191.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="88.4563%" y="165" width="0.0683%" height="15" fill="rgb(219,179,1)" fg:x="1295" fg:w="1"/><text x="88.7063%" y="175.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (3 samples, 0.20%)</title><rect x="88.5246%" y="357" width="0.2049%" height="15" fill="rgb(238,219,53)" fg:x="1296" fg:w="3"/><text x="88.7746%" y="367.50"></text></g><g><title>std::sync::poison::Flag::guard (3 samples, 0.20%)</title><rect x="88.5246%" y="341" width="0.2049%" height="15" fill="rgb(232,167,36)" fg:x="1296" fg:w="3"/><text x="88.7746%" y="351.50"></text></g><g><title>std::sys::pal::unix::futex::futex_wait (9 samples, 0.61%)</title><rect x="89.2077%" y="325" width="0.6148%" height="15" fill="rgb(244,19,51)" fg:x="1306" fg:w="9"/><text x="89.4577%" y="335.50"></text></g><g><title>syscall (8 samples, 0.55%)</title><rect x="89.2760%" y="309" width="0.5464%" height="15" fill="rgb(224,6,22)" fg:x="1307" fg:w="8"/><text x="89.5260%" y="319.50"></text></g><g><title>[unknown] (8 samples, 0.55%)</title><rect x="89.2760%" y="293" width="0.5464%" height="15" fill="rgb(224,145,5)" fg:x="1307" fg:w="8"/><text x="89.5260%" y="303.50"></text></g><g><title>[unknown] (8 samples, 0.55%)</title><rect x="89.2760%" y="277" width="0.5464%" height="15" fill="rgb(234,130,49)" fg:x="1307" fg:w="8"/><text x="89.5260%" y="287.50"></text></g><g><title>[unknown] (8 samples, 0.55%)</title><rect x="89.2760%" y="261" width="0.5464%" height="15" fill="rgb(254,6,2)" fg:x="1307" fg:w="8"/><text x="89.5260%" y="271.50"></text></g><g><title>[unknown] (7 samples, 0.48%)</title><rect x="89.3443%" y="245" width="0.4781%" height="15" fill="rgb(208,96,46)" fg:x="1308" fg:w="7"/><text x="89.5943%" y="255.50"></text></g><g><title>[unknown] (7 samples, 0.48%)</title><rect x="89.3443%" y="229" width="0.4781%" height="15" fill="rgb(239,3,39)" fg:x="1308" fg:w="7"/><text x="89.5943%" y="239.50"></text></g><g><title>[unknown] (6 samples, 0.41%)</title><rect x="89.4126%" y="213" width="0.4098%" height="15" fill="rgb(233,210,1)" fg:x="1309" fg:w="6"/><text x="89.6626%" y="223.50"></text></g><g><title>[unknown] (6 samples, 0.41%)</title><rect x="89.4126%" y="197" width="0.4098%" height="15" fill="rgb(244,137,37)" fg:x="1309" fg:w="6"/><text x="89.6626%" y="207.50"></text></g><g><title>[unknown] (5 samples, 0.34%)</title><rect x="89.4809%" y="181" width="0.3415%" height="15" fill="rgb(240,136,2)" fg:x="1310" fg:w="5"/><text x="89.7309%" y="191.50"></text></g><g><title>[unknown] (4 samples, 0.27%)</title><rect x="89.5492%" y="165" width="0.2732%" height="15" fill="rgb(239,18,37)" fg:x="1311" fg:w="4"/><text x="89.7992%" y="175.50"></text></g><g><title>[unknown] (3 samples, 0.20%)</title><rect x="89.6175%" y="149" width="0.2049%" height="15" fill="rgb(218,185,22)" fg:x="1312" fg:w="3"/><text x="89.8675%" y="159.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock_contended (24 samples, 1.64%)</title><rect x="88.7978%" y="341" width="1.6393%" height="15" fill="rgb(225,218,4)" fg:x="1300" fg:w="24"/><text x="89.0478%" y="351.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::spin (9 samples, 0.61%)</title><rect x="89.8224%" y="325" width="0.6148%" height="15" fill="rgb(230,182,32)" fg:x="1315" fg:w="9"/><text x="90.0724%" y="335.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (2 samples, 0.14%)</title><rect x="90.3005%" y="309" width="0.1366%" height="15" fill="rgb(242,56,43)" fg:x="1322" fg:w="2"/><text x="90.5505%" y="319.50"></text></g><g><title>core::sync::atomic::atomic_load (2 samples, 0.14%)</title><rect x="90.3005%" y="293" width="0.1366%" height="15" fill="rgb(233,99,24)" fg:x="1322" fg:w="2"/><text x="90.5505%" y="303.50"></text></g><g><title>rayon_core::join::join_context::call_b::_{{closure}} (1,233 samples, 84.22%)</title><rect x="6.2842%" y="1477" width="84.2213%" height="15" fill="rgb(234,209,42)" fg:x="92" fg:w="1233"/><text x="6.5342%" y="1487.50">rayon_core::join::join_context::call_b::_{{closure}}</text></g><g><title>rayon::iter::plumbing::bridge_unindexed_producer_consumer::_{{closure}} (1,233 samples, 84.22%)</title><rect x="6.2842%" y="1461" width="84.2213%" height="15" fill="rgb(227,7,12)" fg:x="92" fg:w="1233"/><text x="6.5342%" y="1471.50">rayon::iter::plumbing::bridge_unindexed_producer_consumer::_{{closure}}</text></g><g><title>rayon::iter::plumbing::bridge_unindexed_producer_consumer (133 samples, 9.08%)</title><rect x="81.4208%" y="1445" width="9.0847%" height="15" fill="rgb(245,203,43)" fg:x="1192" fg:w="133"/><text x="81.6708%" y="1455.50">rayon::iter::..</text></g><g><title>rayon_core::join::join_context (131 samples, 8.95%)</title><rect x="81.5574%" y="1429" width="8.9481%" height="15" fill="rgb(238,205,33)" fg:x="1194" fg:w="131"/><text x="81.8074%" y="1439.50">rayon_core::j..</text></g><g><title>rayon_core::registry::in_worker (131 samples, 8.95%)</title><rect x="81.5574%" y="1413" width="8.9481%" height="15" fill="rgb(231,56,7)" fg:x="1194" fg:w="131"/><text x="81.8074%" y="1423.50">rayon_core::r..</text></g><g><title>rayon_core::join::join_context::_{{closure}} (131 samples, 8.95%)</title><rect x="81.5574%" y="1397" width="8.9481%" height="15" fill="rgb(244,186,29)" fg:x="1194" fg:w="131"/><text x="81.8074%" y="1407.50">rayon_core::j..</text></g><g><title>rayon_core::unwind::halt_unwinding (131 samples, 8.95%)</title><rect x="81.5574%" y="1381" width="8.9481%" height="15" fill="rgb(234,111,31)" fg:x="1194" fg:w="131"/><text x="81.8074%" y="1391.50">rayon_core::u..</text></g><g><title>std::panic::catch_unwind (131 samples, 8.95%)</title><rect x="81.5574%" y="1365" width="8.9481%" height="15" fill="rgb(241,149,10)" fg:x="1194" fg:w="131"/><text x="81.8074%" y="1375.50">std::panic::c..</text></g><g><title>std::panicking::try (131 samples, 8.95%)</title><rect x="81.5574%" y="1349" width="8.9481%" height="15" fill="rgb(249,206,44)" fg:x="1194" fg:w="131"/><text x="81.8074%" y="1359.50">std::panickin..</text></g><g><title>std::panicking::try::do_call (131 samples, 8.95%)</title><rect x="81.5574%" y="1333" width="8.9481%" height="15" fill="rgb(251,153,30)" fg:x="1194" fg:w="131"/><text x="81.8074%" y="1343.50">std::panickin..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (131 samples, 8.95%)</title><rect x="81.5574%" y="1317" width="8.9481%" height="15" fill="rgb(239,152,38)" fg:x="1194" fg:w="131"/><text x="81.8074%" y="1327.50">&lt;core::panic:..</text></g><g><title>rayon_core::join::join_context::call_a::_{{closure}} (131 samples, 8.95%)</title><rect x="81.5574%" y="1301" width="8.9481%" height="15" fill="rgb(249,139,47)" fg:x="1194" fg:w="131"/><text x="81.8074%" y="1311.50">rayon_core::j..</text></g><g><title>rayon::iter::plumbing::bridge_unindexed_producer_consumer::_{{closure}} (131 samples, 8.95%)</title><rect x="81.5574%" y="1285" width="8.9481%" height="15" fill="rgb(244,64,35)" fg:x="1194" fg:w="131"/><text x="81.8074%" y="1295.50">rayon::iter::..</text></g><g><title>rayon::iter::plumbing::bridge_unindexed_producer_consumer (131 samples, 8.95%)</title><rect x="81.5574%" y="1269" width="8.9481%" height="15" fill="rgb(216,46,15)" fg:x="1194" fg:w="131"/><text x="81.8074%" y="1279.50">rayon::iter::..</text></g><g><title>rayon_core::join::join_context (131 samples, 8.95%)</title><rect x="81.5574%" y="1253" width="8.9481%" height="15" fill="rgb(250,74,19)" fg:x="1194" fg:w="131"/><text x="81.8074%" y="1263.50">rayon_core::j..</text></g><g><title>rayon_core::registry::in_worker (131 samples, 8.95%)</title><rect x="81.5574%" y="1237" width="8.9481%" height="15" fill="rgb(249,42,33)" fg:x="1194" fg:w="131"/><text x="81.8074%" y="1247.50">rayon_core::r..</text></g><g><title>rayon_core::join::join_context::_{{closure}} (131 samples, 8.95%)</title><rect x="81.5574%" y="1221" width="8.9481%" height="15" fill="rgb(242,149,17)" fg:x="1194" fg:w="131"/><text x="81.8074%" y="1231.50">rayon_core::j..</text></g><g><title>rayon_core::unwind::halt_unwinding (131 samples, 8.95%)</title><rect x="81.5574%" y="1205" width="8.9481%" height="15" fill="rgb(244,29,21)" fg:x="1194" fg:w="131"/><text x="81.8074%" y="1215.50">rayon_core::u..</text></g><g><title>std::panic::catch_unwind (131 samples, 8.95%)</title><rect x="81.5574%" y="1189" width="8.9481%" height="15" fill="rgb(220,130,37)" fg:x="1194" fg:w="131"/><text x="81.8074%" y="1199.50">std::panic::c..</text></g><g><title>std::panicking::try (131 samples, 8.95%)</title><rect x="81.5574%" y="1173" width="8.9481%" height="15" fill="rgb(211,67,2)" fg:x="1194" fg:w="131"/><text x="81.8074%" y="1183.50">std::panickin..</text></g><g><title>std::panicking::try::do_call (131 samples, 8.95%)</title><rect x="81.5574%" y="1157" width="8.9481%" height="15" fill="rgb(235,68,52)" fg:x="1194" fg:w="131"/><text x="81.8074%" y="1167.50">std::panickin..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (131 samples, 8.95%)</title><rect x="81.5574%" y="1141" width="8.9481%" height="15" fill="rgb(246,142,3)" fg:x="1194" fg:w="131"/><text x="81.8074%" y="1151.50">&lt;core::panic:..</text></g><g><title>rayon_core::join::join_context::call_a::_{{closure}} (131 samples, 8.95%)</title><rect x="81.5574%" y="1125" width="8.9481%" height="15" fill="rgb(241,25,7)" fg:x="1194" fg:w="131"/><text x="81.8074%" y="1135.50">rayon_core::j..</text></g><g><title>rayon::iter::plumbing::bridge_unindexed_producer_consumer::_{{closure}} (131 samples, 8.95%)</title><rect x="81.5574%" y="1109" width="8.9481%" height="15" fill="rgb(242,119,39)" fg:x="1194" fg:w="131"/><text x="81.8074%" y="1119.50">rayon::iter::..</text></g><g><title>rayon::iter::plumbing::bridge_unindexed_producer_consumer (131 samples, 8.95%)</title><rect x="81.5574%" y="1093" width="8.9481%" height="15" fill="rgb(241,98,45)" fg:x="1194" fg:w="131"/><text x="81.8074%" y="1103.50">rayon::iter::..</text></g><g><title>rayon_core::join::join_context (131 samples, 8.95%)</title><rect x="81.5574%" y="1077" width="8.9481%" height="15" fill="rgb(254,28,30)" fg:x="1194" fg:w="131"/><text x="81.8074%" y="1087.50">rayon_core::j..</text></g><g><title>rayon_core::registry::in_worker (131 samples, 8.95%)</title><rect x="81.5574%" y="1061" width="8.9481%" height="15" fill="rgb(241,142,54)" fg:x="1194" fg:w="131"/><text x="81.8074%" y="1071.50">rayon_core::r..</text></g><g><title>rayon_core::join::join_context::_{{closure}} (131 samples, 8.95%)</title><rect x="81.5574%" y="1045" width="8.9481%" height="15" fill="rgb(222,85,15)" fg:x="1194" fg:w="131"/><text x="81.8074%" y="1055.50">rayon_core::j..</text></g><g><title>rayon_core::unwind::halt_unwinding (130 samples, 8.88%)</title><rect x="81.6257%" y="1029" width="8.8798%" height="15" fill="rgb(210,85,47)" fg:x="1195" fg:w="130"/><text x="81.8757%" y="1039.50">rayon_core::u..</text></g><g><title>std::panic::catch_unwind (130 samples, 8.88%)</title><rect x="81.6257%" y="1013" width="8.8798%" height="15" fill="rgb(224,206,25)" fg:x="1195" fg:w="130"/><text x="81.8757%" y="1023.50">std::panic::c..</text></g><g><title>std::panicking::try (130 samples, 8.88%)</title><rect x="81.6257%" y="997" width="8.8798%" height="15" fill="rgb(243,201,19)" fg:x="1195" fg:w="130"/><text x="81.8757%" y="1007.50">std::panickin..</text></g><g><title>std::panicking::try::do_call (130 samples, 8.88%)</title><rect x="81.6257%" y="981" width="8.8798%" height="15" fill="rgb(236,59,4)" fg:x="1195" fg:w="130"/><text x="81.8757%" y="991.50">std::panickin..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (130 samples, 8.88%)</title><rect x="81.6257%" y="965" width="8.8798%" height="15" fill="rgb(254,179,45)" fg:x="1195" fg:w="130"/><text x="81.8757%" y="975.50">&lt;core::panic:..</text></g><g><title>rayon_core::join::join_context::call_a::_{{closure}} (130 samples, 8.88%)</title><rect x="81.6257%" y="949" width="8.8798%" height="15" fill="rgb(226,14,10)" fg:x="1195" fg:w="130"/><text x="81.8757%" y="959.50">rayon_core::j..</text></g><g><title>rayon::iter::plumbing::bridge_unindexed_producer_consumer::_{{closure}} (130 samples, 8.88%)</title><rect x="81.6257%" y="933" width="8.8798%" height="15" fill="rgb(244,27,41)" fg:x="1195" fg:w="130"/><text x="81.8757%" y="943.50">rayon::iter::..</text></g><g><title>rayon::iter::plumbing::bridge_unindexed_producer_consumer (60 samples, 4.10%)</title><rect x="86.4071%" y="917" width="4.0984%" height="15" fill="rgb(235,35,32)" fg:x="1265" fg:w="60"/><text x="86.6571%" y="927.50">rayo..</text></g><g><title>rayon_core::join::join_context (60 samples, 4.10%)</title><rect x="86.4071%" y="901" width="4.0984%" height="15" fill="rgb(218,68,31)" fg:x="1265" fg:w="60"/><text x="86.6571%" y="911.50">rayo..</text></g><g><title>rayon_core::registry::in_worker (60 samples, 4.10%)</title><rect x="86.4071%" y="885" width="4.0984%" height="15" fill="rgb(207,120,37)" fg:x="1265" fg:w="60"/><text x="86.6571%" y="895.50">rayo..</text></g><g><title>rayon_core::join::join_context::_{{closure}} (60 samples, 4.10%)</title><rect x="86.4071%" y="869" width="4.0984%" height="15" fill="rgb(227,98,0)" fg:x="1265" fg:w="60"/><text x="86.6571%" y="879.50">rayo..</text></g><g><title>rayon_core::unwind::halt_unwinding (60 samples, 4.10%)</title><rect x="86.4071%" y="853" width="4.0984%" height="15" fill="rgb(207,7,3)" fg:x="1265" fg:w="60"/><text x="86.6571%" y="863.50">rayo..</text></g><g><title>std::panic::catch_unwind (60 samples, 4.10%)</title><rect x="86.4071%" y="837" width="4.0984%" height="15" fill="rgb(206,98,19)" fg:x="1265" fg:w="60"/><text x="86.6571%" y="847.50">std:..</text></g><g><title>std::panicking::try (60 samples, 4.10%)</title><rect x="86.4071%" y="821" width="4.0984%" height="15" fill="rgb(217,5,26)" fg:x="1265" fg:w="60"/><text x="86.6571%" y="831.50">std:..</text></g><g><title>std::panicking::try::do_call (60 samples, 4.10%)</title><rect x="86.4071%" y="805" width="4.0984%" height="15" fill="rgb(235,190,38)" fg:x="1265" fg:w="60"/><text x="86.6571%" y="815.50">std:..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (60 samples, 4.10%)</title><rect x="86.4071%" y="789" width="4.0984%" height="15" fill="rgb(247,86,24)" fg:x="1265" fg:w="60"/><text x="86.6571%" y="799.50">&lt;cor..</text></g><g><title>rayon_core::join::join_context::call_a::_{{closure}} (60 samples, 4.10%)</title><rect x="86.4071%" y="773" width="4.0984%" height="15" fill="rgb(205,101,16)" fg:x="1265" fg:w="60"/><text x="86.6571%" y="783.50">rayo..</text></g><g><title>rayon::iter::plumbing::bridge_unindexed_producer_consumer::_{{closure}} (60 samples, 4.10%)</title><rect x="86.4071%" y="757" width="4.0984%" height="15" fill="rgb(246,168,33)" fg:x="1265" fg:w="60"/><text x="86.6571%" y="767.50">rayo..</text></g><g><title>rayon::iter::plumbing::bridge_unindexed_producer_consumer (60 samples, 4.10%)</title><rect x="86.4071%" y="741" width="4.0984%" height="15" fill="rgb(231,114,1)" fg:x="1265" fg:w="60"/><text x="86.6571%" y="751.50">rayo..</text></g><g><title>rayon_core::join::join_context (60 samples, 4.10%)</title><rect x="86.4071%" y="725" width="4.0984%" height="15" fill="rgb(207,184,53)" fg:x="1265" fg:w="60"/><text x="86.6571%" y="735.50">rayo..</text></g><g><title>rayon_core::registry::in_worker (60 samples, 4.10%)</title><rect x="86.4071%" y="709" width="4.0984%" height="15" fill="rgb(224,95,51)" fg:x="1265" fg:w="60"/><text x="86.6571%" y="719.50">rayo..</text></g><g><title>rayon_core::join::join_context::_{{closure}} (60 samples, 4.10%)</title><rect x="86.4071%" y="693" width="4.0984%" height="15" fill="rgb(212,188,45)" fg:x="1265" fg:w="60"/><text x="86.6571%" y="703.50">rayo..</text></g><g><title>rayon_core::unwind::halt_unwinding (60 samples, 4.10%)</title><rect x="86.4071%" y="677" width="4.0984%" height="15" fill="rgb(223,154,38)" fg:x="1265" fg:w="60"/><text x="86.6571%" y="687.50">rayo..</text></g><g><title>std::panic::catch_unwind (60 samples, 4.10%)</title><rect x="86.4071%" y="661" width="4.0984%" height="15" fill="rgb(251,22,52)" fg:x="1265" fg:w="60"/><text x="86.6571%" y="671.50">std:..</text></g><g><title>std::panicking::try (60 samples, 4.10%)</title><rect x="86.4071%" y="645" width="4.0984%" height="15" fill="rgb(229,209,22)" fg:x="1265" fg:w="60"/><text x="86.6571%" y="655.50">std:..</text></g><g><title>std::panicking::try::do_call (60 samples, 4.10%)</title><rect x="86.4071%" y="629" width="4.0984%" height="15" fill="rgb(234,138,34)" fg:x="1265" fg:w="60"/><text x="86.6571%" y="639.50">std:..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (60 samples, 4.10%)</title><rect x="86.4071%" y="613" width="4.0984%" height="15" fill="rgb(212,95,11)" fg:x="1265" fg:w="60"/><text x="86.6571%" y="623.50">&lt;cor..</text></g><g><title>rayon_core::join::join_context::call_a::_{{closure}} (60 samples, 4.10%)</title><rect x="86.4071%" y="597" width="4.0984%" height="15" fill="rgb(240,179,47)" fg:x="1265" fg:w="60"/><text x="86.6571%" y="607.50">rayo..</text></g><g><title>rayon::iter::plumbing::bridge_unindexed_producer_consumer::_{{closure}} (60 samples, 4.10%)</title><rect x="86.4071%" y="581" width="4.0984%" height="15" fill="rgb(240,163,11)" fg:x="1265" fg:w="60"/><text x="86.6571%" y="591.50">rayo..</text></g><g><title>rayon::iter::plumbing::bridge_unindexed_producer_consumer (60 samples, 4.10%)</title><rect x="86.4071%" y="565" width="4.0984%" height="15" fill="rgb(236,37,12)" fg:x="1265" fg:w="60"/><text x="86.6571%" y="575.50">rayo..</text></g><g><title>rayon_core::join::join_context (60 samples, 4.10%)</title><rect x="86.4071%" y="549" width="4.0984%" height="15" fill="rgb(232,164,16)" fg:x="1265" fg:w="60"/><text x="86.6571%" y="559.50">rayo..</text></g><g><title>rayon_core::registry::in_worker (60 samples, 4.10%)</title><rect x="86.4071%" y="533" width="4.0984%" height="15" fill="rgb(244,205,15)" fg:x="1265" fg:w="60"/><text x="86.6571%" y="543.50">rayo..</text></g><g><title>rayon_core::join::join_context::_{{closure}} (60 samples, 4.10%)</title><rect x="86.4071%" y="517" width="4.0984%" height="15" fill="rgb(223,117,47)" fg:x="1265" fg:w="60"/><text x="86.6571%" y="527.50">rayo..</text></g><g><title>rayon_core::unwind::halt_unwinding (60 samples, 4.10%)</title><rect x="86.4071%" y="501" width="4.0984%" height="15" fill="rgb(244,107,35)" fg:x="1265" fg:w="60"/><text x="86.6571%" y="511.50">rayo..</text></g><g><title>std::panic::catch_unwind (60 samples, 4.10%)</title><rect x="86.4071%" y="485" width="4.0984%" height="15" fill="rgb(205,140,8)" fg:x="1265" fg:w="60"/><text x="86.6571%" y="495.50">std:..</text></g><g><title>std::panicking::try (60 samples, 4.10%)</title><rect x="86.4071%" y="469" width="4.0984%" height="15" fill="rgb(228,84,46)" fg:x="1265" fg:w="60"/><text x="86.6571%" y="479.50">std:..</text></g><g><title>std::panicking::try::do_call (60 samples, 4.10%)</title><rect x="86.4071%" y="453" width="4.0984%" height="15" fill="rgb(254,188,9)" fg:x="1265" fg:w="60"/><text x="86.6571%" y="463.50">std:..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (60 samples, 4.10%)</title><rect x="86.4071%" y="437" width="4.0984%" height="15" fill="rgb(206,112,54)" fg:x="1265" fg:w="60"/><text x="86.6571%" y="447.50">&lt;cor..</text></g><g><title>rayon_core::join::join_context::call_a::_{{closure}} (60 samples, 4.10%)</title><rect x="86.4071%" y="421" width="4.0984%" height="15" fill="rgb(216,84,49)" fg:x="1265" fg:w="60"/><text x="86.6571%" y="431.50">rayo..</text></g><g><title>rayon::iter::plumbing::bridge_unindexed_producer_consumer::_{{closure}} (60 samples, 4.10%)</title><rect x="86.4071%" y="405" width="4.0984%" height="15" fill="rgb(214,194,35)" fg:x="1265" fg:w="60"/><text x="86.6571%" y="415.50">rayo..</text></g><g><title>&lt;&amp;rayon::iter::par_bridge::IterParallelProducer&lt;Iter&gt; as rayon::iter::plumbing::UnindexedProducer&gt;::fold_with (60 samples, 4.10%)</title><rect x="86.4071%" y="389" width="4.0984%" height="15" fill="rgb(249,28,3)" fg:x="1265" fg:w="60"/><text x="86.6571%" y="399.50">&lt;&amp;ra..</text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (29 samples, 1.98%)</title><rect x="88.5246%" y="373" width="1.9809%" height="15" fill="rgb(222,56,52)" fg:x="1296" fg:w="29"/><text x="88.7746%" y="383.50">s..</text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (26 samples, 1.78%)</title><rect x="88.7295%" y="357" width="1.7760%" height="15" fill="rgb(245,217,50)" fg:x="1299" fg:w="26"/><text x="88.9795%" y="367.50">s..</text></g><g><title>syscall (1 samples, 0.07%)</title><rect x="90.4372%" y="341" width="0.0683%" height="15" fill="rgb(213,201,24)" fg:x="1324" fg:w="1"/><text x="90.6872%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="90.4372%" y="325" width="0.0683%" height="15" fill="rgb(248,116,28)" fg:x="1324" fg:w="1"/><text x="90.6872%" y="335.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.07%)</title><rect x="90.5055%" y="213" width="0.0683%" height="15" fill="rgb(219,72,43)" fg:x="1325" fg:w="1"/><text x="90.7555%" y="223.50"></text></g><g><title>&lt;image::buffer_::EnumeratePixelsMut&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="90.5055%" y="197" width="0.0683%" height="15" fill="rgb(209,138,14)" fg:x="1325" fg:w="1"/><text x="90.7555%" y="207.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.14%)</title><rect x="90.5055%" y="261" width="0.1366%" height="15" fill="rgb(222,18,33)" fg:x="1325" fg:w="2"/><text x="90.7555%" y="271.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (2 samples, 0.14%)</title><rect x="90.5055%" y="245" width="0.1366%" height="15" fill="rgb(213,199,7)" fg:x="1325" fg:w="2"/><text x="90.7555%" y="255.50"></text></g><g><title>core::iter::adapters::fuse::and_then_or_clear (2 samples, 0.14%)</title><rect x="90.5055%" y="229" width="0.1366%" height="15" fill="rgb(250,110,10)" fg:x="1325" fg:w="2"/><text x="90.7555%" y="239.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (1 samples, 0.07%)</title><rect x="90.5738%" y="213" width="0.0683%" height="15" fill="rgb(248,123,6)" fg:x="1326" fg:w="1"/><text x="90.8238%" y="223.50"></text></g><g><title>num_complex::Complex&lt;T&gt;::norm (12 samples, 0.82%)</title><rect x="90.7104%" y="213" width="0.8197%" height="15" fill="rgb(206,91,31)" fg:x="1328" fg:w="12"/><text x="90.9604%" y="223.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::hypot (12 samples, 0.82%)</title><rect x="90.7104%" y="197" width="0.8197%" height="15" fill="rgb(211,154,13)" fg:x="1328" fg:w="12"/><text x="90.9604%" y="207.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::hypot (12 samples, 0.82%)</title><rect x="90.7104%" y="181" width="0.8197%" height="15" fill="rgb(225,148,7)" fg:x="1328" fg:w="12"/><text x="90.9604%" y="191.50"></text></g><g><title>hypot (11 samples, 0.75%)</title><rect x="90.7787%" y="165" width="0.7514%" height="15" fill="rgb(220,160,43)" fg:x="1329" fg:w="11"/><text x="91.0287%" y="175.50"></text></g><g><title>&lt;rayon::iter::for_each::ForEachConsumer&lt;F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume (19 samples, 1.30%)</title><rect x="90.6421%" y="261" width="1.2978%" height="15" fill="rgb(213,52,39)" fg:x="1327" fg:w="19"/><text x="90.8921%" y="271.50"></text></g><g><title>julia::generate_image_buffer::_{{closure}} (19 samples, 1.30%)</title><rect x="90.6421%" y="245" width="1.2978%" height="15" fill="rgb(243,137,7)" fg:x="1327" fg:w="19"/><text x="90.8921%" y="255.50"></text></g><g><title>julia::color_generator (19 samples, 1.30%)</title><rect x="90.6421%" y="229" width="1.2978%" height="15" fill="rgb(230,79,13)" fg:x="1327" fg:w="19"/><text x="90.8921%" y="239.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::powf (6 samples, 0.41%)</title><rect x="91.5301%" y="213" width="0.4098%" height="15" fill="rgb(247,105,23)" fg:x="1340" fg:w="6"/><text x="91.7801%" y="223.50"></text></g><g><title>pow (6 samples, 0.41%)</title><rect x="91.5301%" y="197" width="0.4098%" height="15" fill="rgb(223,179,41)" fg:x="1340" fg:w="6"/><text x="91.7801%" y="207.50"></text></g><g><title>[libm.so.6] (5 samples, 0.34%)</title><rect x="91.5984%" y="181" width="0.3415%" height="15" fill="rgb(218,9,34)" fg:x="1341" fg:w="5"/><text x="91.8484%" y="191.50"></text></g><g><title>std::sys::pal::unix::futex::futex_wait (1 samples, 0.07%)</title><rect x="92.2131%" y="181" width="0.0683%" height="15" fill="rgb(222,106,8)" fg:x="1350" fg:w="1"/><text x="92.4631%" y="191.50"></text></g><g><title>core::bool::&lt;impl bool&gt;::then (1 samples, 0.07%)</title><rect x="92.2131%" y="165" width="0.0683%" height="15" fill="rgb(211,220,0)" fg:x="1350" fg:w="1"/><text x="92.4631%" y="175.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.07%)</title><rect x="92.2131%" y="149" width="0.0683%" height="15" fill="rgb(229,52,16)" fg:x="1350" fg:w="1"/><text x="92.4631%" y="159.50"></text></g><g><title>std::sys::pal::unix::os::errno (1 samples, 0.07%)</title><rect x="92.2131%" y="133" width="0.0683%" height="15" fill="rgb(212,155,18)" fg:x="1350" fg:w="1"/><text x="92.4631%" y="143.50"></text></g><g><title>syscall (1 samples, 0.07%)</title><rect x="92.2131%" y="117" width="0.0683%" height="15" fill="rgb(242,21,14)" fg:x="1350" fg:w="1"/><text x="92.4631%" y="127.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="92.2131%" y="101" width="0.0683%" height="15" fill="rgb(222,19,48)" fg:x="1350" fg:w="1"/><text x="92.4631%" y="111.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock_contended (2 samples, 0.14%)</title><rect x="92.2131%" y="197" width="0.1366%" height="15" fill="rgb(232,45,27)" fg:x="1350" fg:w="2"/><text x="92.4631%" y="207.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::spin (1 samples, 0.07%)</title><rect x="92.2814%" y="181" width="0.0683%" height="15" fill="rgb(249,103,42)" fg:x="1351" fg:w="1"/><text x="92.5314%" y="191.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="92.2814%" y="165" width="0.0683%" height="15" fill="rgb(246,81,33)" fg:x="1351" fg:w="1"/><text x="92.5314%" y="175.50"></text></g><g><title>core::mem::drop (23 samples, 1.57%)</title><rect x="91.9399%" y="261" width="1.5710%" height="15" fill="rgb(252,33,42)" fg:x="1346" fg:w="23"/><text x="92.1899%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;core::iter::adapters::fuse::Fuse&lt;image::buffer_::EnumeratePixelsMut&lt;image::color::Rgb&lt;u8&gt;&gt;&gt;&gt;&gt; (23 samples, 1.57%)</title><rect x="91.9399%" y="245" width="1.5710%" height="15" fill="rgb(209,212,41)" fg:x="1346" fg:w="23"/><text x="92.1899%" y="255.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (23 samples, 1.57%)</title><rect x="91.9399%" y="229" width="1.5710%" height="15" fill="rgb(207,154,6)" fg:x="1346" fg:w="23"/><text x="92.1899%" y="239.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (23 samples, 1.57%)</title><rect x="91.9399%" y="213" width="1.5710%" height="15" fill="rgb(223,64,47)" fg:x="1346" fg:w="23"/><text x="92.1899%" y="223.50"></text></g><g><title>syscall (17 samples, 1.16%)</title><rect x="92.3497%" y="197" width="1.1612%" height="15" fill="rgb(211,161,38)" fg:x="1352" fg:w="17"/><text x="92.5997%" y="207.50"></text></g><g><title>[unknown] (17 samples, 1.16%)</title><rect x="92.3497%" y="181" width="1.1612%" height="15" fill="rgb(219,138,40)" fg:x="1352" fg:w="17"/><text x="92.5997%" y="191.50"></text></g><g><title>[unknown] (17 samples, 1.16%)</title><rect x="92.3497%" y="165" width="1.1612%" height="15" fill="rgb(241,228,46)" fg:x="1352" fg:w="17"/><text x="92.5997%" y="175.50"></text></g><g><title>[unknown] (17 samples, 1.16%)</title><rect x="92.3497%" y="149" width="1.1612%" height="15" fill="rgb(223,209,38)" fg:x="1352" fg:w="17"/><text x="92.5997%" y="159.50"></text></g><g><title>[unknown] (15 samples, 1.02%)</title><rect x="92.4863%" y="133" width="1.0246%" height="15" fill="rgb(236,164,45)" fg:x="1354" fg:w="15"/><text x="92.7363%" y="143.50"></text></g><g><title>[unknown] (15 samples, 1.02%)</title><rect x="92.4863%" y="117" width="1.0246%" height="15" fill="rgb(231,15,5)" fg:x="1354" fg:w="15"/><text x="92.7363%" y="127.50"></text></g><g><title>[unknown] (12 samples, 0.82%)</title><rect x="92.6913%" y="101" width="0.8197%" height="15" fill="rgb(252,35,15)" fg:x="1357" fg:w="12"/><text x="92.9413%" y="111.50"></text></g><g><title>[unknown] (10 samples, 0.68%)</title><rect x="92.8279%" y="85" width="0.6831%" height="15" fill="rgb(248,181,18)" fg:x="1359" fg:w="10"/><text x="93.0779%" y="95.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (1 samples, 0.07%)</title><rect x="93.5109%" y="245" width="0.0683%" height="15" fill="rgb(233,39,42)" fg:x="1369" fg:w="1"/><text x="93.7609%" y="255.50"></text></g><g><title>std::sync::poison::Flag::guard (1 samples, 0.07%)</title><rect x="93.5109%" y="229" width="0.0683%" height="15" fill="rgb(238,110,33)" fg:x="1369" fg:w="1"/><text x="93.7609%" y="239.50"></text></g><g><title>std::thread::panicking (1 samples, 0.07%)</title><rect x="93.5109%" y="213" width="0.0683%" height="15" fill="rgb(233,195,10)" fg:x="1369" fg:w="1"/><text x="93.7609%" y="223.50"></text></g><g><title>std::panicking::panicking (1 samples, 0.07%)</title><rect x="93.5109%" y="197" width="0.0683%" height="15" fill="rgb(254,105,3)" fg:x="1369" fg:w="1"/><text x="93.7609%" y="207.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (1 samples, 0.07%)</title><rect x="93.5109%" y="181" width="0.0683%" height="15" fill="rgb(221,225,9)" fg:x="1369" fg:w="1"/><text x="93.7609%" y="191.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.07%)</title><rect x="93.5109%" y="165" width="0.0683%" height="15" fill="rgb(224,227,45)" fg:x="1369" fg:w="1"/><text x="93.7609%" y="175.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.07%)</title><rect x="93.5109%" y="149" width="0.0683%" height="15" fill="rgb(229,198,43)" fg:x="1369" fg:w="1"/><text x="93.7609%" y="159.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_err (3 samples, 0.20%)</title><rect x="93.5792%" y="229" width="0.2049%" height="15" fill="rgb(206,209,35)" fg:x="1370" fg:w="3"/><text x="93.8292%" y="239.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_ok (3 samples, 0.20%)</title><rect x="93.5792%" y="213" width="0.2049%" height="15" fill="rgb(245,195,53)" fg:x="1370" fg:w="3"/><text x="93.8292%" y="223.50"></text></g><g><title>std::sys::pal::unix::futex::futex_wait (16 samples, 1.09%)</title><rect x="93.8525%" y="213" width="1.0929%" height="15" fill="rgb(240,92,26)" fg:x="1374" fg:w="16"/><text x="94.1025%" y="223.50"></text></g><g><title>syscall (15 samples, 1.02%)</title><rect x="93.9208%" y="197" width="1.0246%" height="15" fill="rgb(207,40,23)" fg:x="1375" fg:w="15"/><text x="94.1708%" y="207.50"></text></g><g><title>[unknown] (15 samples, 1.02%)</title><rect x="93.9208%" y="181" width="1.0246%" height="15" fill="rgb(223,111,35)" fg:x="1375" fg:w="15"/><text x="94.1708%" y="191.50"></text></g><g><title>[unknown] (15 samples, 1.02%)</title><rect x="93.9208%" y="165" width="1.0246%" height="15" fill="rgb(229,147,28)" fg:x="1375" fg:w="15"/><text x="94.1708%" y="175.50"></text></g><g><title>[unknown] (13 samples, 0.89%)</title><rect x="94.0574%" y="149" width="0.8880%" height="15" fill="rgb(211,29,28)" fg:x="1377" fg:w="13"/><text x="94.3074%" y="159.50"></text></g><g><title>[unknown] (12 samples, 0.82%)</title><rect x="94.1257%" y="133" width="0.8197%" height="15" fill="rgb(228,72,33)" fg:x="1378" fg:w="12"/><text x="94.3757%" y="143.50"></text></g><g><title>[unknown] (11 samples, 0.75%)</title><rect x="94.1940%" y="117" width="0.7514%" height="15" fill="rgb(205,214,31)" fg:x="1379" fg:w="11"/><text x="94.4440%" y="127.50"></text></g><g><title>[unknown] (11 samples, 0.75%)</title><rect x="94.1940%" y="101" width="0.7514%" height="15" fill="rgb(224,111,15)" fg:x="1379" fg:w="11"/><text x="94.4440%" y="111.50"></text></g><g><title>[unknown] (11 samples, 0.75%)</title><rect x="94.1940%" y="85" width="0.7514%" height="15" fill="rgb(253,21,26)" fg:x="1379" fg:w="11"/><text x="94.4440%" y="95.50"></text></g><g><title>[unknown] (11 samples, 0.75%)</title><rect x="94.1940%" y="69" width="0.7514%" height="15" fill="rgb(245,139,43)" fg:x="1379" fg:w="11"/><text x="94.4440%" y="79.50"></text></g><g><title>[unknown] (7 samples, 0.48%)</title><rect x="94.4672%" y="53" width="0.4781%" height="15" fill="rgb(252,170,7)" fg:x="1383" fg:w="7"/><text x="94.7172%" y="63.50"></text></g><g><title>[unknown] (3 samples, 0.20%)</title><rect x="94.7404%" y="37" width="0.2049%" height="15" fill="rgb(231,118,14)" fg:x="1387" fg:w="3"/><text x="94.9904%" y="47.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock_contended (24 samples, 1.64%)</title><rect x="93.7842%" y="229" width="1.6393%" height="15" fill="rgb(238,83,0)" fg:x="1373" fg:w="24"/><text x="94.0342%" y="239.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::spin (7 samples, 0.48%)</title><rect x="94.9454%" y="213" width="0.4781%" height="15" fill="rgb(221,39,39)" fg:x="1390" fg:w="7"/><text x="95.1954%" y="223.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (1 samples, 0.07%)</title><rect x="95.3552%" y="197" width="0.0683%" height="15" fill="rgb(222,119,46)" fg:x="1396" fg:w="1"/><text x="95.6052%" y="207.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.07%)</title><rect x="95.3552%" y="181" width="0.0683%" height="15" fill="rgb(222,165,49)" fg:x="1396" fg:w="1"/><text x="95.6052%" y="191.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (1,313 samples, 89.69%)</title><rect x="5.9426%" y="1637" width="89.6858%" height="15" fill="rgb(219,113,52)" fg:x="87" fg:w="1313"/><text x="6.1926%" y="1647.50">rayon_core::registry::WorkerThread::execute</text></g><g><title>rayon_core::job::JobRef::execute (1,313 samples, 89.69%)</title><rect x="5.9426%" y="1621" width="89.6858%" height="15" fill="rgb(214,7,15)" fg:x="87" fg:w="1313"/><text x="6.1926%" y="1631.50">rayon_core::job::JobRef::execute</text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (1,313 samples, 89.69%)</title><rect x="5.9426%" y="1605" width="89.6858%" height="15" fill="rgb(235,32,4)" fg:x="87" fg:w="1313"/><text x="6.1926%" y="1615.50">&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute</text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call (1,308 samples, 89.34%)</title><rect x="6.2842%" y="1589" width="89.3443%" height="15" fill="rgb(238,90,54)" fg:x="92" fg:w="1308"/><text x="6.5342%" y="1599.50">rayon_core::job::JobResult&lt;T&gt;::call</text></g><g><title>rayon_core::unwind::halt_unwinding (1,308 samples, 89.34%)</title><rect x="6.2842%" y="1573" width="89.3443%" height="15" fill="rgb(213,208,19)" fg:x="92" fg:w="1308"/><text x="6.5342%" y="1583.50">rayon_core::unwind::halt_unwinding</text></g><g><title>std::panic::catch_unwind (1,308 samples, 89.34%)</title><rect x="6.2842%" y="1557" width="89.3443%" height="15" fill="rgb(233,156,4)" fg:x="92" fg:w="1308"/><text x="6.5342%" y="1567.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,308 samples, 89.34%)</title><rect x="6.2842%" y="1541" width="89.3443%" height="15" fill="rgb(207,194,5)" fg:x="92" fg:w="1308"/><text x="6.5342%" y="1551.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,308 samples, 89.34%)</title><rect x="6.2842%" y="1525" width="89.3443%" height="15" fill="rgb(206,111,30)" fg:x="92" fg:w="1308"/><text x="6.5342%" y="1535.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1,308 samples, 89.34%)</title><rect x="6.2842%" y="1509" width="89.3443%" height="15" fill="rgb(243,70,54)" fg:x="92" fg:w="1308"/><text x="6.5342%" y="1519.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once</text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call::_{{closure}} (1,308 samples, 89.34%)</title><rect x="6.2842%" y="1493" width="89.3443%" height="15" fill="rgb(242,28,8)" fg:x="92" fg:w="1308"/><text x="6.5342%" y="1503.50">rayon_core::job::JobResult&lt;T&gt;::call::_{{closure}}</text></g><g><title>rayon_core::registry::Registry::in_worker_cold::_{{closure}}::_{{closure}} (75 samples, 5.12%)</title><rect x="90.5055%" y="1477" width="5.1230%" height="15" fill="rgb(219,106,18)" fg:x="1325" fg:w="75"/><text x="90.7555%" y="1487.50">rayon_..</text></g><g><title>rayon_core::join::join_context::_{{closure}} (75 samples, 5.12%)</title><rect x="90.5055%" y="1461" width="5.1230%" height="15" fill="rgb(244,222,10)" fg:x="1325" fg:w="75"/><text x="90.7555%" y="1471.50">rayon_..</text></g><g><title>rayon_core::unwind::halt_unwinding (75 samples, 5.12%)</title><rect x="90.5055%" y="1445" width="5.1230%" height="15" fill="rgb(236,179,52)" fg:x="1325" fg:w="75"/><text x="90.7555%" y="1455.50">rayon_..</text></g><g><title>std::panic::catch_unwind (75 samples, 5.12%)</title><rect x="90.5055%" y="1429" width="5.1230%" height="15" fill="rgb(213,23,39)" fg:x="1325" fg:w="75"/><text x="90.7555%" y="1439.50">std::p..</text></g><g><title>std::panicking::try (75 samples, 5.12%)</title><rect x="90.5055%" y="1413" width="5.1230%" height="15" fill="rgb(238,48,10)" fg:x="1325" fg:w="75"/><text x="90.7555%" y="1423.50">std::p..</text></g><g><title>std::panicking::try::do_call (75 samples, 5.12%)</title><rect x="90.5055%" y="1397" width="5.1230%" height="15" fill="rgb(251,196,23)" fg:x="1325" fg:w="75"/><text x="90.7555%" y="1407.50">std::p..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (75 samples, 5.12%)</title><rect x="90.5055%" y="1381" width="5.1230%" height="15" fill="rgb(250,152,24)" fg:x="1325" fg:w="75"/><text x="90.7555%" y="1391.50">&lt;core:..</text></g><g><title>rayon_core::join::join_context::call_a::_{{closure}} (75 samples, 5.12%)</title><rect x="90.5055%" y="1365" width="5.1230%" height="15" fill="rgb(209,150,17)" fg:x="1325" fg:w="75"/><text x="90.7555%" y="1375.50">rayon_..</text></g><g><title>rayon::iter::plumbing::bridge_unindexed_producer_consumer::_{{closure}} (75 samples, 5.12%)</title><rect x="90.5055%" y="1349" width="5.1230%" height="15" fill="rgb(234,202,34)" fg:x="1325" fg:w="75"/><text x="90.7555%" y="1359.50">rayon:..</text></g><g><title>rayon::iter::plumbing::bridge_unindexed_producer_consumer (75 samples, 5.12%)</title><rect x="90.5055%" y="1333" width="5.1230%" height="15" fill="rgb(253,148,53)" fg:x="1325" fg:w="75"/><text x="90.7555%" y="1343.50">rayon:..</text></g><g><title>rayon_core::join::join_context (75 samples, 5.12%)</title><rect x="90.5055%" y="1317" width="5.1230%" height="15" fill="rgb(218,129,16)" fg:x="1325" fg:w="75"/><text x="90.7555%" y="1327.50">rayon_..</text></g><g><title>rayon_core::registry::in_worker (75 samples, 5.12%)</title><rect x="90.5055%" y="1301" width="5.1230%" height="15" fill="rgb(216,85,19)" fg:x="1325" fg:w="75"/><text x="90.7555%" y="1311.50">rayon_..</text></g><g><title>rayon_core::join::join_context::_{{closure}} (75 samples, 5.12%)</title><rect x="90.5055%" y="1285" width="5.1230%" height="15" fill="rgb(235,228,7)" fg:x="1325" fg:w="75"/><text x="90.7555%" y="1295.50">rayon_..</text></g><g><title>rayon_core::unwind::halt_unwinding (75 samples, 5.12%)</title><rect x="90.5055%" y="1269" width="5.1230%" height="15" fill="rgb(245,175,0)" fg:x="1325" fg:w="75"/><text x="90.7555%" y="1279.50">rayon_..</text></g><g><title>std::panic::catch_unwind (75 samples, 5.12%)</title><rect x="90.5055%" y="1253" width="5.1230%" height="15" fill="rgb(208,168,36)" fg:x="1325" fg:w="75"/><text x="90.7555%" y="1263.50">std::p..</text></g><g><title>std::panicking::try (75 samples, 5.12%)</title><rect x="90.5055%" y="1237" width="5.1230%" height="15" fill="rgb(246,171,24)" fg:x="1325" fg:w="75"/><text x="90.7555%" y="1247.50">std::p..</text></g><g><title>std::panicking::try::do_call (75 samples, 5.12%)</title><rect x="90.5055%" y="1221" width="5.1230%" height="15" fill="rgb(215,142,24)" fg:x="1325" fg:w="75"/><text x="90.7555%" y="1231.50">std::p..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (75 samples, 5.12%)</title><rect x="90.5055%" y="1205" width="5.1230%" height="15" fill="rgb(250,187,7)" fg:x="1325" fg:w="75"/><text x="90.7555%" y="1215.50">&lt;core:..</text></g><g><title>rayon_core::join::join_context::call_a::_{{closure}} (75 samples, 5.12%)</title><rect x="90.5055%" y="1189" width="5.1230%" height="15" fill="rgb(228,66,33)" fg:x="1325" fg:w="75"/><text x="90.7555%" y="1199.50">rayon_..</text></g><g><title>rayon::iter::plumbing::bridge_unindexed_producer_consumer::_{{closure}} (75 samples, 5.12%)</title><rect x="90.5055%" y="1173" width="5.1230%" height="15" fill="rgb(234,215,21)" fg:x="1325" fg:w="75"/><text x="90.7555%" y="1183.50">rayon:..</text></g><g><title>rayon::iter::plumbing::bridge_unindexed_producer_consumer (75 samples, 5.12%)</title><rect x="90.5055%" y="1157" width="5.1230%" height="15" fill="rgb(222,191,20)" fg:x="1325" fg:w="75"/><text x="90.7555%" y="1167.50">rayon:..</text></g><g><title>rayon_core::join::join_context (75 samples, 5.12%)</title><rect x="90.5055%" y="1141" width="5.1230%" height="15" fill="rgb(245,79,54)" fg:x="1325" fg:w="75"/><text x="90.7555%" y="1151.50">rayon_..</text></g><g><title>rayon_core::registry::in_worker (75 samples, 5.12%)</title><rect x="90.5055%" y="1125" width="5.1230%" height="15" fill="rgb(240,10,37)" fg:x="1325" fg:w="75"/><text x="90.7555%" y="1135.50">rayon_..</text></g><g><title>rayon_core::join::join_context::_{{closure}} (75 samples, 5.12%)</title><rect x="90.5055%" y="1109" width="5.1230%" height="15" fill="rgb(214,192,32)" fg:x="1325" fg:w="75"/><text x="90.7555%" y="1119.50">rayon_..</text></g><g><title>rayon_core::unwind::halt_unwinding (75 samples, 5.12%)</title><rect x="90.5055%" y="1093" width="5.1230%" height="15" fill="rgb(209,36,54)" fg:x="1325" fg:w="75"/><text x="90.7555%" y="1103.50">rayon_..</text></g><g><title>std::panic::catch_unwind (75 samples, 5.12%)</title><rect x="90.5055%" y="1077" width="5.1230%" height="15" fill="rgb(220,10,11)" fg:x="1325" fg:w="75"/><text x="90.7555%" y="1087.50">std::p..</text></g><g><title>std::panicking::try (75 samples, 5.12%)</title><rect x="90.5055%" y="1061" width="5.1230%" height="15" fill="rgb(221,106,17)" fg:x="1325" fg:w="75"/><text x="90.7555%" y="1071.50">std::p..</text></g><g><title>std::panicking::try::do_call (75 samples, 5.12%)</title><rect x="90.5055%" y="1045" width="5.1230%" height="15" fill="rgb(251,142,44)" fg:x="1325" fg:w="75"/><text x="90.7555%" y="1055.50">std::p..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (75 samples, 5.12%)</title><rect x="90.5055%" y="1029" width="5.1230%" height="15" fill="rgb(238,13,15)" fg:x="1325" fg:w="75"/><text x="90.7555%" y="1039.50">&lt;core:..</text></g><g><title>rayon_core::join::join_context::call_a::_{{closure}} (75 samples, 5.12%)</title><rect x="90.5055%" y="1013" width="5.1230%" height="15" fill="rgb(208,107,27)" fg:x="1325" fg:w="75"/><text x="90.7555%" y="1023.50">rayon_..</text></g><g><title>rayon::iter::plumbing::bridge_unindexed_producer_consumer::_{{closure}} (75 samples, 5.12%)</title><rect x="90.5055%" y="997" width="5.1230%" height="15" fill="rgb(205,136,37)" fg:x="1325" fg:w="75"/><text x="90.7555%" y="1007.50">rayon:..</text></g><g><title>rayon::iter::plumbing::bridge_unindexed_producer_consumer (75 samples, 5.12%)</title><rect x="90.5055%" y="981" width="5.1230%" height="15" fill="rgb(250,205,27)" fg:x="1325" fg:w="75"/><text x="90.7555%" y="991.50">rayon:..</text></g><g><title>rayon_core::join::join_context (75 samples, 5.12%)</title><rect x="90.5055%" y="965" width="5.1230%" height="15" fill="rgb(210,80,43)" fg:x="1325" fg:w="75"/><text x="90.7555%" y="975.50">rayon_..</text></g><g><title>rayon_core::registry::in_worker (75 samples, 5.12%)</title><rect x="90.5055%" y="949" width="5.1230%" height="15" fill="rgb(247,160,36)" fg:x="1325" fg:w="75"/><text x="90.7555%" y="959.50">rayon_..</text></g><g><title>rayon_core::join::join_context::_{{closure}} (75 samples, 5.12%)</title><rect x="90.5055%" y="933" width="5.1230%" height="15" fill="rgb(234,13,49)" fg:x="1325" fg:w="75"/><text x="90.7555%" y="943.50">rayon_..</text></g><g><title>rayon_core::unwind::halt_unwinding (75 samples, 5.12%)</title><rect x="90.5055%" y="917" width="5.1230%" height="15" fill="rgb(234,122,0)" fg:x="1325" fg:w="75"/><text x="90.7555%" y="927.50">rayon_..</text></g><g><title>std::panic::catch_unwind (75 samples, 5.12%)</title><rect x="90.5055%" y="901" width="5.1230%" height="15" fill="rgb(207,146,38)" fg:x="1325" fg:w="75"/><text x="90.7555%" y="911.50">std::p..</text></g><g><title>std::panicking::try (75 samples, 5.12%)</title><rect x="90.5055%" y="885" width="5.1230%" height="15" fill="rgb(207,177,25)" fg:x="1325" fg:w="75"/><text x="90.7555%" y="895.50">std::p..</text></g><g><title>std::panicking::try::do_call (75 samples, 5.12%)</title><rect x="90.5055%" y="869" width="5.1230%" height="15" fill="rgb(211,178,42)" fg:x="1325" fg:w="75"/><text x="90.7555%" y="879.50">std::p..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (75 samples, 5.12%)</title><rect x="90.5055%" y="853" width="5.1230%" height="15" fill="rgb(230,69,54)" fg:x="1325" fg:w="75"/><text x="90.7555%" y="863.50">&lt;core:..</text></g><g><title>rayon_core::join::join_context::call_a::_{{closure}} (75 samples, 5.12%)</title><rect x="90.5055%" y="837" width="5.1230%" height="15" fill="rgb(214,135,41)" fg:x="1325" fg:w="75"/><text x="90.7555%" y="847.50">rayon_..</text></g><g><title>rayon::iter::plumbing::bridge_unindexed_producer_consumer::_{{closure}} (75 samples, 5.12%)</title><rect x="90.5055%" y="821" width="5.1230%" height="15" fill="rgb(237,67,25)" fg:x="1325" fg:w="75"/><text x="90.7555%" y="831.50">rayon:..</text></g><g><title>rayon::iter::plumbing::bridge_unindexed_producer_consumer (75 samples, 5.12%)</title><rect x="90.5055%" y="805" width="5.1230%" height="15" fill="rgb(222,189,50)" fg:x="1325" fg:w="75"/><text x="90.7555%" y="815.50">rayon:..</text></g><g><title>rayon_core::join::join_context (75 samples, 5.12%)</title><rect x="90.5055%" y="789" width="5.1230%" height="15" fill="rgb(245,148,34)" fg:x="1325" fg:w="75"/><text x="90.7555%" y="799.50">rayon_..</text></g><g><title>rayon_core::registry::in_worker (75 samples, 5.12%)</title><rect x="90.5055%" y="773" width="5.1230%" height="15" fill="rgb(222,29,6)" fg:x="1325" fg:w="75"/><text x="90.7555%" y="783.50">rayon_..</text></g><g><title>rayon_core::join::join_context::_{{closure}} (75 samples, 5.12%)</title><rect x="90.5055%" y="757" width="5.1230%" height="15" fill="rgb(221,189,43)" fg:x="1325" fg:w="75"/><text x="90.7555%" y="767.50">rayon_..</text></g><g><title>rayon_core::unwind::halt_unwinding (75 samples, 5.12%)</title><rect x="90.5055%" y="741" width="5.1230%" height="15" fill="rgb(207,36,27)" fg:x="1325" fg:w="75"/><text x="90.7555%" y="751.50">rayon_..</text></g><g><title>std::panic::catch_unwind (75 samples, 5.12%)</title><rect x="90.5055%" y="725" width="5.1230%" height="15" fill="rgb(217,90,24)" fg:x="1325" fg:w="75"/><text x="90.7555%" y="735.50">std::p..</text></g><g><title>std::panicking::try (75 samples, 5.12%)</title><rect x="90.5055%" y="709" width="5.1230%" height="15" fill="rgb(224,66,35)" fg:x="1325" fg:w="75"/><text x="90.7555%" y="719.50">std::p..</text></g><g><title>std::panicking::try::do_call (75 samples, 5.12%)</title><rect x="90.5055%" y="693" width="5.1230%" height="15" fill="rgb(221,13,50)" fg:x="1325" fg:w="75"/><text x="90.7555%" y="703.50">std::p..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (75 samples, 5.12%)</title><rect x="90.5055%" y="677" width="5.1230%" height="15" fill="rgb(236,68,49)" fg:x="1325" fg:w="75"/><text x="90.7555%" y="687.50">&lt;core:..</text></g><g><title>rayon_core::join::join_context::call_a::_{{closure}} (75 samples, 5.12%)</title><rect x="90.5055%" y="661" width="5.1230%" height="15" fill="rgb(229,146,28)" fg:x="1325" fg:w="75"/><text x="90.7555%" y="671.50">rayon_..</text></g><g><title>rayon::iter::plumbing::bridge_unindexed_producer_consumer::_{{closure}} (75 samples, 5.12%)</title><rect x="90.5055%" y="645" width="5.1230%" height="15" fill="rgb(225,31,38)" fg:x="1325" fg:w="75"/><text x="90.7555%" y="655.50">rayon:..</text></g><g><title>rayon::iter::plumbing::bridge_unindexed_producer_consumer (75 samples, 5.12%)</title><rect x="90.5055%" y="629" width="5.1230%" height="15" fill="rgb(250,208,3)" fg:x="1325" fg:w="75"/><text x="90.7555%" y="639.50">rayon:..</text></g><g><title>rayon_core::join::join_context (75 samples, 5.12%)</title><rect x="90.5055%" y="613" width="5.1230%" height="15" fill="rgb(246,54,23)" fg:x="1325" fg:w="75"/><text x="90.7555%" y="623.50">rayon_..</text></g><g><title>rayon_core::registry::in_worker (75 samples, 5.12%)</title><rect x="90.5055%" y="597" width="5.1230%" height="15" fill="rgb(243,76,11)" fg:x="1325" fg:w="75"/><text x="90.7555%" y="607.50">rayon_..</text></g><g><title>rayon_core::join::join_context::_{{closure}} (75 samples, 5.12%)</title><rect x="90.5055%" y="581" width="5.1230%" height="15" fill="rgb(245,21,50)" fg:x="1325" fg:w="75"/><text x="90.7555%" y="591.50">rayon_..</text></g><g><title>rayon_core::unwind::halt_unwinding (75 samples, 5.12%)</title><rect x="90.5055%" y="565" width="5.1230%" height="15" fill="rgb(228,9,43)" fg:x="1325" fg:w="75"/><text x="90.7555%" y="575.50">rayon_..</text></g><g><title>std::panic::catch_unwind (75 samples, 5.12%)</title><rect x="90.5055%" y="549" width="5.1230%" height="15" fill="rgb(208,100,47)" fg:x="1325" fg:w="75"/><text x="90.7555%" y="559.50">std::p..</text></g><g><title>std::panicking::try (75 samples, 5.12%)</title><rect x="90.5055%" y="533" width="5.1230%" height="15" fill="rgb(232,26,8)" fg:x="1325" fg:w="75"/><text x="90.7555%" y="543.50">std::p..</text></g><g><title>std::panicking::try::do_call (75 samples, 5.12%)</title><rect x="90.5055%" y="517" width="5.1230%" height="15" fill="rgb(216,166,38)" fg:x="1325" fg:w="75"/><text x="90.7555%" y="527.50">std::p..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (75 samples, 5.12%)</title><rect x="90.5055%" y="501" width="5.1230%" height="15" fill="rgb(251,202,51)" fg:x="1325" fg:w="75"/><text x="90.7555%" y="511.50">&lt;core:..</text></g><g><title>rayon_core::join::join_context::call_a::_{{closure}} (75 samples, 5.12%)</title><rect x="90.5055%" y="485" width="5.1230%" height="15" fill="rgb(254,216,34)" fg:x="1325" fg:w="75"/><text x="90.7555%" y="495.50">rayon_..</text></g><g><title>rayon::iter::plumbing::bridge_unindexed_producer_consumer::_{{closure}} (75 samples, 5.12%)</title><rect x="90.5055%" y="469" width="5.1230%" height="15" fill="rgb(251,32,27)" fg:x="1325" fg:w="75"/><text x="90.7555%" y="479.50">rayon:..</text></g><g><title>rayon::iter::plumbing::bridge_unindexed_producer_consumer (75 samples, 5.12%)</title><rect x="90.5055%" y="453" width="5.1230%" height="15" fill="rgb(208,127,28)" fg:x="1325" fg:w="75"/><text x="90.7555%" y="463.50">rayon:..</text></g><g><title>rayon_core::join::join_context (75 samples, 5.12%)</title><rect x="90.5055%" y="437" width="5.1230%" height="15" fill="rgb(224,137,22)" fg:x="1325" fg:w="75"/><text x="90.7555%" y="447.50">rayon_..</text></g><g><title>rayon_core::registry::in_worker (75 samples, 5.12%)</title><rect x="90.5055%" y="421" width="5.1230%" height="15" fill="rgb(254,70,32)" fg:x="1325" fg:w="75"/><text x="90.7555%" y="431.50">rayon_..</text></g><g><title>rayon_core::join::join_context::_{{closure}} (75 samples, 5.12%)</title><rect x="90.5055%" y="405" width="5.1230%" height="15" fill="rgb(229,75,37)" fg:x="1325" fg:w="75"/><text x="90.7555%" y="415.50">rayon_..</text></g><g><title>rayon_core::unwind::halt_unwinding (75 samples, 5.12%)</title><rect x="90.5055%" y="389" width="5.1230%" height="15" fill="rgb(252,64,23)" fg:x="1325" fg:w="75"/><text x="90.7555%" y="399.50">rayon_..</text></g><g><title>std::panic::catch_unwind (75 samples, 5.12%)</title><rect x="90.5055%" y="373" width="5.1230%" height="15" fill="rgb(232,162,48)" fg:x="1325" fg:w="75"/><text x="90.7555%" y="383.50">std::p..</text></g><g><title>std::panicking::try (75 samples, 5.12%)</title><rect x="90.5055%" y="357" width="5.1230%" height="15" fill="rgb(246,160,12)" fg:x="1325" fg:w="75"/><text x="90.7555%" y="367.50">std::p..</text></g><g><title>std::panicking::try::do_call (75 samples, 5.12%)</title><rect x="90.5055%" y="341" width="5.1230%" height="15" fill="rgb(247,166,0)" fg:x="1325" fg:w="75"/><text x="90.7555%" y="351.50">std::p..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (75 samples, 5.12%)</title><rect x="90.5055%" y="325" width="5.1230%" height="15" fill="rgb(249,219,21)" fg:x="1325" fg:w="75"/><text x="90.7555%" y="335.50">&lt;core:..</text></g><g><title>rayon_core::join::join_context::call_a::_{{closure}} (75 samples, 5.12%)</title><rect x="90.5055%" y="309" width="5.1230%" height="15" fill="rgb(205,209,3)" fg:x="1325" fg:w="75"/><text x="90.7555%" y="319.50">rayon_..</text></g><g><title>rayon::iter::plumbing::bridge_unindexed_producer_consumer::_{{closure}} (75 samples, 5.12%)</title><rect x="90.5055%" y="293" width="5.1230%" height="15" fill="rgb(243,44,1)" fg:x="1325" fg:w="75"/><text x="90.7555%" y="303.50">rayon:..</text></g><g><title>&lt;&amp;rayon::iter::par_bridge::IterParallelProducer&lt;Iter&gt; as rayon::iter::plumbing::UnindexedProducer&gt;::fold_with (75 samples, 5.12%)</title><rect x="90.5055%" y="277" width="5.1230%" height="15" fill="rgb(206,159,16)" fg:x="1325" fg:w="75"/><text x="90.7555%" y="287.50">&lt;&amp;rayo..</text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (31 samples, 2.12%)</title><rect x="93.5109%" y="261" width="2.1175%" height="15" fill="rgb(244,77,30)" fg:x="1369" fg:w="31"/><text x="93.7609%" y="271.50">s..</text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (30 samples, 2.05%)</title><rect x="93.5792%" y="245" width="2.0492%" height="15" fill="rgb(218,69,12)" fg:x="1370" fg:w="30"/><text x="93.8292%" y="255.50">s..</text></g><g><title>syscall (3 samples, 0.20%)</title><rect x="95.4235%" y="229" width="0.2049%" height="15" fill="rgb(212,87,7)" fg:x="1397" fg:w="3"/><text x="95.6735%" y="239.50"></text></g><g><title>[unknown] (3 samples, 0.20%)</title><rect x="95.4235%" y="213" width="0.2049%" height="15" fill="rgb(245,114,25)" fg:x="1397" fg:w="3"/><text x="95.6735%" y="223.50"></text></g><g><title>rayon_core::registry::Registry::pop_injected_job (1 samples, 0.07%)</title><rect x="95.7650%" y="1589" width="0.0683%" height="15" fill="rgb(210,61,42)" fg:x="1402" fg:w="1"/><text x="96.0150%" y="1599.50"></text></g><g><title>crossbeam_deque::deque::Injector&lt;T&gt;::steal (1 samples, 0.07%)</title><rect x="95.7650%" y="1573" width="0.0683%" height="15" fill="rgb(211,52,33)" fg:x="1402" fg:w="1"/><text x="96.0150%" y="1583.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.07%)</title><rect x="95.7650%" y="1557" width="0.0683%" height="15" fill="rgb(234,58,33)" fg:x="1402" fg:w="1"/><text x="96.0150%" y="1567.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.07%)</title><rect x="95.7650%" y="1541" width="0.0683%" height="15" fill="rgb(220,115,36)" fg:x="1402" fg:w="1"/><text x="96.0150%" y="1551.50"></text></g><g><title>core::sync::atomic::AtomicIsize::load (2 samples, 0.14%)</title><rect x="95.8333%" y="1445" width="0.1366%" height="15" fill="rgb(243,153,54)" fg:x="1403" fg:w="2"/><text x="96.0833%" y="1455.50"></text></g><g><title>core::sync::atomic::atomic_load (2 samples, 0.14%)</title><rect x="95.8333%" y="1429" width="0.1366%" height="15" fill="rgb(251,47,18)" fg:x="1403" fg:w="2"/><text x="96.0833%" y="1439.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="95.9016%" y="1413" width="0.0683%" height="15" fill="rgb(242,102,42)" fg:x="1404" fg:w="1"/><text x="96.1516%" y="1423.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="95.9016%" y="1397" width="0.0683%" height="15" fill="rgb(234,31,38)" fg:x="1404" fg:w="1"/><text x="96.1516%" y="1407.50"></text></g><g><title>crossbeam_deque::deque::Buffer&lt;T&gt;::read (1 samples, 0.07%)</title><rect x="95.9699%" y="1445" width="0.0683%" height="15" fill="rgb(221,117,51)" fg:x="1405" fg:w="1"/><text x="96.2199%" y="1455.50"></text></g><g><title>crossbeam_deque::deque::Buffer&lt;T&gt;::at (1 samples, 0.07%)</title><rect x="95.9699%" y="1429" width="0.0683%" height="15" fill="rgb(212,20,18)" fg:x="1405" fg:w="1"/><text x="96.2199%" y="1439.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::_{{closure}} (6 samples, 0.41%)</title><rect x="95.8333%" y="1509" width="0.4098%" height="15" fill="rgb(245,133,36)" fg:x="1403" fg:w="6"/><text x="96.0833%" y="1519.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::_{{closure}} (6 samples, 0.41%)</title><rect x="95.8333%" y="1493" width="0.4098%" height="15" fill="rgb(212,6,19)" fg:x="1403" fg:w="6"/><text x="96.0833%" y="1503.50"></text></g><g><title>rayon_core::registry::WorkerThread::steal::_{{closure}} (6 samples, 0.41%)</title><rect x="95.8333%" y="1477" width="0.4098%" height="15" fill="rgb(218,1,36)" fg:x="1403" fg:w="6"/><text x="96.0833%" y="1487.50"></text></g><g><title>crossbeam_deque::deque::Stealer&lt;T&gt;::steal (6 samples, 0.41%)</title><rect x="95.8333%" y="1461" width="0.4098%" height="15" fill="rgb(246,84,54)" fg:x="1403" fg:w="6"/><text x="96.0833%" y="1471.50"></text></g><g><title>crossbeam_epoch::default::is_pinned (3 samples, 0.20%)</title><rect x="96.0383%" y="1445" width="0.2049%" height="15" fill="rgb(242,110,6)" fg:x="1406" fg:w="3"/><text x="96.2883%" y="1455.50"></text></g><g><title>crossbeam_epoch::default::with_handle (3 samples, 0.20%)</title><rect x="96.0383%" y="1429" width="0.2049%" height="15" fill="rgb(214,47,5)" fg:x="1406" fg:w="3"/><text x="96.2883%" y="1439.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (3 samples, 0.20%)</title><rect x="96.0383%" y="1413" width="0.2049%" height="15" fill="rgb(218,159,25)" fg:x="1406" fg:w="3"/><text x="96.2883%" y="1423.50"></text></g><g><title>crossbeam_epoch::default::HANDLE::__getit (3 samples, 0.20%)</title><rect x="96.0383%" y="1397" width="0.2049%" height="15" fill="rgb(215,211,28)" fg:x="1406" fg:w="3"/><text x="96.2883%" y="1407.50"></text></g><g><title>std::sys::thread_local::fast_local::Key&lt;T&gt;::get (3 samples, 0.20%)</title><rect x="96.0383%" y="1381" width="0.2049%" height="15" fill="rgb(238,59,32)" fg:x="1406" fg:w="3"/><text x="96.2883%" y="1391.50"></text></g><g><title>std::sys::thread_local::lazy::LazyKeyInner&lt;T&gt;::get (3 samples, 0.20%)</title><rect x="96.0383%" y="1365" width="0.2049%" height="15" fill="rgb(226,82,3)" fg:x="1406" fg:w="3"/><text x="96.2883%" y="1375.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (3 samples, 0.20%)</title><rect x="96.0383%" y="1349" width="0.2049%" height="15" fill="rgb(240,164,32)" fg:x="1406" fg:w="3"/><text x="96.2883%" y="1359.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="96.1749%" y="1333" width="0.0683%" height="15" fill="rgb(232,46,7)" fg:x="1408" fg:w="1"/><text x="96.4249%" y="1343.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="96.1749%" y="1317" width="0.0683%" height="15" fill="rgb(229,129,53)" fg:x="1408" fg:w="1"/><text x="96.4249%" y="1327.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="96.1749%" y="1301" width="0.0683%" height="15" fill="rgb(234,188,29)" fg:x="1408" fg:w="1"/><text x="96.4249%" y="1311.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="96.1749%" y="1285" width="0.0683%" height="15" fill="rgb(246,141,4)" fg:x="1408" fg:w="1"/><text x="96.4249%" y="1295.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="96.1749%" y="1269" width="0.0683%" height="15" fill="rgb(229,23,39)" fg:x="1408" fg:w="1"/><text x="96.4249%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;crossbeam_epoch::guard::Guard&gt; (1 samples, 0.07%)</title><rect x="96.3115%" y="1429" width="0.0683%" height="15" fill="rgb(206,12,3)" fg:x="1410" fg:w="1"/><text x="96.5615%" y="1439.50"></text></g><g><title>&lt;crossbeam_epoch::guard::Guard as core::ops::drop::Drop&gt;::drop (1 samples, 0.07%)</title><rect x="96.3115%" y="1413" width="0.0683%" height="15" fill="rgb(252,226,20)" fg:x="1410" fg:w="1"/><text x="96.5615%" y="1423.50"></text></g><g><title>crossbeam_epoch::internal::Local::unpin (1 samples, 0.07%)</title><rect x="96.3115%" y="1397" width="0.0683%" height="15" fill="rgb(216,123,35)" fg:x="1410" fg:w="1"/><text x="96.5615%" y="1407.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (1 samples, 0.07%)</title><rect x="96.3115%" y="1381" width="0.0683%" height="15" fill="rgb(212,68,40)" fg:x="1410" fg:w="1"/><text x="96.5615%" y="1391.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (1 samples, 0.07%)</title><rect x="96.3115%" y="1365" width="0.0683%" height="15" fill="rgb(254,125,32)" fg:x="1410" fg:w="1"/><text x="96.5615%" y="1375.50"></text></g><g><title>core::mem::replace (1 samples, 0.07%)</title><rect x="96.3115%" y="1349" width="0.0683%" height="15" fill="rgb(253,97,22)" fg:x="1410" fg:w="1"/><text x="96.5615%" y="1359.50"></text></g><g><title>core::ptr::write (1 samples, 0.07%)</title><rect x="96.3115%" y="1333" width="0.0683%" height="15" fill="rgb(241,101,14)" fg:x="1410" fg:w="1"/><text x="96.5615%" y="1343.50"></text></g><g><title>core::ptr::read_volatile (1 samples, 0.07%)</title><rect x="96.3798%" y="1413" width="0.0683%" height="15" fill="rgb(238,103,29)" fg:x="1411" fg:w="1"/><text x="96.6298%" y="1423.50"></text></g><g><title>crossbeam_deque::deque::Buffer&lt;T&gt;::read (2 samples, 0.14%)</title><rect x="96.3798%" y="1429" width="0.1366%" height="15" fill="rgb(233,195,47)" fg:x="1411" fg:w="2"/><text x="96.6298%" y="1439.50"></text></g><g><title>crossbeam_deque::deque::Buffer&lt;T&gt;::at (1 samples, 0.07%)</title><rect x="96.4481%" y="1413" width="0.0683%" height="15" fill="rgb(246,218,30)" fg:x="1412" fg:w="1"/><text x="96.6981%" y="1423.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (13 samples, 0.89%)</title><rect x="95.6967%" y="1621" width="0.8880%" height="15" fill="rgb(219,145,47)" fg:x="1401" fg:w="13"/><text x="95.9467%" y="1631.50"></text></g><g><title>rayon_core::registry::WorkerThread::find_work::_{{closure}} (12 samples, 0.82%)</title><rect x="95.7650%" y="1605" width="0.8197%" height="15" fill="rgb(243,12,26)" fg:x="1402" fg:w="12"/><text x="96.0150%" y="1615.50"></text></g><g><title>rayon_core::registry::WorkerThread::steal (11 samples, 0.75%)</title><rect x="95.8333%" y="1589" width="0.7514%" height="15" fill="rgb(214,87,16)" fg:x="1403" fg:w="11"/><text x="96.0833%" y="1599.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (11 samples, 0.75%)</title><rect x="95.8333%" y="1573" width="0.7514%" height="15" fill="rgb(208,99,42)" fg:x="1403" fg:w="11"/><text x="96.0833%" y="1583.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (11 samples, 0.75%)</title><rect x="95.8333%" y="1557" width="0.7514%" height="15" fill="rgb(253,99,2)" fg:x="1403" fg:w="11"/><text x="96.0833%" y="1567.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (11 samples, 0.75%)</title><rect x="95.8333%" y="1541" width="0.7514%" height="15" fill="rgb(220,168,23)" fg:x="1403" fg:w="11"/><text x="96.0833%" y="1551.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (11 samples, 0.75%)</title><rect x="95.8333%" y="1525" width="0.7514%" height="15" fill="rgb(242,38,24)" fg:x="1403" fg:w="11"/><text x="96.0833%" y="1535.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (5 samples, 0.34%)</title><rect x="96.2432%" y="1509" width="0.3415%" height="15" fill="rgb(225,182,9)" fg:x="1409" fg:w="5"/><text x="96.4932%" y="1519.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::_{{closure}} (5 samples, 0.34%)</title><rect x="96.2432%" y="1493" width="0.3415%" height="15" fill="rgb(243,178,37)" fg:x="1409" fg:w="5"/><text x="96.4932%" y="1503.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::_{{closure}} (5 samples, 0.34%)</title><rect x="96.2432%" y="1477" width="0.3415%" height="15" fill="rgb(232,139,19)" fg:x="1409" fg:w="5"/><text x="96.4932%" y="1487.50"></text></g><g><title>rayon_core::registry::WorkerThread::steal::_{{closure}} (5 samples, 0.34%)</title><rect x="96.2432%" y="1461" width="0.3415%" height="15" fill="rgb(225,201,24)" fg:x="1409" fg:w="5"/><text x="96.4932%" y="1471.50"></text></g><g><title>crossbeam_deque::deque::Stealer&lt;T&gt;::steal (4 samples, 0.27%)</title><rect x="96.3115%" y="1445" width="0.2732%" height="15" fill="rgb(221,47,46)" fg:x="1410" fg:w="4"/><text x="96.5615%" y="1455.50"></text></g><g><title>crossbeam_epoch::default::is_pinned (1 samples, 0.07%)</title><rect x="96.5164%" y="1429" width="0.0683%" height="15" fill="rgb(249,23,13)" fg:x="1413" fg:w="1"/><text x="96.7664%" y="1439.50"></text></g><g><title>crossbeam_epoch::default::with_handle (1 samples, 0.07%)</title><rect x="96.5164%" y="1413" width="0.0683%" height="15" fill="rgb(219,9,5)" fg:x="1413" fg:w="1"/><text x="96.7664%" y="1423.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap_or_else (1 samples, 0.07%)</title><rect x="96.5164%" y="1397" width="0.0683%" height="15" fill="rgb(254,171,16)" fg:x="1413" fg:w="1"/><text x="96.7664%" y="1407.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap_or_else (1 samples, 0.07%)</title><rect x="96.5847%" y="1557" width="0.0683%" height="15" fill="rgb(230,171,20)" fg:x="1414" fg:w="1"/><text x="96.8347%" y="1567.50"></text></g><g><title>crossbeam_epoch::default::is_pinned (2 samples, 0.14%)</title><rect x="96.5847%" y="1589" width="0.1366%" height="15" fill="rgb(210,71,41)" fg:x="1414" fg:w="2"/><text x="96.8347%" y="1599.50"></text></g><g><title>crossbeam_epoch::default::with_handle (2 samples, 0.14%)</title><rect x="96.5847%" y="1573" width="0.1366%" height="15" fill="rgb(206,173,20)" fg:x="1414" fg:w="2"/><text x="96.8347%" y="1583.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.07%)</title><rect x="96.6530%" y="1557" width="0.0683%" height="15" fill="rgb(233,88,34)" fg:x="1415" fg:w="1"/><text x="96.9030%" y="1567.50"></text></g><g><title>crossbeam_epoch::default::HANDLE::__getit (1 samples, 0.07%)</title><rect x="96.6530%" y="1541" width="0.0683%" height="15" fill="rgb(223,209,46)" fg:x="1415" fg:w="1"/><text x="96.9030%" y="1551.50"></text></g><g><title>std::sys::thread_local::fast_local::Key&lt;T&gt;::get (1 samples, 0.07%)</title><rect x="96.6530%" y="1525" width="0.0683%" height="15" fill="rgb(250,43,18)" fg:x="1415" fg:w="1"/><text x="96.9030%" y="1535.50"></text></g><g><title>std::sys::thread_local::lazy::LazyKeyInner&lt;T&gt;::get (1 samples, 0.07%)</title><rect x="96.6530%" y="1509" width="0.0683%" height="15" fill="rgb(208,13,10)" fg:x="1415" fg:w="1"/><text x="96.9030%" y="1519.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (1 samples, 0.07%)</title><rect x="96.6530%" y="1493" width="0.0683%" height="15" fill="rgb(212,200,36)" fg:x="1415" fg:w="1"/><text x="96.9030%" y="1503.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (1 samples, 0.07%)</title><rect x="96.7213%" y="1477" width="0.0683%" height="15" fill="rgb(225,90,30)" fg:x="1416" fg:w="1"/><text x="96.9713%" y="1487.50"></text></g><g><title>crossbeam_deque::deque::Stealer&lt;T&gt;::steal (5 samples, 0.34%)</title><rect x="96.5847%" y="1605" width="0.3415%" height="15" fill="rgb(236,182,39)" fg:x="1414" fg:w="5"/><text x="96.8347%" y="1615.50"></text></g><g><title>crossbeam_epoch::default::pin (3 samples, 0.20%)</title><rect x="96.7213%" y="1589" width="0.2049%" height="15" fill="rgb(212,144,35)" fg:x="1416" fg:w="3"/><text x="96.9713%" y="1599.50"></text></g><g><title>crossbeam_epoch::default::with_handle (3 samples, 0.20%)</title><rect x="96.7213%" y="1573" width="0.2049%" height="15" fill="rgb(228,63,44)" fg:x="1416" fg:w="3"/><text x="96.9713%" y="1583.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (3 samples, 0.20%)</title><rect x="96.7213%" y="1557" width="0.2049%" height="15" fill="rgb(228,109,6)" fg:x="1416" fg:w="3"/><text x="96.9713%" y="1567.50"></text></g><g><title>crossbeam_epoch::default::with_handle::_{{closure}} (3 samples, 0.20%)</title><rect x="96.7213%" y="1541" width="0.2049%" height="15" fill="rgb(238,117,24)" fg:x="1416" fg:w="3"/><text x="96.9713%" y="1551.50"></text></g><g><title>crossbeam_epoch::default::pin::_{{closure}} (3 samples, 0.20%)</title><rect x="96.7213%" y="1525" width="0.2049%" height="15" fill="rgb(242,26,26)" fg:x="1416" fg:w="3"/><text x="96.9713%" y="1535.50"></text></g><g><title>crossbeam_epoch::collector::LocalHandle::pin (3 samples, 0.20%)</title><rect x="96.7213%" y="1509" width="0.2049%" height="15" fill="rgb(221,92,48)" fg:x="1416" fg:w="3"/><text x="96.9713%" y="1519.50"></text></g><g><title>crossbeam_epoch::internal::Local::pin (3 samples, 0.20%)</title><rect x="96.7213%" y="1493" width="0.2049%" height="15" fill="rgb(209,209,32)" fg:x="1416" fg:w="3"/><text x="96.9713%" y="1503.50"></text></g><g><title>crossbeam_epoch::epoch::Epoch::pinned (2 samples, 0.14%)</title><rect x="96.7896%" y="1477" width="0.1366%" height="15" fill="rgb(221,70,22)" fg:x="1417" fg:w="2"/><text x="97.0396%" y="1487.50"></text></g><g><title>rayon_core::registry::WorkerThread::find_work (20 samples, 1.37%)</title><rect x="95.6284%" y="1637" width="1.3661%" height="15" fill="rgb(248,145,5)" fg:x="1400" fg:w="20"/><text x="95.8784%" y="1647.50"></text></g><g><title>rayon_core::registry::WorkerThread::take_local_job (6 samples, 0.41%)</title><rect x="96.5847%" y="1621" width="0.4098%" height="15" fill="rgb(226,116,26)" fg:x="1414" fg:w="6"/><text x="96.8347%" y="1631.50"></text></g><g><title>crossbeam_deque::deque::Worker&lt;T&gt;::pop (1 samples, 0.07%)</title><rect x="96.9262%" y="1605" width="0.0683%" height="15" fill="rgb(244,5,17)" fg:x="1419" fg:w="1"/><text x="97.1762%" y="1615.50"></text></g><g><title>core::sync::atomic::AtomicIsize::load (1 samples, 0.07%)</title><rect x="96.9262%" y="1589" width="0.0683%" height="15" fill="rgb(252,159,33)" fg:x="1419" fg:w="1"/><text x="97.1762%" y="1599.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.07%)</title><rect x="96.9262%" y="1573" width="0.0683%" height="15" fill="rgb(206,71,0)" fg:x="1419" fg:w="1"/><text x="97.1762%" y="1583.50"></text></g><g><title>_int_free_maybe_consolidate.part.0 (1 samples, 0.07%)</title><rect x="96.9945%" y="1205" width="0.0683%" height="15" fill="rgb(233,118,54)" fg:x="1420" fg:w="1"/><text x="97.2445%" y="1215.50"></text></g><g><title>crossbeam_epoch::collector::Collector::register (2 samples, 0.14%)</title><rect x="96.9945%" y="1461" width="0.1366%" height="15" fill="rgb(234,83,48)" fg:x="1420" fg:w="2"/><text x="97.2445%" y="1471.50"></text></g><g><title>crossbeam_epoch::internal::Local::register (2 samples, 0.14%)</title><rect x="96.9945%" y="1445" width="0.1366%" height="15" fill="rgb(228,3,54)" fg:x="1420" fg:w="2"/><text x="97.2445%" y="1455.50"></text></g><g><title>crossbeam_epoch::atomic::Owned&lt;T&gt;::new (2 samples, 0.14%)</title><rect x="96.9945%" y="1429" width="0.1366%" height="15" fill="rgb(226,155,13)" fg:x="1420" fg:w="2"/><text x="97.2445%" y="1439.50"></text></g><g><title>crossbeam_epoch::atomic::Owned&lt;T&gt;::init (2 samples, 0.14%)</title><rect x="96.9945%" y="1413" width="0.1366%" height="15" fill="rgb(241,28,37)" fg:x="1420" fg:w="2"/><text x="97.2445%" y="1423.50"></text></g><g><title>&lt;T as crossbeam_epoch::atomic::Pointable&gt;::init (2 samples, 0.14%)</title><rect x="96.9945%" y="1397" width="0.1366%" height="15" fill="rgb(233,93,10)" fg:x="1420" fg:w="2"/><text x="97.2445%" y="1407.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (2 samples, 0.14%)</title><rect x="96.9945%" y="1381" width="0.1366%" height="15" fill="rgb(225,113,19)" fg:x="1420" fg:w="2"/><text x="97.2445%" y="1391.50"></text></g><g><title>alloc::alloc::exchange_malloc (2 samples, 0.14%)</title><rect x="96.9945%" y="1365" width="0.1366%" height="15" fill="rgb(241,2,18)" fg:x="1420" fg:w="2"/><text x="97.2445%" y="1375.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.14%)</title><rect x="96.9945%" y="1349" width="0.1366%" height="15" fill="rgb(228,207,21)" fg:x="1420" fg:w="2"/><text x="97.2445%" y="1359.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.14%)</title><rect x="96.9945%" y="1333" width="0.1366%" height="15" fill="rgb(213,211,35)" fg:x="1420" fg:w="2"/><text x="97.2445%" y="1343.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.14%)</title><rect x="96.9945%" y="1317" width="0.1366%" height="15" fill="rgb(209,83,10)" fg:x="1420" fg:w="2"/><text x="97.2445%" y="1327.50"></text></g><g><title>__rdl_alloc (2 samples, 0.14%)</title><rect x="96.9945%" y="1301" width="0.1366%" height="15" fill="rgb(209,164,1)" fg:x="1420" fg:w="2"/><text x="97.2445%" y="1311.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2 samples, 0.14%)</title><rect x="96.9945%" y="1285" width="0.1366%" height="15" fill="rgb(213,184,43)" fg:x="1420" fg:w="2"/><text x="97.2445%" y="1295.50"></text></g><g><title>std::sys::pal::unix::alloc::aligned_malloc (2 samples, 0.14%)</title><rect x="96.9945%" y="1269" width="0.1366%" height="15" fill="rgb(231,61,34)" fg:x="1420" fg:w="2"/><text x="97.2445%" y="1279.50"></text></g><g><title>__posix_memalign (2 samples, 0.14%)</title><rect x="96.9945%" y="1253" width="0.1366%" height="15" fill="rgb(235,75,3)" fg:x="1420" fg:w="2"/><text x="97.2445%" y="1263.50"></text></g><g><title>_mid_memalign.isra.0 (2 samples, 0.14%)</title><rect x="96.9945%" y="1237" width="0.1366%" height="15" fill="rgb(220,106,47)" fg:x="1420" fg:w="2"/><text x="97.2445%" y="1247.50"></text></g><g><title>_int_memalign (2 samples, 0.14%)</title><rect x="96.9945%" y="1221" width="0.1366%" height="15" fill="rgb(210,196,33)" fg:x="1420" fg:w="2"/><text x="97.2445%" y="1231.50"></text></g><g><title>_int_malloc (1 samples, 0.07%)</title><rect x="97.0628%" y="1205" width="0.0683%" height="15" fill="rgb(229,154,42)" fg:x="1421" fg:w="1"/><text x="97.3128%" y="1215.50"></text></g><g><title>std::sys::thread_local::fast_local::Key&lt;T&gt;::try_initialize (3 samples, 0.20%)</title><rect x="96.9945%" y="1525" width="0.2049%" height="15" fill="rgb(228,114,26)" fg:x="1420" fg:w="3"/><text x="97.2445%" y="1535.50"></text></g><g><title>std::sys::thread_local::lazy::LazyKeyInner&lt;T&gt;::initialize (3 samples, 0.20%)</title><rect x="96.9945%" y="1509" width="0.2049%" height="15" fill="rgb(208,144,1)" fg:x="1420" fg:w="3"/><text x="97.2445%" y="1519.50"></text></g><g><title>crossbeam_epoch::default::HANDLE::__getit::_{{closure}} (3 samples, 0.20%)</title><rect x="96.9945%" y="1493" width="0.2049%" height="15" fill="rgb(239,112,37)" fg:x="1420" fg:w="3"/><text x="97.2445%" y="1503.50"></text></g><g><title>crossbeam_epoch::default::HANDLE::__init (3 samples, 0.20%)</title><rect x="96.9945%" y="1477" width="0.2049%" height="15" fill="rgb(210,96,50)" fg:x="1420" fg:w="3"/><text x="97.2445%" y="1487.50"></text></g><g><title>crossbeam_epoch::default::default_collector (1 samples, 0.07%)</title><rect x="97.1311%" y="1461" width="0.0683%" height="15" fill="rgb(222,178,2)" fg:x="1422" fg:w="1"/><text x="97.3811%" y="1471.50"></text></g><g><title>crossbeam_epoch::default::collector (1 samples, 0.07%)</title><rect x="97.1311%" y="1445" width="0.0683%" height="15" fill="rgb(226,74,18)" fg:x="1422" fg:w="1"/><text x="97.3811%" y="1455.50"></text></g><g><title>crossbeam_epoch::sync::once_lock::OnceLock&lt;T&gt;::get_or_init (1 samples, 0.07%)</title><rect x="97.1311%" y="1429" width="0.0683%" height="15" fill="rgb(225,67,54)" fg:x="1422" fg:w="1"/><text x="97.3811%" y="1439.50"></text></g><g><title>crossbeam_epoch::sync::once_lock::OnceLock&lt;T&gt;::initialize (1 samples, 0.07%)</title><rect x="97.1311%" y="1413" width="0.0683%" height="15" fill="rgb(251,92,32)" fg:x="1422" fg:w="1"/><text x="97.3811%" y="1423.50"></text></g><g><title>std::sync::once::Once::call_once (1 samples, 0.07%)</title><rect x="97.1311%" y="1397" width="0.0683%" height="15" fill="rgb(228,149,22)" fg:x="1422" fg:w="1"/><text x="97.3811%" y="1407.50"></text></g><g><title>std::sys::sync::once::futex::Once::call (1 samples, 0.07%)</title><rect x="97.1311%" y="1381" width="0.0683%" height="15" fill="rgb(243,54,13)" fg:x="1422" fg:w="1"/><text x="97.3811%" y="1391.50"></text></g><g><title>std::sync::once::Once::call_once::_{{closure}} (1 samples, 0.07%)</title><rect x="97.1311%" y="1365" width="0.0683%" height="15" fill="rgb(243,180,28)" fg:x="1422" fg:w="1"/><text x="97.3811%" y="1375.50"></text></g><g><title>crossbeam_epoch::sync::once_lock::OnceLock&lt;T&gt;::initialize::_{{closure}} (1 samples, 0.07%)</title><rect x="97.1311%" y="1349" width="0.0683%" height="15" fill="rgb(208,167,24)" fg:x="1422" fg:w="1"/><text x="97.3811%" y="1359.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.07%)</title><rect x="97.1311%" y="1333" width="0.0683%" height="15" fill="rgb(245,73,45)" fg:x="1422" fg:w="1"/><text x="97.3811%" y="1343.50"></text></g><g><title>crossbeam_epoch::collector::Collector::new (1 samples, 0.07%)</title><rect x="97.1311%" y="1317" width="0.0683%" height="15" fill="rgb(237,203,48)" fg:x="1422" fg:w="1"/><text x="97.3811%" y="1327.50"></text></g><g><title>&lt;crossbeam_epoch::collector::Collector as core::default::Default&gt;::default (1 samples, 0.07%)</title><rect x="97.1311%" y="1301" width="0.0683%" height="15" fill="rgb(211,197,16)" fg:x="1422" fg:w="1"/><text x="97.3811%" y="1311.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (1 samples, 0.07%)</title><rect x="97.1311%" y="1285" width="0.0683%" height="15" fill="rgb(243,99,51)" fg:x="1422" fg:w="1"/><text x="97.3811%" y="1295.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1 samples, 0.07%)</title><rect x="97.1311%" y="1269" width="0.0683%" height="15" fill="rgb(215,123,29)" fg:x="1422" fg:w="1"/><text x="97.3811%" y="1279.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.07%)</title><rect x="97.1311%" y="1253" width="0.0683%" height="15" fill="rgb(239,186,37)" fg:x="1422" fg:w="1"/><text x="97.3811%" y="1263.50"></text></g><g><title>crossbeam_epoch::default::is_pinned (4 samples, 0.27%)</title><rect x="96.9945%" y="1605" width="0.2732%" height="15" fill="rgb(252,136,39)" fg:x="1420" fg:w="4"/><text x="97.2445%" y="1615.50"></text></g><g><title>crossbeam_epoch::default::with_handle (4 samples, 0.27%)</title><rect x="96.9945%" y="1589" width="0.2732%" height="15" fill="rgb(223,213,32)" fg:x="1420" fg:w="4"/><text x="97.2445%" y="1599.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (4 samples, 0.27%)</title><rect x="96.9945%" y="1573" width="0.2732%" height="15" fill="rgb(233,115,5)" fg:x="1420" fg:w="4"/><text x="97.2445%" y="1583.50"></text></g><g><title>crossbeam_epoch::default::HANDLE::__getit (4 samples, 0.27%)</title><rect x="96.9945%" y="1557" width="0.2732%" height="15" fill="rgb(207,226,44)" fg:x="1420" fg:w="4"/><text x="97.2445%" y="1567.50"></text></g><g><title>std::sys::thread_local::fast_local::Key&lt;T&gt;::get (4 samples, 0.27%)</title><rect x="96.9945%" y="1541" width="0.2732%" height="15" fill="rgb(208,126,0)" fg:x="1420" fg:w="4"/><text x="97.2445%" y="1551.50"></text></g><g><title>std::sys::thread_local::lazy::LazyKeyInner&lt;T&gt;::get (1 samples, 0.07%)</title><rect x="97.1995%" y="1525" width="0.0683%" height="15" fill="rgb(244,66,21)" fg:x="1423" fg:w="1"/><text x="97.4495%" y="1535.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (1 samples, 0.07%)</title><rect x="97.1995%" y="1509" width="0.0683%" height="15" fill="rgb(222,97,12)" fg:x="1423" fg:w="1"/><text x="97.4495%" y="1519.50"></text></g><g><title>rayon_core::registry::WorkerThread::take_local_job (5 samples, 0.34%)</title><rect x="96.9945%" y="1637" width="0.3415%" height="15" fill="rgb(219,213,19)" fg:x="1420" fg:w="5"/><text x="97.2445%" y="1647.50"></text></g><g><title>crossbeam_deque::deque::Stealer&lt;T&gt;::steal (5 samples, 0.34%)</title><rect x="96.9945%" y="1621" width="0.3415%" height="15" fill="rgb(252,169,30)" fg:x="1420" fg:w="5"/><text x="97.2445%" y="1631.50"></text></g><g><title>crossbeam_epoch::default::pin (1 samples, 0.07%)</title><rect x="97.2678%" y="1605" width="0.0683%" height="15" fill="rgb(206,32,51)" fg:x="1424" fg:w="1"/><text x="97.5178%" y="1615.50"></text></g><g><title>crossbeam_epoch::default::with_handle (1 samples, 0.07%)</title><rect x="97.2678%" y="1589" width="0.0683%" height="15" fill="rgb(250,172,42)" fg:x="1424" fg:w="1"/><text x="97.5178%" y="1599.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.07%)</title><rect x="97.2678%" y="1573" width="0.0683%" height="15" fill="rgb(209,34,43)" fg:x="1424" fg:w="1"/><text x="97.5178%" y="1583.50"></text></g><g><title>crossbeam_epoch::default::with_handle::_{{closure}} (1 samples, 0.07%)</title><rect x="97.2678%" y="1557" width="0.0683%" height="15" fill="rgb(223,11,35)" fg:x="1424" fg:w="1"/><text x="97.5178%" y="1567.50"></text></g><g><title>crossbeam_epoch::default::pin::_{{closure}} (1 samples, 0.07%)</title><rect x="97.2678%" y="1541" width="0.0683%" height="15" fill="rgb(251,219,26)" fg:x="1424" fg:w="1"/><text x="97.5178%" y="1551.50"></text></g><g><title>crossbeam_epoch::collector::LocalHandle::pin (1 samples, 0.07%)</title><rect x="97.2678%" y="1525" width="0.0683%" height="15" fill="rgb(231,119,3)" fg:x="1424" fg:w="1"/><text x="97.5178%" y="1535.50"></text></g><g><title>crossbeam_epoch::internal::Local::pin (1 samples, 0.07%)</title><rect x="97.2678%" y="1509" width="0.0683%" height="15" fill="rgb(216,97,11)" fg:x="1424" fg:w="1"/><text x="97.5178%" y="1519.50"></text></g><g><title>crossbeam_epoch::internal::Global::collect (1 samples, 0.07%)</title><rect x="97.2678%" y="1493" width="0.0683%" height="15" fill="rgb(223,59,9)" fg:x="1424" fg:w="1"/><text x="97.5178%" y="1503.50"></text></g><g><title>crossbeam_epoch::internal::Global::try_advance (1 samples, 0.07%)</title><rect x="97.2678%" y="1477" width="0.0683%" height="15" fill="rgb(233,93,31)" fg:x="1424" fg:w="1"/><text x="97.5178%" y="1487.50"></text></g><g><title>&lt;crossbeam_epoch::sync::list::Iter&lt;T,C&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="97.2678%" y="1461" width="0.0683%" height="15" fill="rgb(239,81,33)" fg:x="1424" fg:w="1"/><text x="97.5178%" y="1471.50"></text></g><g><title>crossbeam_epoch::atomic::Shared&lt;T&gt;::tag (1 samples, 0.07%)</title><rect x="97.2678%" y="1445" width="0.0683%" height="15" fill="rgb(213,120,34)" fg:x="1424" fg:w="1"/><text x="97.5178%" y="1455.50"></text></g><g><title>crossbeam_epoch::atomic::decompose_tag (1 samples, 0.07%)</title><rect x="97.2678%" y="1429" width="0.0683%" height="15" fill="rgb(243,49,53)" fg:x="1424" fg:w="1"/><text x="97.5178%" y="1439.50"></text></g><g><title>__sched_yield (3 samples, 0.20%)</title><rect x="97.3361%" y="1621" width="0.2049%" height="15" fill="rgb(247,216,33)" fg:x="1425" fg:w="3"/><text x="97.5861%" y="1631.50"></text></g><g><title>[unknown] (3 samples, 0.20%)</title><rect x="97.3361%" y="1605" width="0.2049%" height="15" fill="rgb(226,26,14)" fg:x="1425" fg:w="3"/><text x="97.5861%" y="1615.50"></text></g><g><title>[unknown] (3 samples, 0.20%)</title><rect x="97.3361%" y="1589" width="0.2049%" height="15" fill="rgb(215,49,53)" fg:x="1425" fg:w="3"/><text x="97.5861%" y="1599.50"></text></g><g><title>[unknown] (3 samples, 0.20%)</title><rect x="97.3361%" y="1573" width="0.2049%" height="15" fill="rgb(245,162,40)" fg:x="1425" fg:w="3"/><text x="97.5861%" y="1583.50"></text></g><g><title>[unknown] (3 samples, 0.20%)</title><rect x="97.3361%" y="1557" width="0.2049%" height="15" fill="rgb(229,68,17)" fg:x="1425" fg:w="3"/><text x="97.5861%" y="1567.50"></text></g><g><title>[unknown] (2 samples, 0.14%)</title><rect x="97.4044%" y="1541" width="0.1366%" height="15" fill="rgb(213,182,10)" fg:x="1426" fg:w="2"/><text x="97.6544%" y="1551.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="97.4727%" y="1525" width="0.0683%" height="15" fill="rgb(245,125,30)" fg:x="1427" fg:w="1"/><text x="97.7227%" y="1535.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="97.4727%" y="1509" width="0.0683%" height="15" fill="rgb(232,202,2)" fg:x="1427" fg:w="1"/><text x="97.7227%" y="1519.50"></text></g><g><title>rayon_core::sleep::Sleep::sleep (3 samples, 0.20%)</title><rect x="97.5410%" y="1621" width="0.2049%" height="15" fill="rgb(237,140,51)" fg:x="1428" fg:w="3"/><text x="97.7910%" y="1631.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;bool&gt;&gt; (2 samples, 0.14%)</title><rect x="97.6093%" y="1605" width="0.1366%" height="15" fill="rgb(236,157,25)" fg:x="1429" fg:w="2"/><text x="97.8593%" y="1615.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.14%)</title><rect x="97.6093%" y="1589" width="0.1366%" height="15" fill="rgb(219,209,0)" fg:x="1429" fg:w="2"/><text x="97.8593%" y="1599.50"></text></g><g><title>std::sync::poison::Flag::done (2 samples, 0.14%)</title><rect x="97.6093%" y="1573" width="0.1366%" height="15" fill="rgb(240,116,54)" fg:x="1429" fg:w="2"/><text x="97.8593%" y="1583.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="97.6776%" y="1557" width="0.0683%" height="15" fill="rgb(216,10,36)" fg:x="1430" fg:w="1"/><text x="97.9276%" y="1567.50"></text></g><g><title>rayon_core::sleep::Sleep::no_work_found (7 samples, 0.48%)</title><rect x="97.3361%" y="1637" width="0.4781%" height="15" fill="rgb(222,72,44)" fg:x="1425" fg:w="7"/><text x="97.5861%" y="1647.50"></text></g><g><title>std::thread::yield_now (1 samples, 0.07%)</title><rect x="97.7459%" y="1621" width="0.0683%" height="15" fill="rgb(232,159,9)" fg:x="1431" fg:w="1"/><text x="97.9959%" y="1631.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (1,349 samples, 92.14%)</title><rect x="5.7377%" y="1893" width="92.1448%" height="15" fill="rgb(210,39,32)" fg:x="84" fg:w="1349"/><text x="5.9877%" y="1903.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (1,349 samples, 92.14%)</title><rect x="5.7377%" y="1877" width="92.1448%" height="15" fill="rgb(216,194,45)" fg:x="84" fg:w="1349"/><text x="5.9877%" y="1887.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (1,349 samples, 92.14%)</title><rect x="5.7377%" y="1861" width="92.1448%" height="15" fill="rgb(218,18,35)" fg:x="84" fg:w="1349"/><text x="5.9877%" y="1871.50">core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>std::thread::Builder::spawn_unchecked_::_{{closure}} (1,349 samples, 92.14%)</title><rect x="5.7377%" y="1845" width="92.1448%" height="15" fill="rgb(207,83,51)" fg:x="84" fg:w="1349"/><text x="5.9877%" y="1855.50">std::thread::Builder::spawn_unchecked_::_{{closure}}</text></g><g><title>std::panic::catch_unwind (1,349 samples, 92.14%)</title><rect x="5.7377%" y="1829" width="92.1448%" height="15" fill="rgb(225,63,43)" fg:x="84" fg:w="1349"/><text x="5.9877%" y="1839.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,349 samples, 92.14%)</title><rect x="5.7377%" y="1813" width="92.1448%" height="15" fill="rgb(207,57,36)" fg:x="84" fg:w="1349"/><text x="5.9877%" y="1823.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,349 samples, 92.14%)</title><rect x="5.7377%" y="1797" width="92.1448%" height="15" fill="rgb(216,99,33)" fg:x="84" fg:w="1349"/><text x="5.9877%" y="1807.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1,349 samples, 92.14%)</title><rect x="5.7377%" y="1781" width="92.1448%" height="15" fill="rgb(225,42,16)" fg:x="84" fg:w="1349"/><text x="5.9877%" y="1791.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once</text></g><g><title>std::thread::Builder::spawn_unchecked_::_{{closure}}::_{{closure}} (1,349 samples, 92.14%)</title><rect x="5.7377%" y="1765" width="92.1448%" height="15" fill="rgb(220,201,45)" fg:x="84" fg:w="1349"/><text x="5.9877%" y="1775.50">std::thread::Builder::spawn_unchecked_::_{{closure}}::_{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1,349 samples, 92.14%)</title><rect x="5.7377%" y="1749" width="92.1448%" height="15" fill="rgb(225,33,4)" fg:x="84" fg:w="1349"/><text x="5.9877%" y="1759.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>&lt;rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn&gt;::spawn::_{{closure}} (1,349 samples, 92.14%)</title><rect x="5.7377%" y="1733" width="92.1448%" height="15" fill="rgb(224,33,50)" fg:x="84" fg:w="1349"/><text x="5.9877%" y="1743.50">&lt;rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn&gt;::spawn::_{{closure}}</text></g><g><title>rayon_core::registry::ThreadBuilder::run (1,349 samples, 92.14%)</title><rect x="5.7377%" y="1717" width="92.1448%" height="15" fill="rgb(246,198,51)" fg:x="84" fg:w="1349"/><text x="5.9877%" y="1727.50">rayon_core::registry::ThreadBuilder::run</text></g><g><title>rayon_core::registry::main_loop (1,349 samples, 92.14%)</title><rect x="5.7377%" y="1701" width="92.1448%" height="15" fill="rgb(205,22,4)" fg:x="84" fg:w="1349"/><text x="5.9877%" y="1711.50">rayon_core::registry::main_loop</text></g><g><title>rayon_core::registry::WorkerThread::wait_until_out_of_work (1,347 samples, 92.01%)</title><rect x="5.8743%" y="1685" width="92.0082%" height="15" fill="rgb(206,3,8)" fg:x="86" fg:w="1347"/><text x="6.1243%" y="1695.50">rayon_core::registry::WorkerThread::wait_until_out_of_work</text></g><g><title>rayon_core::registry::WorkerThread::wait_until (1,347 samples, 92.01%)</title><rect x="5.8743%" y="1669" width="92.0082%" height="15" fill="rgb(251,23,15)" fg:x="86" fg:w="1347"/><text x="6.1243%" y="1679.50">rayon_core::registry::WorkerThread::wait_until</text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (1,347 samples, 92.01%)</title><rect x="5.8743%" y="1653" width="92.0082%" height="15" fill="rgb(252,88,28)" fg:x="86" fg:w="1347"/><text x="6.1243%" y="1663.50">rayon_core::registry::WorkerThread::wait_until_cold</text></g><g><title>rayon_core::sleep::Sleep::work_found (1 samples, 0.07%)</title><rect x="97.8142%" y="1637" width="0.0683%" height="15" fill="rgb(212,127,14)" fg:x="1432" fg:w="1"/><text x="98.0642%" y="1647.50"></text></g><g><title>rayon_core::sleep::Sleep::wake_any_threads (1 samples, 0.07%)</title><rect x="97.8142%" y="1621" width="0.0683%" height="15" fill="rgb(247,145,37)" fg:x="1432" fg:w="1"/><text x="98.0642%" y="1631.50"></text></g><g><title>rayon_core::sleep::Sleep::wake_specific_thread (1 samples, 0.07%)</title><rect x="97.8142%" y="1605" width="0.0683%" height="15" fill="rgb(209,117,53)" fg:x="1432" fg:w="1"/><text x="98.0642%" y="1615.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;bool&gt;&gt; (1 samples, 0.07%)</title><rect x="97.8142%" y="1589" width="0.0683%" height="15" fill="rgb(212,90,42)" fg:x="1432" fg:w="1"/><text x="98.0642%" y="1599.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.07%)</title><rect x="97.8142%" y="1573" width="0.0683%" height="15" fill="rgb(218,164,37)" fg:x="1432" fg:w="1"/><text x="98.0642%" y="1583.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (1 samples, 0.07%)</title><rect x="97.8142%" y="1557" width="0.0683%" height="15" fill="rgb(246,65,34)" fg:x="1432" fg:w="1"/><text x="98.0642%" y="1567.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock_contended (1 samples, 0.07%)</title><rect x="97.8142%" y="1541" width="0.0683%" height="15" fill="rgb(231,100,33)" fg:x="1432" fg:w="1"/><text x="98.0642%" y="1551.50"></text></g><g><title>std::sys::pal::unix::futex::futex_wait (1 samples, 0.07%)</title><rect x="97.8142%" y="1525" width="0.0683%" height="15" fill="rgb(228,126,14)" fg:x="1432" fg:w="1"/><text x="98.0642%" y="1535.50"></text></g><g><title>syscall (1 samples, 0.07%)</title><rect x="97.8142%" y="1509" width="0.0683%" height="15" fill="rgb(215,173,21)" fg:x="1432" fg:w="1"/><text x="98.0642%" y="1519.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="97.8142%" y="1493" width="0.0683%" height="15" fill="rgb(210,6,40)" fg:x="1432" fg:w="1"/><text x="98.0642%" y="1503.50"></text></g><g><title>__GI___pthread_attr_destroy (1 samples, 0.07%)</title><rect x="97.9508%" y="1845" width="0.0683%" height="15" fill="rgb(212,48,18)" fg:x="1434" fg:w="1"/><text x="98.2008%" y="1855.50"></text></g><g><title>cfree@GLIBC_2.2.5 (1 samples, 0.07%)</title><rect x="97.9508%" y="1829" width="0.0683%" height="15" fill="rgb(230,214,11)" fg:x="1434" fg:w="1"/><text x="98.2008%" y="1839.50"></text></g><g><title>_int_malloc (1 samples, 0.07%)</title><rect x="98.7705%" y="1797" width="0.0683%" height="15" fill="rgb(254,105,39)" fg:x="1446" fg:w="1"/><text x="99.0205%" y="1807.50"></text></g><g><title>__mmap (5 samples, 0.34%)</title><rect x="98.9754%" y="1765" width="0.3415%" height="15" fill="rgb(245,158,5)" fg:x="1449" fg:w="5"/><text x="99.2254%" y="1775.50"></text></g><g><title>[unknown] (5 samples, 0.34%)</title><rect x="98.9754%" y="1749" width="0.3415%" height="15" fill="rgb(249,208,11)" fg:x="1449" fg:w="5"/><text x="99.2254%" y="1759.50"></text></g><g><title>[unknown] (5 samples, 0.34%)</title><rect x="98.9754%" y="1733" width="0.3415%" height="15" fill="rgb(210,39,28)" fg:x="1449" fg:w="5"/><text x="99.2254%" y="1743.50"></text></g><g><title>[unknown] (3 samples, 0.20%)</title><rect x="99.1120%" y="1717" width="0.2049%" height="15" fill="rgb(211,56,53)" fg:x="1451" fg:w="3"/><text x="99.3620%" y="1727.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="99.2486%" y="1701" width="0.0683%" height="15" fill="rgb(226,201,30)" fg:x="1453" fg:w="1"/><text x="99.4986%" y="1711.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="99.2486%" y="1685" width="0.0683%" height="15" fill="rgb(239,101,34)" fg:x="1453" fg:w="1"/><text x="99.4986%" y="1695.50"></text></g><g><title>arena_get2.part.0 (8 samples, 0.55%)</title><rect x="98.8388%" y="1797" width="0.5464%" height="15" fill="rgb(226,209,5)" fg:x="1447" fg:w="8"/><text x="99.0888%" y="1807.50"></text></g><g><title>alloc_new_heap (8 samples, 0.55%)</title><rect x="98.8388%" y="1781" width="0.5464%" height="15" fill="rgb(250,105,47)" fg:x="1447" fg:w="8"/><text x="99.0888%" y="1791.50"></text></g><g><title>__mprotect (1 samples, 0.07%)</title><rect x="99.3169%" y="1765" width="0.0683%" height="15" fill="rgb(230,72,3)" fg:x="1454" fg:w="1"/><text x="99.5669%" y="1775.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="99.3169%" y="1749" width="0.0683%" height="15" fill="rgb(232,218,39)" fg:x="1454" fg:w="1"/><text x="99.5669%" y="1759.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="99.3169%" y="1733" width="0.0683%" height="15" fill="rgb(248,166,6)" fg:x="1454" fg:w="1"/><text x="99.5669%" y="1743.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="99.3169%" y="1717" width="0.0683%" height="15" fill="rgb(247,89,20)" fg:x="1454" fg:w="1"/><text x="99.5669%" y="1727.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="99.3169%" y="1701" width="0.0683%" height="15" fill="rgb(248,130,54)" fg:x="1454" fg:w="1"/><text x="99.5669%" y="1711.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="99.3169%" y="1685" width="0.0683%" height="15" fill="rgb(234,196,4)" fg:x="1454" fg:w="1"/><text x="99.5669%" y="1695.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="99.3169%" y="1669" width="0.0683%" height="15" fill="rgb(250,143,31)" fg:x="1454" fg:w="1"/><text x="99.5669%" y="1679.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="99.3169%" y="1653" width="0.0683%" height="15" fill="rgb(211,110,34)" fg:x="1454" fg:w="1"/><text x="99.5669%" y="1663.50"></text></g><g><title>malloc (16 samples, 1.09%)</title><rect x="98.4290%" y="1829" width="1.0929%" height="15" fill="rgb(215,124,48)" fg:x="1441" fg:w="16"/><text x="98.6790%" y="1839.50"></text></g><g><title>tcache_init.part.0 (14 samples, 0.96%)</title><rect x="98.5656%" y="1813" width="0.9563%" height="15" fill="rgb(216,46,13)" fg:x="1443" fg:w="14"/><text x="98.8156%" y="1823.50"></text></g><g><title>get_free_list (2 samples, 0.14%)</title><rect x="99.3852%" y="1797" width="0.1366%" height="15" fill="rgb(205,184,25)" fg:x="1455" fg:w="2"/><text x="99.6352%" y="1807.50"></text></g><g><title>pthread_attr_init@@GLIBC_2.2.5 (2 samples, 0.14%)</title><rect x="99.5219%" y="1829" width="0.1366%" height="15" fill="rgb(228,1,10)" fg:x="1457" fg:w="2"/><text x="99.7719%" y="1839.50"></text></g><g><title>pthread_attr_setaffinity_np@@GLIBC_2.32 (1 samples, 0.07%)</title><rect x="99.6585%" y="1829" width="0.0683%" height="15" fill="rgb(213,116,27)" fg:x="1459" fg:w="1"/><text x="99.9085%" y="1839.50"></text></g><g><title>__pthread_attr_extension (1 samples, 0.07%)</title><rect x="99.6585%" y="1813" width="0.0683%" height="15" fill="rgb(241,95,50)" fg:x="1459" fg:w="1"/><text x="99.9085%" y="1823.50"></text></g><g><title>__libc_calloc (1 samples, 0.07%)</title><rect x="99.6585%" y="1797" width="0.0683%" height="15" fill="rgb(238,48,32)" fg:x="1459" fg:w="1"/><text x="99.9085%" y="1807.50"></text></g><g><title>_int_malloc (1 samples, 0.07%)</title><rect x="99.6585%" y="1781" width="0.0683%" height="15" fill="rgb(235,113,49)" fg:x="1459" fg:w="1"/><text x="99.9085%" y="1791.50"></text></g><g><title>pthread_getaffinity_np@GLIBC_2.3.4 (1 samples, 0.07%)</title><rect x="99.7268%" y="1829" width="0.0683%" height="15" fill="rgb(205,127,43)" fg:x="1460" fg:w="1"/><text x="99.9768%" y="1839.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="99.7268%" y="1813" width="0.0683%" height="15" fill="rgb(250,162,2)" fg:x="1460" fg:w="1"/><text x="99.9768%" y="1823.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="99.7268%" y="1797" width="0.0683%" height="15" fill="rgb(220,13,41)" fg:x="1460" fg:w="1"/><text x="99.9768%" y="1807.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="99.7268%" y="1781" width="0.0683%" height="15" fill="rgb(249,221,25)" fg:x="1460" fg:w="1"/><text x="99.9768%" y="1791.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="99.7268%" y="1765" width="0.0683%" height="15" fill="rgb(215,208,19)" fg:x="1460" fg:w="1"/><text x="99.9768%" y="1775.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="99.7268%" y="1749" width="0.0683%" height="15" fill="rgb(236,175,2)" fg:x="1460" fg:w="1"/><text x="99.9768%" y="1759.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="99.7268%" y="1733" width="0.0683%" height="15" fill="rgb(241,52,2)" fg:x="1460" fg:w="1"/><text x="99.9768%" y="1743.50"></text></g><g><title>std::sys::pal::unix::stack_overflow::imp::current_guard (28 samples, 1.91%)</title><rect x="97.9508%" y="1861" width="1.9126%" height="15" fill="rgb(248,140,14)" fg:x="1434" fg:w="28"/><text x="98.2008%" y="1871.50">s..</text></g><g><title>pthread_getattr_np@@GLIBC_2.32 (27 samples, 1.84%)</title><rect x="98.0191%" y="1845" width="1.8443%" height="15" fill="rgb(253,22,42)" fg:x="1435" fg:w="27"/><text x="98.2691%" y="1855.50">p..</text></g><g><title>realloc (1 samples, 0.07%)</title><rect x="99.7951%" y="1829" width="0.0683%" height="15" fill="rgb(234,61,47)" fg:x="1461" fg:w="1"/><text x="100.0451%" y="1839.50"></text></g><g><title>clone3 (1,429 samples, 97.61%)</title><rect x="2.3224%" y="1941" width="97.6093%" height="15" fill="rgb(208,226,15)" fg:x="34" fg:w="1429"/><text x="2.5724%" y="1951.50">clone3</text></g><g><title>start_thread (1,428 samples, 97.54%)</title><rect x="2.3907%" y="1925" width="97.5410%" height="15" fill="rgb(217,221,4)" fg:x="35" fg:w="1428"/><text x="2.6407%" y="1935.50">start_thread</text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (1,380 samples, 94.26%)</title><rect x="5.6694%" y="1909" width="94.2623%" height="15" fill="rgb(212,174,34)" fg:x="83" fg:w="1380"/><text x="5.9194%" y="1919.50">std::sys::pal::unix::thread::Thread::new::thread_start</text></g><g><title>std::sys::pal::unix::stack_overflow::Handler::new (30 samples, 2.05%)</title><rect x="97.8825%" y="1893" width="2.0492%" height="15" fill="rgb(253,83,4)" fg:x="1433" fg:w="30"/><text x="98.1325%" y="1903.50">s..</text></g><g><title>std::sys::pal::unix::stack_overflow::imp::make_handler (30 samples, 2.05%)</title><rect x="97.8825%" y="1877" width="2.0492%" height="15" fill="rgb(250,195,49)" fg:x="1433" fg:w="30"/><text x="98.1325%" y="1887.50">s..</text></g><g><title>std::sys::pal::unix::stack_overflow::imp::get_stack (1 samples, 0.07%)</title><rect x="99.8634%" y="1861" width="0.0683%" height="15" fill="rgb(241,192,25)" fg:x="1462" fg:w="1"/><text x="100.1134%" y="1871.50"></text></g><g><title>__mmap (1 samples, 0.07%)</title><rect x="99.8634%" y="1845" width="0.0683%" height="15" fill="rgb(208,124,10)" fg:x="1462" fg:w="1"/><text x="100.1134%" y="1855.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="99.8634%" y="1829" width="0.0683%" height="15" fill="rgb(222,33,0)" fg:x="1462" fg:w="1"/><text x="100.1134%" y="1839.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="99.8634%" y="1813" width="0.0683%" height="15" fill="rgb(234,209,28)" fg:x="1462" fg:w="1"/><text x="100.1134%" y="1823.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="99.8634%" y="1797" width="0.0683%" height="15" fill="rgb(224,11,23)" fg:x="1462" fg:w="1"/><text x="100.1134%" y="1807.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="99.8634%" y="1781" width="0.0683%" height="15" fill="rgb(232,99,1)" fg:x="1462" fg:w="1"/><text x="100.1134%" y="1791.50"></text></g><g><title>all (1,464 samples, 100%)</title><rect x="0.0000%" y="1973" width="100.0000%" height="15" fill="rgb(237,95,45)" fg:x="0" fg:w="1464"/><text x="0.2500%" y="1983.50"></text></g><g><title>julia (1,464 samples, 100.00%)</title><rect x="0.0000%" y="1957" width="100.0000%" height="15" fill="rgb(208,109,11)" fg:x="0" fg:w="1464"/><text x="0.2500%" y="1967.50">julia</text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock_contended (1 samples, 0.07%)</title><rect x="99.9317%" y="1941" width="0.0683%" height="15" fill="rgb(216,190,48)" fg:x="1463" fg:w="1"/><text x="100.1817%" y="1951.50"></text></g><g><title>std::sys::pal::unix::futex::futex_wait (1 samples, 0.07%)</title><rect x="99.9317%" y="1925" width="0.0683%" height="15" fill="rgb(251,171,36)" fg:x="1463" fg:w="1"/><text x="100.1817%" y="1935.50"></text></g><g><title>pow (1 samples, 0.07%)</title><rect x="99.9317%" y="1909" width="0.0683%" height="15" fill="rgb(230,62,22)" fg:x="1463" fg:w="1"/><text x="100.1817%" y="1919.50"></text></g><g><title>__pow_finite@plt (1 samples, 0.07%)</title><rect x="99.9317%" y="1893" width="0.0683%" height="15" fill="rgb(225,114,35)" fg:x="1463" fg:w="1"/><text x="100.1817%" y="1903.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="99.9317%" y="1877" width="0.0683%" height="15" fill="rgb(215,118,42)" fg:x="1463" fg:w="1"/><text x="100.1817%" y="1887.50"></text></g></svg></svg>