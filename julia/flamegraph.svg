<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="934" onload="init(evt)" viewBox="0 0 1200 934" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="934" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="917.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="917.00"> </text><svg id="frames" x="10" width="1180" total_samples="737"><g><title>core::time::Duration::from_micros (2 samples, 0.27%)</title><rect x="0.1357%" y="613" width="0.2714%" height="15" fill="rgb(227,0,7)" fg:x="1" fg:w="2"/><text x="0.3857%" y="623.50"></text></g><g><title>async-io (7 samples, 0.95%)</title><rect x="0.0000%" y="869" width="0.9498%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="7"/><text x="0.2500%" y="879.50"></text></g><g><title>clone3 (7 samples, 0.95%)</title><rect x="0.0000%" y="853" width="0.9498%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="7"/><text x="0.2500%" y="863.50"></text></g><g><title>start_thread (7 samples, 0.95%)</title><rect x="0.0000%" y="837" width="0.9498%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="7"/><text x="0.2500%" y="847.50"></text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (7 samples, 0.95%)</title><rect x="0.0000%" y="821" width="0.9498%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="7"/><text x="0.2500%" y="831.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (7 samples, 0.95%)</title><rect x="0.0000%" y="805" width="0.9498%" height="15" fill="rgb(232,128,0)" fg:x="0" fg:w="7"/><text x="0.2500%" y="815.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (7 samples, 0.95%)</title><rect x="0.0000%" y="789" width="0.9498%" height="15" fill="rgb(207,160,47)" fg:x="0" fg:w="7"/><text x="0.2500%" y="799.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (7 samples, 0.95%)</title><rect x="0.0000%" y="773" width="0.9498%" height="15" fill="rgb(228,23,34)" fg:x="0" fg:w="7"/><text x="0.2500%" y="783.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::_{{closure}} (7 samples, 0.95%)</title><rect x="0.0000%" y="757" width="0.9498%" height="15" fill="rgb(218,30,26)" fg:x="0" fg:w="7"/><text x="0.2500%" y="767.50"></text></g><g><title>std::panic::catch_unwind (7 samples, 0.95%)</title><rect x="0.0000%" y="741" width="0.9498%" height="15" fill="rgb(220,122,19)" fg:x="0" fg:w="7"/><text x="0.2500%" y="751.50"></text></g><g><title>std::panicking::try (7 samples, 0.95%)</title><rect x="0.0000%" y="725" width="0.9498%" height="15" fill="rgb(250,228,42)" fg:x="0" fg:w="7"/><text x="0.2500%" y="735.50"></text></g><g><title>std::panicking::try::do_call (7 samples, 0.95%)</title><rect x="0.0000%" y="709" width="0.9498%" height="15" fill="rgb(240,193,28)" fg:x="0" fg:w="7"/><text x="0.2500%" y="719.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (7 samples, 0.95%)</title><rect x="0.0000%" y="693" width="0.9498%" height="15" fill="rgb(216,20,37)" fg:x="0" fg:w="7"/><text x="0.2500%" y="703.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::_{{closure}}::_{{closure}} (7 samples, 0.95%)</title><rect x="0.0000%" y="677" width="0.9498%" height="15" fill="rgb(206,188,39)" fg:x="0" fg:w="7"/><text x="0.2500%" y="687.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (7 samples, 0.95%)</title><rect x="0.0000%" y="661" width="0.9498%" height="15" fill="rgb(217,207,13)" fg:x="0" fg:w="7"/><text x="0.2500%" y="671.50"></text></g><g><title>async_io::driver::unparker::_{{closure}}::_{{closure}} (7 samples, 0.95%)</title><rect x="0.0000%" y="645" width="0.9498%" height="15" fill="rgb(231,73,38)" fg:x="0" fg:w="7"/><text x="0.2500%" y="655.50"></text></g><g><title>async_io::driver::main_loop (7 samples, 0.95%)</title><rect x="0.0000%" y="629" width="0.9498%" height="15" fill="rgb(225,20,46)" fg:x="0" fg:w="7"/><text x="0.2500%" y="639.50"></text></g><g><title>parking::Inner::park (4 samples, 0.54%)</title><rect x="0.4071%" y="613" width="0.5427%" height="15" fill="rgb(210,31,41)" fg:x="3" fg:w="4"/><text x="0.6571%" y="623.50"></text></g><g><title>std::sync::condvar::Condvar::wait_timeout (4 samples, 0.54%)</title><rect x="0.4071%" y="597" width="0.5427%" height="15" fill="rgb(221,200,47)" fg:x="3" fg:w="4"/><text x="0.6571%" y="607.50"></text></g><g><title>std::sys::sync::condvar::futex::Condvar::wait_timeout (4 samples, 0.54%)</title><rect x="0.4071%" y="581" width="0.5427%" height="15" fill="rgb(226,26,5)" fg:x="3" fg:w="4"/><text x="0.6571%" y="591.50"></text></g><g><title>std::sys::sync::condvar::futex::Condvar::wait_optional_timeout (3 samples, 0.41%)</title><rect x="0.5427%" y="565" width="0.4071%" height="15" fill="rgb(249,33,26)" fg:x="4" fg:w="3"/><text x="0.7927%" y="575.50"></text></g><g><title>std::sys::pal::unix::futex::futex_wait (3 samples, 0.41%)</title><rect x="0.5427%" y="549" width="0.4071%" height="15" fill="rgb(235,183,28)" fg:x="4" fg:w="3"/><text x="0.7927%" y="559.50"></text></g><g><title>syscall (3 samples, 0.41%)</title><rect x="0.5427%" y="533" width="0.4071%" height="15" fill="rgb(221,5,38)" fg:x="4" fg:w="3"/><text x="0.7927%" y="543.50"></text></g><g><title>[unknown] (3 samples, 0.41%)</title><rect x="0.5427%" y="517" width="0.4071%" height="15" fill="rgb(247,18,42)" fg:x="4" fg:w="3"/><text x="0.7927%" y="527.50"></text></g><g><title>[unknown] (3 samples, 0.41%)</title><rect x="0.5427%" y="501" width="0.4071%" height="15" fill="rgb(241,131,45)" fg:x="4" fg:w="3"/><text x="0.7927%" y="511.50"></text></g><g><title>[unknown] (3 samples, 0.41%)</title><rect x="0.5427%" y="485" width="0.4071%" height="15" fill="rgb(249,31,29)" fg:x="4" fg:w="3"/><text x="0.7927%" y="495.50"></text></g><g><title>[unknown] (3 samples, 0.41%)</title><rect x="0.5427%" y="469" width="0.4071%" height="15" fill="rgb(225,111,53)" fg:x="4" fg:w="3"/><text x="0.7927%" y="479.50"></text></g><g><title>[unknown] (3 samples, 0.41%)</title><rect x="0.5427%" y="453" width="0.4071%" height="15" fill="rgb(238,160,17)" fg:x="4" fg:w="3"/><text x="0.7927%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="2.4423%" y="837" width="0.1357%" height="15" fill="rgb(214,148,48)" fg:x="18" fg:w="1"/><text x="2.6923%" y="847.50"></text></g><g><title>[unknown] (13 samples, 1.76%)</title><rect x="0.9498%" y="853" width="1.7639%" height="15" fill="rgb(232,36,49)" fg:x="7" fg:w="13"/><text x="1.1998%" y="863.50"></text></g><g><title>syscall (1 samples, 0.14%)</title><rect x="2.5780%" y="837" width="0.1357%" height="15" fill="rgb(209,103,24)" fg:x="19" fg:w="1"/><text x="2.8280%" y="847.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="2.5780%" y="821" width="0.1357%" height="15" fill="rgb(229,88,8)" fg:x="19" fg:w="1"/><text x="2.8280%" y="831.50"></text></g><g><title>__getpagesize (2 samples, 0.27%)</title><rect x="2.7137%" y="853" width="0.2714%" height="15" fill="rgb(213,181,19)" fg:x="20" fg:w="2"/><text x="2.9637%" y="863.50"></text></g><g><title>[unknown] (2 samples, 0.27%)</title><rect x="2.7137%" y="837" width="0.2714%" height="15" fill="rgb(254,191,54)" fg:x="20" fg:w="2"/><text x="2.9637%" y="847.50"></text></g><g><title>_int_malloc (2 samples, 0.27%)</title><rect x="2.9851%" y="853" width="0.2714%" height="15" fill="rgb(241,83,37)" fg:x="22" fg:w="2"/><text x="3.2351%" y="863.50"></text></g><g><title>[unknown] (2 samples, 0.27%)</title><rect x="2.9851%" y="837" width="0.2714%" height="15" fill="rgb(233,36,39)" fg:x="22" fg:w="2"/><text x="3.2351%" y="847.50"></text></g><g><title>[unknown] (2 samples, 0.27%)</title><rect x="3.2564%" y="837" width="0.2714%" height="15" fill="rgb(226,3,54)" fg:x="24" fg:w="2"/><text x="3.5064%" y="847.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="3.3921%" y="821" width="0.1357%" height="15" fill="rgb(245,192,40)" fg:x="25" fg:w="1"/><text x="3.6421%" y="831.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="3.3921%" y="805" width="0.1357%" height="15" fill="rgb(238,167,29)" fg:x="25" fg:w="1"/><text x="3.6421%" y="815.50"></text></g><g><title>deflate::chained_hash_table::ChainedHashTable::add_hash_value (1 samples, 0.14%)</title><rect x="3.5278%" y="373" width="0.1357%" height="15" fill="rgb(232,182,51)" fg:x="26" fg:w="1"/><text x="3.7778%" y="383.50"></text></g><g><title>deflate::lz77::add_to_hash_table (1 samples, 0.14%)</title><rect x="3.6635%" y="373" width="0.1357%" height="15" fill="rgb(231,60,39)" fg:x="27" fg:w="1"/><text x="3.9135%" y="383.50"></text></g><g><title>deflate::chained_hash_table::ChainedHashTable::add_with_hash (1 samples, 0.14%)</title><rect x="3.6635%" y="357" width="0.1357%" height="15" fill="rgb(208,69,12)" fg:x="27" fg:w="1"/><text x="3.9135%" y="367.50"></text></g><g><title>image::buffer_::ImageBuffer&lt;P,Container&gt;::save (3 samples, 0.41%)</title><rect x="3.5278%" y="581" width="0.4071%" height="15" fill="rgb(235,93,37)" fg:x="26" fg:w="3"/><text x="3.7778%" y="591.50"></text></g><g><title>image::dynimage::save_buffer (3 samples, 0.41%)</title><rect x="3.5278%" y="565" width="0.4071%" height="15" fill="rgb(213,116,39)" fg:x="26" fg:w="3"/><text x="3.7778%" y="575.50"></text></g><g><title>image::io::free_functions::save_buffer_impl (3 samples, 0.41%)</title><rect x="3.5278%" y="549" width="0.4071%" height="15" fill="rgb(222,207,29)" fg:x="26" fg:w="3"/><text x="3.7778%" y="559.50"></text></g><g><title>image::io::free_functions::save_buffer_with_format_impl (3 samples, 0.41%)</title><rect x="3.5278%" y="533" width="0.4071%" height="15" fill="rgb(206,96,30)" fg:x="26" fg:w="3"/><text x="3.7778%" y="543.50"></text></g><g><title>&lt;image::codecs::png::PngEncoder&lt;W&gt; as image::image::ImageEncoder&gt;::write_image (3 samples, 0.41%)</title><rect x="3.5278%" y="517" width="0.4071%" height="15" fill="rgb(218,138,4)" fg:x="26" fg:w="3"/><text x="3.7778%" y="527.50"></text></g><g><title>image::codecs::png::PngEncoder&lt;W&gt;::encode (3 samples, 0.41%)</title><rect x="3.5278%" y="501" width="0.4071%" height="15" fill="rgb(250,191,14)" fg:x="26" fg:w="3"/><text x="3.7778%" y="511.50"></text></g><g><title>png::encoder::Writer&lt;W&gt;::write_image_data (3 samples, 0.41%)</title><rect x="3.5278%" y="485" width="0.4071%" height="15" fill="rgb(239,60,40)" fg:x="26" fg:w="3"/><text x="3.7778%" y="495.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.41%)</title><rect x="3.5278%" y="469" width="0.4071%" height="15" fill="rgb(206,27,48)" fg:x="26" fg:w="3"/><text x="3.7778%" y="479.50"></text></g><g><title>&lt;deflate::writer::ZlibEncoder&lt;W&gt; as std::io::Write&gt;::write (3 samples, 0.41%)</title><rect x="3.5278%" y="453" width="0.4071%" height="15" fill="rgb(225,35,8)" fg:x="26" fg:w="3"/><text x="3.7778%" y="463.50"></text></g><g><title>deflate::compress::compress_data_dynamic_n (3 samples, 0.41%)</title><rect x="3.5278%" y="437" width="0.4071%" height="15" fill="rgb(250,213,24)" fg:x="26" fg:w="3"/><text x="3.7778%" y="447.50"></text></g><g><title>deflate::lz77::lz77_compress_block (3 samples, 0.41%)</title><rect x="3.5278%" y="421" width="0.4071%" height="15" fill="rgb(247,123,22)" fg:x="26" fg:w="3"/><text x="3.7778%" y="431.50"></text></g><g><title>deflate::lz77::process_chunk (3 samples, 0.41%)</title><rect x="3.5278%" y="405" width="0.4071%" height="15" fill="rgb(231,138,38)" fg:x="26" fg:w="3"/><text x="3.7778%" y="415.50"></text></g><g><title>deflate::lz77::process_chunk_greedy (3 samples, 0.41%)</title><rect x="3.5278%" y="389" width="0.4071%" height="15" fill="rgb(231,145,46)" fg:x="26" fg:w="3"/><text x="3.7778%" y="399.50"></text></g><g><title>deflate::matching::longest_match (1 samples, 0.14%)</title><rect x="3.7992%" y="373" width="0.1357%" height="15" fill="rgb(251,118,11)" fg:x="28" fg:w="1"/><text x="4.0492%" y="383.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.14%)</title><rect x="4.2062%" y="565" width="0.1357%" height="15" fill="rgb(217,147,25)" fg:x="31" fg:w="1"/><text x="4.4562%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.14%)</title><rect x="4.3419%" y="565" width="0.1357%" height="15" fill="rgb(247,81,37)" fg:x="32" fg:w="1"/><text x="4.5919%" y="575.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.14%)</title><rect x="4.4776%" y="565" width="0.1357%" height="15" fill="rgb(209,12,38)" fg:x="33" fg:w="1"/><text x="4.7276%" y="575.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.14%)</title><rect x="4.4776%" y="549" width="0.1357%" height="15" fill="rgb(227,1,9)" fg:x="33" fg:w="1"/><text x="4.7276%" y="559.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (1 samples, 0.14%)</title><rect x="4.4776%" y="533" width="0.1357%" height="15" fill="rgb(248,47,43)" fg:x="33" fg:w="1"/><text x="4.7276%" y="543.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S,M&gt;::destroy (1 samples, 0.14%)</title><rect x="4.7490%" y="501" width="0.1357%" height="15" fill="rgb(221,10,30)" fg:x="35" fg:w="1"/><text x="4.9990%" y="511.50"></text></g><g><title>async_task::utils::abort_on_panic (1 samples, 0.14%)</title><rect x="4.7490%" y="485" width="0.1357%" height="15" fill="rgb(210,229,1)" fg:x="35" fg:w="1"/><text x="4.9990%" y="495.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S,M&gt;::destroy::_{{closure}} (1 samples, 0.14%)</title><rect x="4.7490%" y="469" width="0.1357%" height="15" fill="rgb(222,148,37)" fg:x="35" fg:w="1"/><text x="4.9990%" y="479.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (1 samples, 0.14%)</title><rect x="4.7490%" y="453" width="0.1357%" height="15" fill="rgb(234,67,33)" fg:x="35" fg:w="1"/><text x="4.9990%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_executor::Executor::schedule::{{closure}}&gt; (1 samples, 0.14%)</title><rect x="4.7490%" y="437" width="0.1357%" height="15" fill="rgb(247,98,35)" fg:x="35" fg:w="1"/><text x="4.9990%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;async_executor::State&gt;&gt; (1 samples, 0.14%)</title><rect x="4.7490%" y="421" width="0.1357%" height="15" fill="rgb(247,138,52)" fg:x="35" fg:w="1"/><text x="4.9990%" y="431.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.14%)</title><rect x="4.7490%" y="405" width="0.1357%" height="15" fill="rgb(213,79,30)" fg:x="35" fg:w="1"/><text x="4.9990%" y="415.50"></text></g><g><title>_int_free_create_chunk (2 samples, 0.27%)</title><rect x="5.4274%" y="453" width="0.2714%" height="15" fill="rgb(246,177,23)" fg:x="40" fg:w="2"/><text x="5.6774%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_task::task::Task&lt;()&gt;&gt; (10 samples, 1.36%)</title><rect x="4.6133%" y="549" width="1.3569%" height="15" fill="rgb(230,62,27)" fg:x="34" fg:w="10"/><text x="4.8633%" y="559.50"></text></g><g><title>&lt;async_task::task::Task&lt;T,M&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 1.36%)</title><rect x="4.6133%" y="533" width="1.3569%" height="15" fill="rgb(216,154,8)" fg:x="34" fg:w="10"/><text x="4.8633%" y="543.50"></text></g><g><title>async_task::task::Task&lt;T,M&gt;::set_detached (10 samples, 1.36%)</title><rect x="4.6133%" y="517" width="1.3569%" height="15" fill="rgb(244,35,45)" fg:x="34" fg:w="10"/><text x="4.8633%" y="527.50"></text></g><g><title>cfree@GLIBC_2.2.5 (8 samples, 1.09%)</title><rect x="4.8847%" y="501" width="1.0855%" height="15" fill="rgb(251,115,12)" fg:x="36" fg:w="8"/><text x="5.1347%" y="511.50"></text></g><g><title>_int_free (7 samples, 0.95%)</title><rect x="5.0204%" y="485" width="0.9498%" height="15" fill="rgb(240,54,50)" fg:x="37" fg:w="7"/><text x="5.2704%" y="495.50"></text></g><g><title>_int_free_merge_chunk (7 samples, 0.95%)</title><rect x="5.0204%" y="469" width="0.9498%" height="15" fill="rgb(233,84,52)" fg:x="37" fg:w="7"/><text x="5.2704%" y="479.50"></text></g><g><title>unlink_chunk.isra.0 (2 samples, 0.27%)</title><rect x="5.6988%" y="453" width="0.2714%" height="15" fill="rgb(207,117,47)" fg:x="42" fg:w="2"/><text x="5.9488%" y="463.50"></text></g><g><title>futures_lite::future::block_on (11 samples, 1.49%)</title><rect x="4.6133%" y="565" width="1.4925%" height="15" fill="rgb(249,43,39)" fg:x="34" fg:w="11"/><text x="4.8633%" y="575.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.14%)</title><rect x="5.9701%" y="549" width="0.1357%" height="15" fill="rgb(209,38,44)" fg:x="44" fg:w="1"/><text x="6.2201%" y="559.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.14%)</title><rect x="5.9701%" y="533" width="0.1357%" height="15" fill="rgb(236,212,23)" fg:x="44" fg:w="1"/><text x="6.2201%" y="543.50"></text></g><g><title>futures_lite::future::block_on::_{{closure}} (1 samples, 0.14%)</title><rect x="5.9701%" y="517" width="0.1357%" height="15" fill="rgb(242,79,21)" fg:x="44" fg:w="1"/><text x="6.2201%" y="527.50"></text></g><g><title>&lt;async_task::task::Task&lt;T,M&gt; as core::future::future::Future&gt;::poll (1 samples, 0.14%)</title><rect x="5.9701%" y="501" width="0.1357%" height="15" fill="rgb(211,96,35)" fg:x="44" fg:w="1"/><text x="6.2201%" y="511.50"></text></g><g><title>async_task::task::Task&lt;T,M&gt;::poll_task (1 samples, 0.14%)</title><rect x="5.9701%" y="485" width="0.1357%" height="15" fill="rgb(253,215,40)" fg:x="44" fg:w="1"/><text x="6.2201%" y="495.50"></text></g><g><title>&lt;async_lock::once_cell::State as core::cmp::PartialEq&gt;::eq (1 samples, 0.14%)</title><rect x="6.6486%" y="421" width="0.1357%" height="15" fill="rgb(211,81,21)" fg:x="49" fg:w="1"/><text x="6.8986%" y="431.50"></text></g><g><title>async_executor::Executor::schedule (2 samples, 0.27%)</title><rect x="6.6486%" y="517" width="0.2714%" height="15" fill="rgb(208,190,38)" fg:x="49" fg:w="2"/><text x="6.8986%" y="527.50"></text></g><g><title>async_executor::Executor::state (2 samples, 0.27%)</title><rect x="6.6486%" y="501" width="0.2714%" height="15" fill="rgb(235,213,38)" fg:x="49" fg:w="2"/><text x="6.8986%" y="511.50"></text></g><g><title>async_lock::once_cell::OnceCell&lt;T&gt;::get_or_init_blocking (2 samples, 0.27%)</title><rect x="6.6486%" y="485" width="0.2714%" height="15" fill="rgb(237,122,38)" fg:x="49" fg:w="2"/><text x="6.8986%" y="495.50"></text></g><g><title>async_lock::once_cell::OnceCell&lt;T&gt;::get_or_try_init_blocking (2 samples, 0.27%)</title><rect x="6.6486%" y="469" width="0.2714%" height="15" fill="rgb(244,218,35)" fg:x="49" fg:w="2"/><text x="6.8986%" y="479.50"></text></g><g><title>async_lock::once_cell::OnceCell&lt;T&gt;::get (2 samples, 0.27%)</title><rect x="6.6486%" y="453" width="0.2714%" height="15" fill="rgb(240,68,47)" fg:x="49" fg:w="2"/><text x="6.8986%" y="463.50"></text></g><g><title>async_lock::once_cell::OnceCell&lt;T&gt;::is_initialized (2 samples, 0.27%)</title><rect x="6.6486%" y="437" width="0.2714%" height="15" fill="rgb(210,16,53)" fg:x="49" fg:w="2"/><text x="6.8986%" y="447.50"></text></g><g><title>&lt;async_lock::once_cell::State as core::convert::From&lt;usize&gt;&gt;::from (1 samples, 0.14%)</title><rect x="6.7843%" y="421" width="0.1357%" height="15" fill="rgb(235,124,12)" fg:x="50" fg:w="1"/><text x="7.0343%" y="431.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.14%)</title><rect x="6.9199%" y="501" width="0.1357%" height="15" fill="rgb(224,169,11)" fg:x="51" fg:w="1"/><text x="7.1699%" y="511.50"></text></g><g><title>__lll_lock_wait_private (3 samples, 0.41%)</title><rect x="7.4627%" y="453" width="0.4071%" height="15" fill="rgb(250,166,2)" fg:x="55" fg:w="3"/><text x="7.7127%" y="463.50"></text></g><g><title>[unknown] (3 samples, 0.41%)</title><rect x="7.4627%" y="437" width="0.4071%" height="15" fill="rgb(242,216,29)" fg:x="55" fg:w="3"/><text x="7.7127%" y="447.50"></text></g><g><title>[unknown] (3 samples, 0.41%)</title><rect x="7.4627%" y="421" width="0.4071%" height="15" fill="rgb(230,116,27)" fg:x="55" fg:w="3"/><text x="7.7127%" y="431.50"></text></g><g><title>[unknown] (3 samples, 0.41%)</title><rect x="7.4627%" y="405" width="0.4071%" height="15" fill="rgb(228,99,48)" fg:x="55" fg:w="3"/><text x="7.7127%" y="415.50"></text></g><g><title>[unknown] (3 samples, 0.41%)</title><rect x="7.4627%" y="389" width="0.4071%" height="15" fill="rgb(253,11,6)" fg:x="55" fg:w="3"/><text x="7.7127%" y="399.50"></text></g><g><title>[unknown] (3 samples, 0.41%)</title><rect x="7.4627%" y="373" width="0.4071%" height="15" fill="rgb(247,143,39)" fg:x="55" fg:w="3"/><text x="7.7127%" y="383.50"></text></g><g><title>[unknown] (2 samples, 0.27%)</title><rect x="7.5984%" y="357" width="0.2714%" height="15" fill="rgb(236,97,10)" fg:x="56" fg:w="2"/><text x="7.8484%" y="367.50"></text></g><g><title>[unknown] (2 samples, 0.27%)</title><rect x="7.5984%" y="341" width="0.2714%" height="15" fill="rgb(233,208,19)" fg:x="56" fg:w="2"/><text x="7.8484%" y="351.50"></text></g><g><title>[unknown] (2 samples, 0.27%)</title><rect x="7.5984%" y="325" width="0.2714%" height="15" fill="rgb(216,164,2)" fg:x="56" fg:w="2"/><text x="7.8484%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="7.7341%" y="309" width="0.1357%" height="15" fill="rgb(220,129,5)" fg:x="57" fg:w="1"/><text x="7.9841%" y="319.50"></text></g><g><title>[unknown] (11 samples, 1.49%)</title><rect x="8.2768%" y="437" width="1.4925%" height="15" fill="rgb(242,17,10)" fg:x="61" fg:w="11"/><text x="8.5268%" y="447.50"></text></g><g><title>[unknown] (11 samples, 1.49%)</title><rect x="8.2768%" y="421" width="1.4925%" height="15" fill="rgb(242,107,0)" fg:x="61" fg:w="11"/><text x="8.5268%" y="431.50"></text></g><g><title>[unknown] (9 samples, 1.22%)</title><rect x="8.5482%" y="405" width="1.2212%" height="15" fill="rgb(251,28,31)" fg:x="63" fg:w="9"/><text x="8.7982%" y="415.50"></text></g><g><title>[unknown] (8 samples, 1.09%)</title><rect x="8.6839%" y="389" width="1.0855%" height="15" fill="rgb(233,223,10)" fg:x="64" fg:w="8"/><text x="8.9339%" y="399.50"></text></g><g><title>[unknown] (7 samples, 0.95%)</title><rect x="8.8195%" y="373" width="0.9498%" height="15" fill="rgb(215,21,27)" fg:x="65" fg:w="7"/><text x="9.0695%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="9.6336%" y="357" width="0.1357%" height="15" fill="rgb(232,23,21)" fg:x="71" fg:w="1"/><text x="9.8836%" y="367.50"></text></g><g><title>malloc (21 samples, 2.85%)</title><rect x="7.0556%" y="469" width="2.8494%" height="15" fill="rgb(244,5,23)" fg:x="52" fg:w="21"/><text x="7.3056%" y="479.50">ma..</text></g><g><title>_int_malloc (15 samples, 2.04%)</title><rect x="7.8697%" y="453" width="2.0353%" height="15" fill="rgb(226,81,46)" fg:x="58" fg:w="15"/><text x="8.1197%" y="463.50">_..</text></g><g><title>sysmalloc (1 samples, 0.14%)</title><rect x="9.7693%" y="437" width="0.1357%" height="15" fill="rgb(247,70,30)" fg:x="72" fg:w="1"/><text x="10.0193%" y="447.50"></text></g><g><title>__default_morecore@GLIBC_2.2.5 (1 samples, 0.14%)</title><rect x="9.7693%" y="421" width="0.1357%" height="15" fill="rgb(212,68,19)" fg:x="72" fg:w="1"/><text x="10.0193%" y="431.50"></text></g><g><title>__sbrk (1 samples, 0.14%)</title><rect x="9.7693%" y="405" width="0.1357%" height="15" fill="rgb(240,187,13)" fg:x="72" fg:w="1"/><text x="10.0193%" y="415.50"></text></g><g><title>__brk (1 samples, 0.14%)</title><rect x="9.7693%" y="389" width="0.1357%" height="15" fill="rgb(223,113,26)" fg:x="72" fg:w="1"/><text x="10.0193%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="9.7693%" y="373" width="0.1357%" height="15" fill="rgb(206,192,2)" fg:x="72" fg:w="1"/><text x="10.0193%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="9.7693%" y="357" width="0.1357%" height="15" fill="rgb(241,108,4)" fg:x="72" fg:w="1"/><text x="10.0193%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="9.7693%" y="341" width="0.1357%" height="15" fill="rgb(247,173,49)" fg:x="72" fg:w="1"/><text x="10.0193%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="9.7693%" y="325" width="0.1357%" height="15" fill="rgb(224,114,35)" fg:x="72" fg:w="1"/><text x="10.0193%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="9.7693%" y="309" width="0.1357%" height="15" fill="rgb(245,159,27)" fg:x="72" fg:w="1"/><text x="10.0193%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="9.7693%" y="293" width="0.1357%" height="15" fill="rgb(245,172,44)" fg:x="72" fg:w="1"/><text x="10.0193%" y="303.50"></text></g><g><title>async_task::runnable::Builder&lt;M&gt;::spawn_unchecked (23 samples, 3.12%)</title><rect x="6.9199%" y="517" width="3.1208%" height="15" fill="rgb(236,23,11)" fg:x="51" fg:w="23"/><text x="7.1699%" y="527.50">asy..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S,M&gt;::allocate (22 samples, 2.99%)</title><rect x="7.0556%" y="501" width="2.9851%" height="15" fill="rgb(205,117,38)" fg:x="52" fg:w="22"/><text x="7.3056%" y="511.50">asy..</text></g><g><title>alloc::alloc::alloc (22 samples, 2.99%)</title><rect x="7.0556%" y="485" width="2.9851%" height="15" fill="rgb(237,72,25)" fg:x="52" fg:w="22"/><text x="7.3056%" y="495.50">all..</text></g><g><title>syscall (1 samples, 0.14%)</title><rect x="9.9050%" y="469" width="0.1357%" height="15" fill="rgb(244,70,9)" fg:x="73" fg:w="1"/><text x="10.1550%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="9.9050%" y="453" width="0.1357%" height="15" fill="rgb(217,125,39)" fg:x="73" fg:w="1"/><text x="10.1550%" y="463.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_ok (5 samples, 0.68%)</title><rect x="10.3121%" y="437" width="0.6784%" height="15" fill="rgb(235,36,10)" fg:x="76" fg:w="5"/><text x="10.5621%" y="447.50"></text></g><g><title>async_executor::State::notify (6 samples, 0.81%)</title><rect x="10.3121%" y="453" width="0.8141%" height="15" fill="rgb(251,123,47)" fg:x="76" fg:w="6"/><text x="10.5621%" y="463.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (1 samples, 0.14%)</title><rect x="10.9905%" y="437" width="0.1357%" height="15" fill="rgb(221,13,13)" fg:x="81" fg:w="1"/><text x="11.2405%" y="447.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (1 samples, 0.14%)</title><rect x="10.9905%" y="421" width="0.1357%" height="15" fill="rgb(238,131,9)" fg:x="81" fg:w="1"/><text x="11.2405%" y="431.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock_contended (1 samples, 0.14%)</title><rect x="10.9905%" y="405" width="0.1357%" height="15" fill="rgb(211,50,8)" fg:x="81" fg:w="1"/><text x="11.2405%" y="415.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::spin (1 samples, 0.14%)</title><rect x="10.9905%" y="389" width="0.1357%" height="15" fill="rgb(245,182,24)" fg:x="81" fg:w="1"/><text x="11.2405%" y="399.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1 samples, 0.14%)</title><rect x="11.8046%" y="437" width="0.1357%" height="15" fill="rgb(242,14,37)" fg:x="87" fg:w="1"/><text x="12.0546%" y="447.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.14%)</title><rect x="11.8046%" y="421" width="0.1357%" height="15" fill="rgb(246,228,12)" fg:x="87" fg:w="1"/><text x="12.0546%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.14%)</title><rect x="11.8046%" y="405" width="0.1357%" height="15" fill="rgb(213,55,15)" fg:x="87" fg:w="1"/><text x="12.0546%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.14%)</title><rect x="11.8046%" y="389" width="0.1357%" height="15" fill="rgb(209,9,3)" fg:x="87" fg:w="1"/><text x="12.0546%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.14%)</title><rect x="11.8046%" y="373" width="0.1357%" height="15" fill="rgb(230,59,30)" fg:x="87" fg:w="1"/><text x="12.0546%" y="383.50"></text></g><g><title>malloc (1 samples, 0.14%)</title><rect x="11.8046%" y="357" width="0.1357%" height="15" fill="rgb(209,121,21)" fg:x="87" fg:w="1"/><text x="12.0546%" y="367.50"></text></g><g><title>_int_malloc (1 samples, 0.14%)</title><rect x="11.8046%" y="341" width="0.1357%" height="15" fill="rgb(220,109,13)" fg:x="87" fg:w="1"/><text x="12.0546%" y="351.50"></text></g><g><title>async_task::runnable::Runnable&lt;M&gt;::schedule (16 samples, 2.17%)</title><rect x="10.0407%" y="517" width="2.1710%" height="15" fill="rgb(232,18,1)" fg:x="74" fg:w="16"/><text x="10.2907%" y="527.50">a..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S,M&gt;::schedule (16 samples, 2.17%)</title><rect x="10.0407%" y="501" width="2.1710%" height="15" fill="rgb(215,41,42)" fg:x="74" fg:w="16"/><text x="10.2907%" y="511.50">a..</text></g><g><title>&lt;F as async_task::runnable::Schedule&lt;M&gt;&gt;::schedule (15 samples, 2.04%)</title><rect x="10.1764%" y="485" width="2.0353%" height="15" fill="rgb(224,123,36)" fg:x="75" fg:w="15"/><text x="10.4264%" y="495.50">&lt;..</text></g><g><title>async_executor::Executor::schedule::_{{closure}} (14 samples, 1.90%)</title><rect x="10.3121%" y="469" width="1.8996%" height="15" fill="rgb(240,125,3)" fg:x="76" fg:w="14"/><text x="10.5621%" y="479.50">a..</text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (8 samples, 1.09%)</title><rect x="11.1262%" y="453" width="1.0855%" height="15" fill="rgb(205,98,50)" fg:x="82" fg:w="8"/><text x="11.3762%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (2 samples, 0.27%)</title><rect x="11.9403%" y="437" width="0.2714%" height="15" fill="rgb(205,185,37)" fg:x="88" fg:w="2"/><text x="12.1903%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_or (2 samples, 0.27%)</title><rect x="11.9403%" y="421" width="0.2714%" height="15" fill="rgb(238,207,15)" fg:x="88" fg:w="2"/><text x="12.1903%" y="431.50"></text></g><g><title>async_task::runnable::Runnable&lt;M&gt;::waker (3 samples, 0.41%)</title><rect x="12.2117%" y="517" width="0.4071%" height="15" fill="rgb(213,199,42)" fg:x="90" fg:w="3"/><text x="12.4617%" y="527.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S,M&gt;::clone_waker (3 samples, 0.41%)</title><rect x="12.2117%" y="501" width="0.4071%" height="15" fill="rgb(235,201,11)" fg:x="90" fg:w="3"/><text x="12.4617%" y="511.50"></text></g><g><title>async_executor::Executor::spawn_inner (55 samples, 7.46%)</title><rect x="6.6486%" y="533" width="7.4627%" height="15" fill="rgb(207,46,11)" fg:x="49" fg:w="55"/><text x="6.8986%" y="543.50">async_exec..</text></g><g><title>slab::VacantEntry&lt;T&gt;::insert (11 samples, 1.49%)</title><rect x="12.6187%" y="517" width="1.4925%" height="15" fill="rgb(241,35,35)" fg:x="93" fg:w="11"/><text x="12.8687%" y="527.50"></text></g><g><title>slab::Slab&lt;T&gt;::insert_at (10 samples, 1.36%)</title><rect x="12.7544%" y="501" width="1.3569%" height="15" fill="rgb(243,32,47)" fg:x="94" fg:w="10"/><text x="13.0044%" y="511.50"></text></g><g><title>async_lock::once_cell::OnceCell&lt;T&gt;::get_or_try_init_blocking (2 samples, 0.27%)</title><rect x="14.1113%" y="533" width="0.2714%" height="15" fill="rgb(247,202,23)" fg:x="104" fg:w="2"/><text x="14.3613%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;slab::Slab&lt;core::task::wake::Waker&gt;&gt;&gt; (24 samples, 3.26%)</title><rect x="14.3826%" y="533" width="3.2564%" height="15" fill="rgb(219,102,11)" fg:x="106" fg:w="24"/><text x="14.6326%" y="543.50">cor..</text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (24 samples, 3.26%)</title><rect x="14.3826%" y="517" width="3.2564%" height="15" fill="rgb(243,110,44)" fg:x="106" fg:w="24"/><text x="14.6326%" y="527.50">&lt;st..</text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (24 samples, 3.26%)</title><rect x="14.3826%" y="501" width="3.2564%" height="15" fill="rgb(222,74,54)" fg:x="106" fg:w="24"/><text x="14.6326%" y="511.50">std..</text></g><g><title>syscall (23 samples, 3.12%)</title><rect x="14.5183%" y="485" width="3.1208%" height="15" fill="rgb(216,99,12)" fg:x="107" fg:w="23"/><text x="14.7683%" y="495.50">sys..</text></g><g><title>[unknown] (23 samples, 3.12%)</title><rect x="14.5183%" y="469" width="3.1208%" height="15" fill="rgb(226,22,26)" fg:x="107" fg:w="23"/><text x="14.7683%" y="479.50">[un..</text></g><g><title>[unknown] (22 samples, 2.99%)</title><rect x="14.6540%" y="453" width="2.9851%" height="15" fill="rgb(217,163,10)" fg:x="108" fg:w="22"/><text x="14.9040%" y="463.50">[un..</text></g><g><title>[unknown] (20 samples, 2.71%)</title><rect x="14.9254%" y="437" width="2.7137%" height="15" fill="rgb(213,25,53)" fg:x="110" fg:w="20"/><text x="15.1754%" y="447.50">[u..</text></g><g><title>[unknown] (17 samples, 2.31%)</title><rect x="15.3324%" y="421" width="2.3066%" height="15" fill="rgb(252,105,26)" fg:x="113" fg:w="17"/><text x="15.5824%" y="431.50">[..</text></g><g><title>[unknown] (16 samples, 2.17%)</title><rect x="15.4681%" y="405" width="2.1710%" height="15" fill="rgb(220,39,43)" fg:x="114" fg:w="16"/><text x="15.7181%" y="415.50">[..</text></g><g><title>[unknown] (13 samples, 1.76%)</title><rect x="15.8752%" y="389" width="1.7639%" height="15" fill="rgb(229,68,48)" fg:x="117" fg:w="13"/><text x="16.1252%" y="399.50"></text></g><g><title>[unknown] (8 samples, 1.09%)</title><rect x="16.5536%" y="373" width="1.0855%" height="15" fill="rgb(252,8,32)" fg:x="122" fg:w="8"/><text x="16.8036%" y="383.50"></text></g><g><title>[unknown] (3 samples, 0.41%)</title><rect x="17.2320%" y="357" width="0.4071%" height="15" fill="rgb(223,20,43)" fg:x="127" fg:w="3"/><text x="17.4820%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="17.5034%" y="341" width="0.1357%" height="15" fill="rgb(229,81,49)" fg:x="129" fg:w="1"/><text x="17.7534%" y="351.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_err (1 samples, 0.14%)</title><rect x="17.7748%" y="501" width="0.1357%" height="15" fill="rgb(236,28,36)" fg:x="131" fg:w="1"/><text x="18.0248%" y="511.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_ok (1 samples, 0.14%)</title><rect x="17.7748%" y="485" width="0.1357%" height="15" fill="rgb(249,185,26)" fg:x="131" fg:w="1"/><text x="18.0248%" y="495.50"></text></g><g><title>core::bool::&lt;impl bool&gt;::then (1 samples, 0.14%)</title><rect x="18.1818%" y="469" width="0.1357%" height="15" fill="rgb(249,174,33)" fg:x="134" fg:w="1"/><text x="18.4318%" y="479.50"></text></g><g><title>std::sys::pal::unix::futex::futex_wait (10 samples, 1.36%)</title><rect x="18.0461%" y="485" width="1.3569%" height="15" fill="rgb(233,201,37)" fg:x="133" fg:w="10"/><text x="18.2961%" y="495.50"></text></g><g><title>syscall (8 samples, 1.09%)</title><rect x="18.3175%" y="469" width="1.0855%" height="15" fill="rgb(221,78,26)" fg:x="135" fg:w="8"/><text x="18.5675%" y="479.50"></text></g><g><title>[unknown] (7 samples, 0.95%)</title><rect x="18.4532%" y="453" width="0.9498%" height="15" fill="rgb(250,127,30)" fg:x="136" fg:w="7"/><text x="18.7032%" y="463.50"></text></g><g><title>[unknown] (7 samples, 0.95%)</title><rect x="18.4532%" y="437" width="0.9498%" height="15" fill="rgb(230,49,44)" fg:x="136" fg:w="7"/><text x="18.7032%" y="447.50"></text></g><g><title>[unknown] (7 samples, 0.95%)</title><rect x="18.4532%" y="421" width="0.9498%" height="15" fill="rgb(229,67,23)" fg:x="136" fg:w="7"/><text x="18.7032%" y="431.50"></text></g><g><title>[unknown] (7 samples, 0.95%)</title><rect x="18.4532%" y="405" width="0.9498%" height="15" fill="rgb(249,83,47)" fg:x="136" fg:w="7"/><text x="18.7032%" y="415.50"></text></g><g><title>[unknown] (7 samples, 0.95%)</title><rect x="18.4532%" y="389" width="0.9498%" height="15" fill="rgb(215,43,3)" fg:x="136" fg:w="7"/><text x="18.7032%" y="399.50"></text></g><g><title>[unknown] (7 samples, 0.95%)</title><rect x="18.4532%" y="373" width="0.9498%" height="15" fill="rgb(238,154,13)" fg:x="136" fg:w="7"/><text x="18.7032%" y="383.50"></text></g><g><title>[unknown] (7 samples, 0.95%)</title><rect x="18.4532%" y="357" width="0.9498%" height="15" fill="rgb(219,56,2)" fg:x="136" fg:w="7"/><text x="18.7032%" y="367.50"></text></g><g><title>[unknown] (7 samples, 0.95%)</title><rect x="18.4532%" y="341" width="0.9498%" height="15" fill="rgb(233,0,4)" fg:x="136" fg:w="7"/><text x="18.7032%" y="351.50"></text></g><g><title>[unknown] (5 samples, 0.68%)</title><rect x="18.7246%" y="325" width="0.6784%" height="15" fill="rgb(235,30,7)" fg:x="138" fg:w="5"/><text x="18.9746%" y="335.50"></text></g><g><title>[unknown] (3 samples, 0.41%)</title><rect x="18.9959%" y="309" width="0.4071%" height="15" fill="rgb(250,79,13)" fg:x="140" fg:w="3"/><text x="19.2459%" y="319.50"></text></g><g><title>__libc_start_main@@GLIBC_2.34 (124 samples, 16.82%)</title><rect x="3.5278%" y="837" width="16.8250%" height="15" fill="rgb(211,146,34)" fg:x="26" fg:w="124"/><text x="3.7778%" y="847.50">__libc_start_main@@GLIBC_2..</text></g><g><title>__libc_start_call_main (124 samples, 16.82%)</title><rect x="3.5278%" y="821" width="16.8250%" height="15" fill="rgb(228,22,38)" fg:x="26" fg:w="124"/><text x="3.7778%" y="831.50">__libc_start_call_main</text></g><g><title>main (124 samples, 16.82%)</title><rect x="3.5278%" y="805" width="16.8250%" height="15" fill="rgb(235,168,5)" fg:x="26" fg:w="124"/><text x="3.7778%" y="815.50">main</text></g><g><title>std::rt::lang_start_internal (124 samples, 16.82%)</title><rect x="3.5278%" y="789" width="16.8250%" height="15" fill="rgb(221,155,16)" fg:x="26" fg:w="124"/><text x="3.7778%" y="799.50">std::rt::lang_start_intern..</text></g><g><title>std::panic::catch_unwind (124 samples, 16.82%)</title><rect x="3.5278%" y="773" width="16.8250%" height="15" fill="rgb(215,215,53)" fg:x="26" fg:w="124"/><text x="3.7778%" y="783.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (124 samples, 16.82%)</title><rect x="3.5278%" y="757" width="16.8250%" height="15" fill="rgb(223,4,10)" fg:x="26" fg:w="124"/><text x="3.7778%" y="767.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (124 samples, 16.82%)</title><rect x="3.5278%" y="741" width="16.8250%" height="15" fill="rgb(234,103,6)" fg:x="26" fg:w="124"/><text x="3.7778%" y="751.50">std::panicking::try::do_ca..</text></g><g><title>std::rt::lang_start_internal::_{{closure}} (124 samples, 16.82%)</title><rect x="3.5278%" y="725" width="16.8250%" height="15" fill="rgb(227,97,0)" fg:x="26" fg:w="124"/><text x="3.7778%" y="735.50">std::rt::lang_start_intern..</text></g><g><title>std::panic::catch_unwind (124 samples, 16.82%)</title><rect x="3.5278%" y="709" width="16.8250%" height="15" fill="rgb(234,150,53)" fg:x="26" fg:w="124"/><text x="3.7778%" y="719.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (124 samples, 16.82%)</title><rect x="3.5278%" y="693" width="16.8250%" height="15" fill="rgb(228,201,54)" fg:x="26" fg:w="124"/><text x="3.7778%" y="703.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (124 samples, 16.82%)</title><rect x="3.5278%" y="677" width="16.8250%" height="15" fill="rgb(222,22,37)" fg:x="26" fg:w="124"/><text x="3.7778%" y="687.50">std::panicking::try::do_ca..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (124 samples, 16.82%)</title><rect x="3.5278%" y="661" width="16.8250%" height="15" fill="rgb(237,53,32)" fg:x="26" fg:w="124"/><text x="3.7778%" y="671.50">core::ops::function::impls..</text></g><g><title>std::rt::lang_start::_{{closure}} (124 samples, 16.82%)</title><rect x="3.5278%" y="645" width="16.8250%" height="15" fill="rgb(233,25,53)" fg:x="26" fg:w="124"/><text x="3.7778%" y="655.50">std::rt::lang_start::_{{cl..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (124 samples, 16.82%)</title><rect x="3.5278%" y="629" width="16.8250%" height="15" fill="rgb(210,40,34)" fg:x="26" fg:w="124"/><text x="3.7778%" y="639.50">std::sys_common::backtrace..</text></g><g><title>core::ops::function::FnOnce::call_once (124 samples, 16.82%)</title><rect x="3.5278%" y="613" width="16.8250%" height="15" fill="rgb(241,220,44)" fg:x="26" fg:w="124"/><text x="3.7778%" y="623.50">core::ops::function::FnOnc..</text></g><g><title>julia::main (124 samples, 16.82%)</title><rect x="3.5278%" y="597" width="16.8250%" height="15" fill="rgb(235,28,35)" fg:x="26" fg:w="124"/><text x="3.7778%" y="607.50">julia::main</text></g><g><title>julia::generate_image_buffer (121 samples, 16.42%)</title><rect x="3.9349%" y="581" width="16.4179%" height="15" fill="rgb(210,56,17)" fg:x="29" fg:w="121"/><text x="4.1849%" y="591.50">julia::generate_image_buf..</text></g><g><title>smol::spawn::spawn (105 samples, 14.25%)</title><rect x="6.1058%" y="565" width="14.2469%" height="15" fill="rgb(224,130,29)" fg:x="45" fg:w="105"/><text x="6.3558%" y="575.50">smol::spawn::spawn</text></g><g><title>async_executor::Executor::spawn (102 samples, 13.84%)</title><rect x="6.5129%" y="549" width="13.8399%" height="15" fill="rgb(235,212,8)" fg:x="48" fg:w="102"/><text x="6.7629%" y="559.50">async_executor::Execu..</text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (20 samples, 2.71%)</title><rect x="17.6391%" y="533" width="2.7137%" height="15" fill="rgb(223,33,50)" fg:x="130" fg:w="20"/><text x="17.8891%" y="543.50">st..</text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (20 samples, 2.71%)</title><rect x="17.6391%" y="517" width="2.7137%" height="15" fill="rgb(219,149,13)" fg:x="130" fg:w="20"/><text x="17.8891%" y="527.50">st..</text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock_contended (18 samples, 2.44%)</title><rect x="17.9104%" y="501" width="2.4423%" height="15" fill="rgb(250,156,29)" fg:x="132" fg:w="18"/><text x="18.1604%" y="511.50">st..</text></g><g><title>std::sys::sync::mutex::futex::Mutex::spin (7 samples, 0.95%)</title><rect x="19.4030%" y="485" width="0.9498%" height="15" fill="rgb(216,193,19)" fg:x="143" fg:w="7"/><text x="19.6530%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="20.3528%" y="821" width="0.1357%" height="15" fill="rgb(216,135,14)" fg:x="150" fg:w="1"/><text x="20.6028%" y="831.50"></text></g><g><title>__GI___tunables_init (1 samples, 0.14%)</title><rect x="20.4885%" y="789" width="0.1357%" height="15" fill="rgb(241,47,5)" fg:x="151" fg:w="1"/><text x="20.7385%" y="799.50"></text></g><g><title>_dl_start_final (2 samples, 0.27%)</title><rect x="20.4885%" y="821" width="0.2714%" height="15" fill="rgb(233,42,35)" fg:x="151" fg:w="2"/><text x="20.7385%" y="831.50"></text></g><g><title>_dl_sysdep_start (2 samples, 0.27%)</title><rect x="20.4885%" y="805" width="0.2714%" height="15" fill="rgb(231,13,6)" fg:x="151" fg:w="2"/><text x="20.7385%" y="815.50"></text></g><g><title>dl_main (1 samples, 0.14%)</title><rect x="20.6242%" y="789" width="0.1357%" height="15" fill="rgb(207,181,40)" fg:x="152" fg:w="1"/><text x="20.8742%" y="799.50"></text></g><g><title>setup_vdso_pointers (1 samples, 0.14%)</title><rect x="20.6242%" y="773" width="0.1357%" height="15" fill="rgb(254,173,49)" fg:x="152" fg:w="1"/><text x="20.8742%" y="783.50"></text></g><g><title>dl_vdso_vsym (1 samples, 0.14%)</title><rect x="20.6242%" y="757" width="0.1357%" height="15" fill="rgb(221,1,38)" fg:x="152" fg:w="1"/><text x="20.8742%" y="767.50"></text></g><g><title>_dl_lookup_symbol_x (1 samples, 0.14%)</title><rect x="20.6242%" y="741" width="0.1357%" height="15" fill="rgb(206,124,46)" fg:x="152" fg:w="1"/><text x="20.8742%" y="751.50"></text></g><g><title>_start (131 samples, 17.77%)</title><rect x="3.2564%" y="853" width="17.7748%" height="15" fill="rgb(249,21,11)" fg:x="24" fg:w="131"/><text x="3.5064%" y="863.50">_start</text></g><g><title>_dl_start (5 samples, 0.68%)</title><rect x="20.3528%" y="837" width="0.6784%" height="15" fill="rgb(222,201,40)" fg:x="150" fg:w="5"/><text x="20.6028%" y="847.50"></text></g><g><title>rtld_timer_start (2 samples, 0.27%)</title><rect x="20.7598%" y="821" width="0.2714%" height="15" fill="rgb(235,61,29)" fg:x="153" fg:w="2"/><text x="21.0098%" y="831.50"></text></g><g><title>[unknown] (2 samples, 0.27%)</title><rect x="20.7598%" y="805" width="0.2714%" height="15" fill="rgb(219,207,3)" fg:x="153" fg:w="2"/><text x="21.0098%" y="815.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="20.8955%" y="789" width="0.1357%" height="15" fill="rgb(222,56,46)" fg:x="154" fg:w="1"/><text x="21.1455%" y="799.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="20.8955%" y="773" width="0.1357%" height="15" fill="rgb(239,76,54)" fg:x="154" fg:w="1"/><text x="21.1455%" y="783.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="20.8955%" y="757" width="0.1357%" height="15" fill="rgb(231,124,27)" fg:x="154" fg:w="1"/><text x="21.1455%" y="767.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="20.8955%" y="741" width="0.1357%" height="15" fill="rgb(249,195,6)" fg:x="154" fg:w="1"/><text x="21.1455%" y="751.50"></text></g><g><title>[unknown] (21 samples, 2.85%)</title><rect x="21.0312%" y="821" width="2.8494%" height="15" fill="rgb(237,174,47)" fg:x="155" fg:w="21"/><text x="21.2812%" y="831.50">[u..</text></g><g><title>[unknown] (18 samples, 2.44%)</title><rect x="21.4383%" y="805" width="2.4423%" height="15" fill="rgb(206,201,31)" fg:x="158" fg:w="18"/><text x="21.6883%" y="815.50">[u..</text></g><g><title>[unknown] (14 samples, 1.90%)</title><rect x="21.9810%" y="789" width="1.8996%" height="15" fill="rgb(231,57,52)" fg:x="162" fg:w="14"/><text x="22.2310%" y="799.50">[..</text></g><g><title>[unknown] (10 samples, 1.36%)</title><rect x="22.5237%" y="773" width="1.3569%" height="15" fill="rgb(248,177,22)" fg:x="166" fg:w="10"/><text x="22.7737%" y="783.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="23.7449%" y="757" width="0.1357%" height="15" fill="rgb(215,211,37)" fg:x="175" fg:w="1"/><text x="23.9949%" y="767.50"></text></g><g><title>__ctype_init (1 samples, 0.14%)</title><rect x="23.8806%" y="821" width="0.1357%" height="15" fill="rgb(241,128,51)" fg:x="176" fg:w="1"/><text x="24.1306%" y="831.50"></text></g><g><title>_setjmp (8 samples, 1.09%)</title><rect x="24.0163%" y="821" width="1.0855%" height="15" fill="rgb(227,165,31)" fg:x="177" fg:w="8"/><text x="24.2663%" y="831.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="24.9661%" y="805" width="0.1357%" height="15" fill="rgb(228,167,24)" fg:x="184" fg:w="1"/><text x="25.2161%" y="815.50"></text></g><g><title>__GI___sigaltstack (1 samples, 0.14%)</title><rect x="25.1018%" y="773" width="0.1357%" height="15" fill="rgb(228,143,12)" fg:x="185" fg:w="1"/><text x="25.3518%" y="783.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="25.1018%" y="757" width="0.1357%" height="15" fill="rgb(249,149,8)" fg:x="185" fg:w="1"/><text x="25.3518%" y="767.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="25.1018%" y="741" width="0.1357%" height="15" fill="rgb(243,35,44)" fg:x="185" fg:w="1"/><text x="25.3518%" y="751.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="25.1018%" y="725" width="0.1357%" height="15" fill="rgb(246,89,9)" fg:x="185" fg:w="1"/><text x="25.3518%" y="735.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="25.1018%" y="709" width="0.1357%" height="15" fill="rgb(233,213,13)" fg:x="185" fg:w="1"/><text x="25.3518%" y="719.50"></text></g><g><title>cfree@GLIBC_2.2.5 (1 samples, 0.14%)</title><rect x="25.2374%" y="741" width="0.1357%" height="15" fill="rgb(233,141,41)" fg:x="186" fg:w="1"/><text x="25.4874%" y="751.50"></text></g><g><title>_int_free (1 samples, 0.14%)</title><rect x="25.2374%" y="725" width="0.1357%" height="15" fill="rgb(239,167,4)" fg:x="186" fg:w="1"/><text x="25.4874%" y="735.50"></text></g><g><title>__mmap (5 samples, 0.68%)</title><rect x="25.3731%" y="677" width="0.6784%" height="15" fill="rgb(209,217,16)" fg:x="187" fg:w="5"/><text x="25.6231%" y="687.50"></text></g><g><title>[unknown] (5 samples, 0.68%)</title><rect x="25.3731%" y="661" width="0.6784%" height="15" fill="rgb(219,88,35)" fg:x="187" fg:w="5"/><text x="25.6231%" y="671.50"></text></g><g><title>[unknown] (5 samples, 0.68%)</title><rect x="25.3731%" y="645" width="0.6784%" height="15" fill="rgb(220,193,23)" fg:x="187" fg:w="5"/><text x="25.6231%" y="655.50"></text></g><g><title>[unknown] (5 samples, 0.68%)</title><rect x="25.3731%" y="629" width="0.6784%" height="15" fill="rgb(230,90,52)" fg:x="187" fg:w="5"/><text x="25.6231%" y="639.50"></text></g><g><title>[unknown] (3 samples, 0.41%)</title><rect x="25.6445%" y="613" width="0.4071%" height="15" fill="rgb(252,106,19)" fg:x="189" fg:w="3"/><text x="25.8945%" y="623.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="25.9159%" y="597" width="0.1357%" height="15" fill="rgb(206,74,20)" fg:x="191" fg:w="1"/><text x="26.1659%" y="607.50"></text></g><g><title>alloc_new_heap (7 samples, 0.95%)</title><rect x="25.3731%" y="693" width="0.9498%" height="15" fill="rgb(230,138,44)" fg:x="187" fg:w="7"/><text x="25.6231%" y="703.50"></text></g><g><title>__munmap (2 samples, 0.27%)</title><rect x="26.0516%" y="677" width="0.2714%" height="15" fill="rgb(235,182,43)" fg:x="192" fg:w="2"/><text x="26.3016%" y="687.50"></text></g><g><title>[unknown] (2 samples, 0.27%)</title><rect x="26.0516%" y="661" width="0.2714%" height="15" fill="rgb(242,16,51)" fg:x="192" fg:w="2"/><text x="26.3016%" y="671.50"></text></g><g><title>[unknown] (2 samples, 0.27%)</title><rect x="26.0516%" y="645" width="0.2714%" height="15" fill="rgb(248,9,4)" fg:x="192" fg:w="2"/><text x="26.3016%" y="655.50"></text></g><g><title>[unknown] (2 samples, 0.27%)</title><rect x="26.0516%" y="629" width="0.2714%" height="15" fill="rgb(210,31,22)" fg:x="192" fg:w="2"/><text x="26.3016%" y="639.50"></text></g><g><title>[unknown] (2 samples, 0.27%)</title><rect x="26.0516%" y="613" width="0.2714%" height="15" fill="rgb(239,54,39)" fg:x="192" fg:w="2"/><text x="26.3016%" y="623.50"></text></g><g><title>[unknown] (2 samples, 0.27%)</title><rect x="26.0516%" y="597" width="0.2714%" height="15" fill="rgb(230,99,41)" fg:x="192" fg:w="2"/><text x="26.3016%" y="607.50"></text></g><g><title>[unknown] (2 samples, 0.27%)</title><rect x="26.0516%" y="581" width="0.2714%" height="15" fill="rgb(253,106,12)" fg:x="192" fg:w="2"/><text x="26.3016%" y="591.50"></text></g><g><title>[unknown] (2 samples, 0.27%)</title><rect x="26.0516%" y="565" width="0.2714%" height="15" fill="rgb(213,46,41)" fg:x="192" fg:w="2"/><text x="26.3016%" y="575.50"></text></g><g><title>malloc (8 samples, 1.09%)</title><rect x="25.3731%" y="741" width="1.0855%" height="15" fill="rgb(215,133,35)" fg:x="187" fg:w="8"/><text x="25.6231%" y="751.50"></text></g><g><title>tcache_init.part.0 (8 samples, 1.09%)</title><rect x="25.3731%" y="725" width="1.0855%" height="15" fill="rgb(213,28,5)" fg:x="187" fg:w="8"/><text x="25.6231%" y="735.50"></text></g><g><title>arena_get2.part.0 (8 samples, 1.09%)</title><rect x="25.3731%" y="709" width="1.0855%" height="15" fill="rgb(215,77,49)" fg:x="187" fg:w="8"/><text x="25.6231%" y="719.50"></text></g><g><title>new_heap (1 samples, 0.14%)</title><rect x="26.3229%" y="693" width="0.1357%" height="15" fill="rgb(248,100,22)" fg:x="194" fg:w="1"/><text x="26.5729%" y="703.50"></text></g><g><title>pthread_attr_init@@GLIBC_2.2.5 (5 samples, 0.68%)</title><rect x="26.4586%" y="741" width="0.6784%" height="15" fill="rgb(208,67,9)" fg:x="195" fg:w="5"/><text x="26.7086%" y="751.50"></text></g><g><title>__getpagesize (3 samples, 0.41%)</title><rect x="26.7300%" y="725" width="0.4071%" height="15" fill="rgb(219,133,21)" fg:x="197" fg:w="3"/><text x="26.9800%" y="735.50"></text></g><g><title>pthread_getaffinity_np@GLIBC_2.3.4 (1 samples, 0.14%)</title><rect x="27.1370%" y="741" width="0.1357%" height="15" fill="rgb(246,46,29)" fg:x="200" fg:w="1"/><text x="27.3870%" y="751.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="27.1370%" y="725" width="0.1357%" height="15" fill="rgb(246,185,52)" fg:x="200" fg:w="1"/><text x="27.3870%" y="735.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="27.1370%" y="709" width="0.1357%" height="15" fill="rgb(252,136,11)" fg:x="200" fg:w="1"/><text x="27.3870%" y="719.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="27.1370%" y="693" width="0.1357%" height="15" fill="rgb(219,138,53)" fg:x="200" fg:w="1"/><text x="27.3870%" y="703.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="27.1370%" y="677" width="0.1357%" height="15" fill="rgb(211,51,23)" fg:x="200" fg:w="1"/><text x="27.3870%" y="687.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="27.1370%" y="661" width="0.1357%" height="15" fill="rgb(247,221,28)" fg:x="200" fg:w="1"/><text x="27.3870%" y="671.50"></text></g><g><title>clone3 (48 samples, 6.51%)</title><rect x="21.0312%" y="853" width="6.5129%" height="15" fill="rgb(251,222,45)" fg:x="155" fg:w="48"/><text x="21.2812%" y="863.50">clone3</text></g><g><title>start_thread (48 samples, 6.51%)</title><rect x="21.0312%" y="837" width="6.5129%" height="15" fill="rgb(217,162,53)" fg:x="155" fg:w="48"/><text x="21.2812%" y="847.50">start_thr..</text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (18 samples, 2.44%)</title><rect x="25.1018%" y="821" width="2.4423%" height="15" fill="rgb(229,93,14)" fg:x="185" fg:w="18"/><text x="25.3518%" y="831.50">st..</text></g><g><title>std::sys::pal::unix::stack_overflow::Handler::new (18 samples, 2.44%)</title><rect x="25.1018%" y="805" width="2.4423%" height="15" fill="rgb(209,67,49)" fg:x="185" fg:w="18"/><text x="25.3518%" y="815.50">st..</text></g><g><title>std::sys::pal::unix::stack_overflow::imp::make_handler (18 samples, 2.44%)</title><rect x="25.1018%" y="789" width="2.4423%" height="15" fill="rgb(213,87,29)" fg:x="185" fg:w="18"/><text x="25.3518%" y="799.50">st..</text></g><g><title>std::sys::pal::unix::stack_overflow::imp::current_guard (17 samples, 2.31%)</title><rect x="25.2374%" y="773" width="2.3066%" height="15" fill="rgb(205,151,52)" fg:x="186" fg:w="17"/><text x="25.4874%" y="783.50">s..</text></g><g><title>pthread_getattr_np@@GLIBC_2.32 (17 samples, 2.31%)</title><rect x="25.2374%" y="757" width="2.3066%" height="15" fill="rgb(253,215,39)" fg:x="186" fg:w="17"/><text x="25.4874%" y="767.50">p..</text></g><g><title>realloc (2 samples, 0.27%)</title><rect x="27.2727%" y="741" width="0.2714%" height="15" fill="rgb(221,220,41)" fg:x="201" fg:w="2"/><text x="27.5227%" y="751.50"></text></g><g><title>julia (197 samples, 26.73%)</title><rect x="0.9498%" y="869" width="26.7300%" height="15" fill="rgb(218,133,21)" fg:x="7" fg:w="197"/><text x="1.1998%" y="879.50">julia</text></g><g><title>syscall (1 samples, 0.14%)</title><rect x="27.5441%" y="853" width="0.1357%" height="15" fill="rgb(221,193,43)" fg:x="203" fg:w="1"/><text x="27.7941%" y="863.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="27.5441%" y="837" width="0.1357%" height="15" fill="rgb(240,128,52)" fg:x="203" fg:w="1"/><text x="27.7941%" y="847.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.14%)</title><rect x="27.6798%" y="373" width="0.1357%" height="15" fill="rgb(253,114,12)" fg:x="204" fg:w="1"/><text x="27.9298%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (1 samples, 0.14%)</title><rect x="27.6798%" y="357" width="0.1357%" height="15" fill="rgb(215,223,47)" fg:x="204" fg:w="1"/><text x="27.9298%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.14%)</title><rect x="27.6798%" y="341" width="0.1357%" height="15" fill="rgb(248,225,23)" fg:x="204" fg:w="1"/><text x="27.9298%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::skip::Skip&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.14%)</title><rect x="27.6798%" y="325" width="0.1357%" height="15" fill="rgb(250,108,0)" fg:x="204" fg:w="1"/><text x="27.9298%" y="335.50"></text></g><g><title>concurrent_queue::unbounded::Block&lt;T&gt;::destroy (1 samples, 0.14%)</title><rect x="28.2225%" y="325" width="0.1357%" height="15" fill="rgb(228,208,7)" fg:x="208" fg:w="1"/><text x="28.4725%" y="335.50"></text></g><g><title>core::mem::drop (1 samples, 0.14%)</title><rect x="28.2225%" y="309" width="0.1357%" height="15" fill="rgb(244,45,10)" fg:x="208" fg:w="1"/><text x="28.4725%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;concurrent_queue::unbounded::Block&lt;async_task::runnable::Runnable&gt;&gt;&gt; (1 samples, 0.14%)</title><rect x="28.2225%" y="293" width="0.1357%" height="15" fill="rgb(207,125,25)" fg:x="208" fg:w="1"/><text x="28.4725%" y="303.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.14%)</title><rect x="28.2225%" y="277" width="0.1357%" height="15" fill="rgb(210,195,18)" fg:x="208" fg:w="1"/><text x="28.4725%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.14%)</title><rect x="28.2225%" y="261" width="0.1357%" height="15" fill="rgb(249,80,12)" fg:x="208" fg:w="1"/><text x="28.4725%" y="271.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.14%)</title><rect x="28.2225%" y="245" width="0.1357%" height="15" fill="rgb(221,65,9)" fg:x="208" fg:w="1"/><text x="28.4725%" y="255.50"></text></g><g><title>cfree@GLIBC_2.2.5 (1 samples, 0.14%)</title><rect x="28.2225%" y="229" width="0.1357%" height="15" fill="rgb(235,49,36)" fg:x="208" fg:w="1"/><text x="28.4725%" y="239.50"></text></g><g><title>_int_free (1 samples, 0.14%)</title><rect x="28.2225%" y="213" width="0.1357%" height="15" fill="rgb(225,32,20)" fg:x="208" fg:w="1"/><text x="28.4725%" y="223.50"></text></g><g><title>__lll_lock_wait_private (1 samples, 0.14%)</title><rect x="28.2225%" y="197" width="0.1357%" height="15" fill="rgb(215,141,46)" fg:x="208" fg:w="1"/><text x="28.4725%" y="207.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="28.2225%" y="181" width="0.1357%" height="15" fill="rgb(250,160,47)" fg:x="208" fg:w="1"/><text x="28.4725%" y="191.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="28.2225%" y="165" width="0.1357%" height="15" fill="rgb(216,222,40)" fg:x="208" fg:w="1"/><text x="28.4725%" y="175.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="28.2225%" y="149" width="0.1357%" height="15" fill="rgb(234,217,39)" fg:x="208" fg:w="1"/><text x="28.4725%" y="159.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="28.2225%" y="133" width="0.1357%" height="15" fill="rgb(207,178,40)" fg:x="208" fg:w="1"/><text x="28.4725%" y="143.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="28.2225%" y="117" width="0.1357%" height="15" fill="rgb(221,136,13)" fg:x="208" fg:w="1"/><text x="28.4725%" y="127.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="28.2225%" y="101" width="0.1357%" height="15" fill="rgb(249,199,10)" fg:x="208" fg:w="1"/><text x="28.4725%" y="111.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="28.2225%" y="85" width="0.1357%" height="15" fill="rgb(249,222,13)" fg:x="208" fg:w="1"/><text x="28.4725%" y="95.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="28.2225%" y="69" width="0.1357%" height="15" fill="rgb(244,185,38)" fg:x="208" fg:w="1"/><text x="28.4725%" y="79.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="28.2225%" y="53" width="0.1357%" height="15" fill="rgb(236,202,9)" fg:x="208" fg:w="1"/><text x="28.4725%" y="63.50"></text></g><g><title>async_executor::steal (5 samples, 0.68%)</title><rect x="27.8155%" y="373" width="0.6784%" height="15" fill="rgb(250,229,37)" fg:x="205" fg:w="5"/><text x="28.0655%" y="383.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (5 samples, 0.68%)</title><rect x="27.8155%" y="357" width="0.6784%" height="15" fill="rgb(206,174,23)" fg:x="205" fg:w="5"/><text x="28.0655%" y="367.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (5 samples, 0.68%)</title><rect x="27.8155%" y="341" width="0.6784%" height="15" fill="rgb(211,33,43)" fg:x="205" fg:w="5"/><text x="28.0655%" y="351.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (1 samples, 0.14%)</title><rect x="28.3582%" y="325" width="0.1357%" height="15" fill="rgb(245,58,50)" fg:x="209" fg:w="1"/><text x="28.6082%" y="335.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.14%)</title><rect x="28.3582%" y="309" width="0.1357%" height="15" fill="rgb(244,68,36)" fg:x="209" fg:w="1"/><text x="28.6082%" y="319.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (1 samples, 0.14%)</title><rect x="28.4939%" y="357" width="0.1357%" height="15" fill="rgb(232,229,15)" fg:x="210" fg:w="1"/><text x="28.7439%" y="367.50"></text></g><g><title>concurrent_queue::unbounded::Slot&lt;T&gt;::wait_write (1 samples, 0.14%)</title><rect x="28.6296%" y="341" width="0.1357%" height="15" fill="rgb(254,30,23)" fg:x="211" fg:w="1"/><text x="28.8796%" y="351.50"></text></g><g><title>async_executor::Runner::runnable::_{{closure}}::_{{closure}} (9 samples, 1.22%)</title><rect x="27.6798%" y="389" width="1.2212%" height="15" fill="rgb(235,160,14)" fg:x="204" fg:w="9"/><text x="27.9298%" y="399.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (3 samples, 0.41%)</title><rect x="28.4939%" y="373" width="0.4071%" height="15" fill="rgb(212,155,44)" fg:x="210" fg:w="3"/><text x="28.7439%" y="383.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (2 samples, 0.27%)</title><rect x="28.6296%" y="357" width="0.2714%" height="15" fill="rgb(226,2,50)" fg:x="211" fg:w="2"/><text x="28.8796%" y="367.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.14%)</title><rect x="28.7653%" y="341" width="0.1357%" height="15" fill="rgb(234,177,6)" fg:x="212" fg:w="1"/><text x="29.0153%" y="351.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.14%)</title><rect x="28.7653%" y="325" width="0.1357%" height="15" fill="rgb(217,24,9)" fg:x="212" fg:w="1"/><text x="29.0153%" y="335.50"></text></g><g><title>async_executor::State::notify (1 samples, 0.14%)</title><rect x="28.9009%" y="389" width="0.1357%" height="15" fill="rgb(220,13,46)" fg:x="213" fg:w="1"/><text x="29.1509%" y="399.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_ok (1 samples, 0.14%)</title><rect x="28.9009%" y="373" width="0.1357%" height="15" fill="rgb(239,221,27)" fg:x="213" fg:w="1"/><text x="29.1509%" y="383.50"></text></g><g><title>async_executor::Runner::runnable::_{{closure}} (11 samples, 1.49%)</title><rect x="27.6798%" y="453" width="1.4925%" height="15" fill="rgb(222,198,25)" fg:x="204" fg:w="11"/><text x="27.9298%" y="463.50"></text></g><g><title>async_executor::Ticker::runnable_with::_{{closure}} (11 samples, 1.49%)</title><rect x="27.6798%" y="437" width="1.4925%" height="15" fill="rgb(211,99,13)" fg:x="204" fg:w="11"/><text x="27.9298%" y="447.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (11 samples, 1.49%)</title><rect x="27.6798%" y="421" width="1.4925%" height="15" fill="rgb(232,111,31)" fg:x="204" fg:w="11"/><text x="27.9298%" y="431.50"></text></g><g><title>async_executor::Ticker::runnable_with::_{{closure}}::_{{closure}} (11 samples, 1.49%)</title><rect x="27.6798%" y="405" width="1.4925%" height="15" fill="rgb(245,82,37)" fg:x="204" fg:w="11"/><text x="27.9298%" y="415.50"></text></g><g><title>async_executor::Ticker::sleep (1 samples, 0.14%)</title><rect x="29.0366%" y="389" width="0.1357%" height="15" fill="rgb(227,149,46)" fg:x="214" fg:w="1"/><text x="29.2866%" y="399.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (1 samples, 0.14%)</title><rect x="29.0366%" y="373" width="0.1357%" height="15" fill="rgb(218,36,50)" fg:x="214" fg:w="1"/><text x="29.2866%" y="383.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (1 samples, 0.14%)</title><rect x="29.0366%" y="357" width="0.1357%" height="15" fill="rgb(226,80,48)" fg:x="214" fg:w="1"/><text x="29.2866%" y="367.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock_contended (1 samples, 0.14%)</title><rect x="29.0366%" y="341" width="0.1357%" height="15" fill="rgb(238,224,15)" fg:x="214" fg:w="1"/><text x="29.2866%" y="351.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::spin (1 samples, 0.14%)</title><rect x="29.0366%" y="325" width="0.1357%" height="15" fill="rgb(241,136,10)" fg:x="214" fg:w="1"/><text x="29.2866%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;slab::Slab&lt;core::task::wake::Waker&gt;&gt;&gt; (1 samples, 0.14%)</title><rect x="29.4437%" y="261" width="0.1357%" height="15" fill="rgb(208,32,45)" fg:x="217" fg:w="1"/><text x="29.6937%" y="271.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.14%)</title><rect x="29.4437%" y="245" width="0.1357%" height="15" fill="rgb(207,135,9)" fg:x="217" fg:w="1"/><text x="29.6937%" y="255.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (1 samples, 0.14%)</title><rect x="29.4437%" y="229" width="0.1357%" height="15" fill="rgb(206,86,44)" fg:x="217" fg:w="1"/><text x="29.6937%" y="239.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_err (1 samples, 0.14%)</title><rect x="29.5794%" y="229" width="0.1357%" height="15" fill="rgb(245,177,15)" fg:x="218" fg:w="1"/><text x="29.8294%" y="239.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_ok (1 samples, 0.14%)</title><rect x="29.5794%" y="213" width="0.1357%" height="15" fill="rgb(206,64,50)" fg:x="218" fg:w="1"/><text x="29.8294%" y="223.50"></text></g><g><title>std::sys::pal::unix::futex::futex_wait (3 samples, 0.41%)</title><rect x="30.3935%" y="213" width="0.4071%" height="15" fill="rgb(234,36,40)" fg:x="224" fg:w="3"/><text x="30.6435%" y="223.50"></text></g><g><title>syscall (3 samples, 0.41%)</title><rect x="30.3935%" y="197" width="0.4071%" height="15" fill="rgb(213,64,8)" fg:x="224" fg:w="3"/><text x="30.6435%" y="207.50"></text></g><g><title>[unknown] (3 samples, 0.41%)</title><rect x="30.3935%" y="181" width="0.4071%" height="15" fill="rgb(210,75,36)" fg:x="224" fg:w="3"/><text x="30.6435%" y="191.50"></text></g><g><title>[unknown] (3 samples, 0.41%)</title><rect x="30.3935%" y="165" width="0.4071%" height="15" fill="rgb(229,88,21)" fg:x="224" fg:w="3"/><text x="30.6435%" y="175.50"></text></g><g><title>[unknown] (3 samples, 0.41%)</title><rect x="30.3935%" y="149" width="0.4071%" height="15" fill="rgb(252,204,47)" fg:x="224" fg:w="3"/><text x="30.6435%" y="159.50"></text></g><g><title>[unknown] (3 samples, 0.41%)</title><rect x="30.3935%" y="133" width="0.4071%" height="15" fill="rgb(208,77,27)" fg:x="224" fg:w="3"/><text x="30.6435%" y="143.50"></text></g><g><title>[unknown] (3 samples, 0.41%)</title><rect x="30.3935%" y="117" width="0.4071%" height="15" fill="rgb(221,76,26)" fg:x="224" fg:w="3"/><text x="30.6435%" y="127.50"></text></g><g><title>[unknown] (3 samples, 0.41%)</title><rect x="30.3935%" y="101" width="0.4071%" height="15" fill="rgb(225,139,18)" fg:x="224" fg:w="3"/><text x="30.6435%" y="111.50"></text></g><g><title>[unknown] (3 samples, 0.41%)</title><rect x="30.3935%" y="85" width="0.4071%" height="15" fill="rgb(230,137,11)" fg:x="224" fg:w="3"/><text x="30.6435%" y="95.50"></text></g><g><title>[unknown] (3 samples, 0.41%)</title><rect x="30.3935%" y="69" width="0.4071%" height="15" fill="rgb(212,28,1)" fg:x="224" fg:w="3"/><text x="30.6435%" y="79.50"></text></g><g><title>[unknown] (2 samples, 0.27%)</title><rect x="30.5292%" y="53" width="0.2714%" height="15" fill="rgb(248,164,17)" fg:x="225" fg:w="2"/><text x="30.7792%" y="63.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="30.6649%" y="37" width="0.1357%" height="15" fill="rgb(222,171,42)" fg:x="226" fg:w="1"/><text x="30.9149%" y="47.50"></text></g><g><title>&lt;async_executor::CallOnDrop&lt;F&gt; as core::ops::drop::Drop&gt;::drop (23 samples, 3.12%)</title><rect x="29.4437%" y="293" width="3.1208%" height="15" fill="rgb(243,84,45)" fg:x="217" fg:w="23"/><text x="29.6937%" y="303.50">&lt;as..</text></g><g><title>async_executor::Executor::spawn_inner::_{{closure}}::_{{closure}} (23 samples, 3.12%)</title><rect x="29.4437%" y="277" width="3.1208%" height="15" fill="rgb(252,49,23)" fg:x="217" fg:w="23"/><text x="29.6937%" y="287.50">asy..</text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (22 samples, 2.99%)</title><rect x="29.5794%" y="261" width="2.9851%" height="15" fill="rgb(215,19,7)" fg:x="218" fg:w="22"/><text x="29.8294%" y="271.50">std..</text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (22 samples, 2.99%)</title><rect x="29.5794%" y="245" width="2.9851%" height="15" fill="rgb(238,81,41)" fg:x="218" fg:w="22"/><text x="29.8294%" y="255.50">std..</text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock_contended (21 samples, 2.85%)</title><rect x="29.7151%" y="229" width="2.8494%" height="15" fill="rgb(210,199,37)" fg:x="219" fg:w="21"/><text x="29.9651%" y="239.50">st..</text></g><g><title>std::sys::sync::mutex::futex::Mutex::spin (13 samples, 1.76%)</title><rect x="30.8005%" y="213" width="1.7639%" height="15" fill="rgb(244,192,49)" fg:x="227" fg:w="13"/><text x="31.0505%" y="223.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (1 samples, 0.14%)</title><rect x="32.4288%" y="197" width="0.1357%" height="15" fill="rgb(226,211,11)" fg:x="239" fg:w="1"/><text x="32.6788%" y="207.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.14%)</title><rect x="32.4288%" y="181" width="0.1357%" height="15" fill="rgb(236,162,54)" fg:x="239" fg:w="1"/><text x="32.6788%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_executor::CallOnDrop&lt;async_executor::Executor::spawn_inner&lt;(),julia::generate_image_buffer::{{closure}}&gt;::{{closure}}::{{closure}}&gt;&gt; (26 samples, 3.53%)</title><rect x="29.4437%" y="309" width="3.5278%" height="15" fill="rgb(220,229,9)" fg:x="217" fg:w="26"/><text x="29.6937%" y="319.50">cor..</text></g><g><title>syscall (3 samples, 0.41%)</title><rect x="32.5645%" y="293" width="0.4071%" height="15" fill="rgb(250,87,22)" fg:x="240" fg:w="3"/><text x="32.8145%" y="303.50"></text></g><g><title>[unknown] (3 samples, 0.41%)</title><rect x="32.5645%" y="277" width="0.4071%" height="15" fill="rgb(239,43,17)" fg:x="240" fg:w="3"/><text x="32.8145%" y="287.50"></text></g><g><title>[unknown] (3 samples, 0.41%)</title><rect x="32.5645%" y="261" width="0.4071%" height="15" fill="rgb(231,177,25)" fg:x="240" fg:w="3"/><text x="32.8145%" y="271.50"></text></g><g><title>[unknown] (3 samples, 0.41%)</title><rect x="32.5645%" y="245" width="0.4071%" height="15" fill="rgb(219,179,1)" fg:x="240" fg:w="3"/><text x="32.8145%" y="255.50"></text></g><g><title>[unknown] (3 samples, 0.41%)</title><rect x="32.5645%" y="229" width="0.4071%" height="15" fill="rgb(238,219,53)" fg:x="240" fg:w="3"/><text x="32.8145%" y="239.50"></text></g><g><title>[unknown] (3 samples, 0.41%)</title><rect x="32.5645%" y="213" width="0.4071%" height="15" fill="rgb(232,167,36)" fg:x="240" fg:w="3"/><text x="32.8145%" y="223.50"></text></g><g><title>[unknown] (3 samples, 0.41%)</title><rect x="32.5645%" y="197" width="0.4071%" height="15" fill="rgb(244,19,51)" fg:x="240" fg:w="3"/><text x="32.8145%" y="207.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="32.8358%" y="181" width="0.1357%" height="15" fill="rgb(224,6,22)" fg:x="242" fg:w="1"/><text x="33.0858%" y="191.50"></text></g><g><title>num_complex::Complex&lt;T&gt;::norm (7 samples, 0.95%)</title><rect x="32.9715%" y="277" width="0.9498%" height="15" fill="rgb(224,145,5)" fg:x="243" fg:w="7"/><text x="33.2215%" y="287.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::hypot (7 samples, 0.95%)</title><rect x="32.9715%" y="261" width="0.9498%" height="15" fill="rgb(234,130,49)" fg:x="243" fg:w="7"/><text x="33.2215%" y="271.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::hypot (7 samples, 0.95%)</title><rect x="32.9715%" y="245" width="0.9498%" height="15" fill="rgb(254,6,2)" fg:x="243" fg:w="7"/><text x="33.2215%" y="255.50"></text></g><g><title>hypot (6 samples, 0.81%)</title><rect x="33.1072%" y="229" width="0.8141%" height="15" fill="rgb(208,96,46)" fg:x="244" fg:w="6"/><text x="33.3572%" y="239.50"></text></g><g><title>julia::color_generator::_{{closure}} (15 samples, 2.04%)</title><rect x="32.9715%" y="293" width="2.0353%" height="15" fill="rgb(239,3,39)" fg:x="243" fg:w="15"/><text x="33.2215%" y="303.50">j..</text></g><g><title>std::f64::&lt;impl f64&gt;::powf (8 samples, 1.09%)</title><rect x="33.9213%" y="277" width="1.0855%" height="15" fill="rgb(233,210,1)" fg:x="250" fg:w="8"/><text x="34.1713%" y="287.50"></text></g><g><title>pow (8 samples, 1.09%)</title><rect x="33.9213%" y="261" width="1.0855%" height="15" fill="rgb(244,137,37)" fg:x="250" fg:w="8"/><text x="34.1713%" y="271.50"></text></g><g><title>[libm.so.6] (7 samples, 0.95%)</title><rect x="34.0570%" y="245" width="0.9498%" height="15" fill="rgb(240,136,2)" fg:x="251" fg:w="7"/><text x="34.3070%" y="255.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (1 samples, 0.14%)</title><rect x="35.0068%" y="277" width="0.1357%" height="15" fill="rgb(239,18,37)" fg:x="258" fg:w="1"/><text x="35.2568%" y="287.50"></text></g><g><title>std::sync::poison::Flag::guard (1 samples, 0.14%)</title><rect x="35.0068%" y="261" width="0.1357%" height="15" fill="rgb(218,185,22)" fg:x="258" fg:w="1"/><text x="35.2568%" y="271.50"></text></g><g><title>std::thread::panicking (1 samples, 0.14%)</title><rect x="35.0068%" y="245" width="0.1357%" height="15" fill="rgb(225,218,4)" fg:x="258" fg:w="1"/><text x="35.2568%" y="255.50"></text></g><g><title>std::panicking::panicking (1 samples, 0.14%)</title><rect x="35.0068%" y="229" width="0.1357%" height="15" fill="rgb(230,182,32)" fg:x="258" fg:w="1"/><text x="35.2568%" y="239.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (1 samples, 0.14%)</title><rect x="35.0068%" y="213" width="0.1357%" height="15" fill="rgb(242,56,43)" fg:x="258" fg:w="1"/><text x="35.2568%" y="223.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.14%)</title><rect x="35.0068%" y="197" width="0.1357%" height="15" fill="rgb(233,99,24)" fg:x="258" fg:w="1"/><text x="35.2568%" y="207.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.14%)</title><rect x="35.0068%" y="181" width="0.1357%" height="15" fill="rgb(234,209,42)" fg:x="258" fg:w="1"/><text x="35.2568%" y="191.50"></text></g><g><title>smol-10 (56 samples, 7.60%)</title><rect x="27.6798%" y="869" width="7.5984%" height="15" fill="rgb(227,7,12)" fg:x="204" fg:w="56"/><text x="27.9298%" y="879.50">smol-10</text></g><g><title>clone3 (56 samples, 7.60%)</title><rect x="27.6798%" y="853" width="7.5984%" height="15" fill="rgb(245,203,43)" fg:x="204" fg:w="56"/><text x="27.9298%" y="863.50">clone3</text></g><g><title>start_thread (56 samples, 7.60%)</title><rect x="27.6798%" y="837" width="7.5984%" height="15" fill="rgb(238,205,33)" fg:x="204" fg:w="56"/><text x="27.9298%" y="847.50">start_thre..</text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (56 samples, 7.60%)</title><rect x="27.6798%" y="821" width="7.5984%" height="15" fill="rgb(231,56,7)" fg:x="204" fg:w="56"/><text x="27.9298%" y="831.50">std::sys::..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (56 samples, 7.60%)</title><rect x="27.6798%" y="805" width="7.5984%" height="15" fill="rgb(244,186,29)" fg:x="204" fg:w="56"/><text x="27.9298%" y="815.50">&lt;alloc::bo..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (56 samples, 7.60%)</title><rect x="27.6798%" y="789" width="7.5984%" height="15" fill="rgb(234,111,31)" fg:x="204" fg:w="56"/><text x="27.9298%" y="799.50">&lt;alloc::bo..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (56 samples, 7.60%)</title><rect x="27.6798%" y="773" width="7.5984%" height="15" fill="rgb(241,149,10)" fg:x="204" fg:w="56"/><text x="27.9298%" y="783.50">core::ops:..</text></g><g><title>std::thread::Builder::spawn_unchecked_::_{{closure}} (56 samples, 7.60%)</title><rect x="27.6798%" y="757" width="7.5984%" height="15" fill="rgb(249,206,44)" fg:x="204" fg:w="56"/><text x="27.9298%" y="767.50">std::threa..</text></g><g><title>std::panic::catch_unwind (56 samples, 7.60%)</title><rect x="27.6798%" y="741" width="7.5984%" height="15" fill="rgb(251,153,30)" fg:x="204" fg:w="56"/><text x="27.9298%" y="751.50">std::panic..</text></g><g><title>std::panicking::try (56 samples, 7.60%)</title><rect x="27.6798%" y="725" width="7.5984%" height="15" fill="rgb(239,152,38)" fg:x="204" fg:w="56"/><text x="27.9298%" y="735.50">std::panic..</text></g><g><title>std::panicking::try::do_call (56 samples, 7.60%)</title><rect x="27.6798%" y="709" width="7.5984%" height="15" fill="rgb(249,139,47)" fg:x="204" fg:w="56"/><text x="27.9298%" y="719.50">std::panic..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (56 samples, 7.60%)</title><rect x="27.6798%" y="693" width="7.5984%" height="15" fill="rgb(244,64,35)" fg:x="204" fg:w="56"/><text x="27.9298%" y="703.50">&lt;core::pan..</text></g><g><title>std::thread::Builder::spawn_unchecked_::_{{closure}}::_{{closure}} (56 samples, 7.60%)</title><rect x="27.6798%" y="677" width="7.5984%" height="15" fill="rgb(216,46,15)" fg:x="204" fg:w="56"/><text x="27.9298%" y="687.50">std::threa..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (56 samples, 7.60%)</title><rect x="27.6798%" y="661" width="7.5984%" height="15" fill="rgb(250,74,19)" fg:x="204" fg:w="56"/><text x="27.9298%" y="671.50">std::sys_c..</text></g><g><title>smol::spawn::spawn::global::_{{closure}}::_{{closure}} (56 samples, 7.60%)</title><rect x="27.6798%" y="645" width="7.5984%" height="15" fill="rgb(249,42,33)" fg:x="204" fg:w="56"/><text x="27.9298%" y="655.50">smol::spaw..</text></g><g><title>std::panic::catch_unwind (56 samples, 7.60%)</title><rect x="27.6798%" y="629" width="7.5984%" height="15" fill="rgb(242,149,17)" fg:x="204" fg:w="56"/><text x="27.9298%" y="639.50">std::panic..</text></g><g><title>std::panicking::try (56 samples, 7.60%)</title><rect x="27.6798%" y="613" width="7.5984%" height="15" fill="rgb(244,29,21)" fg:x="204" fg:w="56"/><text x="27.9298%" y="623.50">std::panic..</text></g><g><title>std::panicking::try::do_call (56 samples, 7.60%)</title><rect x="27.6798%" y="597" width="7.5984%" height="15" fill="rgb(220,130,37)" fg:x="204" fg:w="56"/><text x="27.9298%" y="607.50">std::panic..</text></g><g><title>smol::spawn::spawn::global::_{{closure}}::_{{closure}}::_{{closure}} (56 samples, 7.60%)</title><rect x="27.6798%" y="581" width="7.5984%" height="15" fill="rgb(211,67,2)" fg:x="204" fg:w="56"/><text x="27.9298%" y="591.50">smol::spaw..</text></g><g><title>async_io::driver::block_on (56 samples, 7.60%)</title><rect x="27.6798%" y="565" width="7.5984%" height="15" fill="rgb(235,68,52)" fg:x="204" fg:w="56"/><text x="27.9298%" y="575.50">async_io::..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (56 samples, 7.60%)</title><rect x="27.6798%" y="549" width="7.5984%" height="15" fill="rgb(246,142,3)" fg:x="204" fg:w="56"/><text x="27.9298%" y="559.50">std::threa..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (56 samples, 7.60%)</title><rect x="27.6798%" y="533" width="7.5984%" height="15" fill="rgb(241,25,7)" fg:x="204" fg:w="56"/><text x="27.9298%" y="543.50">std::threa..</text></g><g><title>async_io::driver::block_on::_{{closure}} (56 samples, 7.60%)</title><rect x="27.6798%" y="517" width="7.5984%" height="15" fill="rgb(242,119,39)" fg:x="204" fg:w="56"/><text x="27.9298%" y="527.50">async_io::..</text></g><g><title>async_executor::Executor::run::_{{closure}} (56 samples, 7.60%)</title><rect x="27.6798%" y="501" width="7.5984%" height="15" fill="rgb(241,98,45)" fg:x="204" fg:w="56"/><text x="27.9298%" y="511.50">async_exec..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (56 samples, 7.60%)</title><rect x="27.6798%" y="485" width="7.5984%" height="15" fill="rgb(254,28,30)" fg:x="204" fg:w="56"/><text x="27.9298%" y="495.50">&lt;futures_l..</text></g><g><title>async_executor::Executor::run::_{{closure}}::_{{closure}} (56 samples, 7.60%)</title><rect x="27.6798%" y="469" width="7.5984%" height="15" fill="rgb(241,142,54)" fg:x="204" fg:w="56"/><text x="27.9298%" y="479.50">async_exec..</text></g><g><title>async_task::runnable::Runnable&lt;M&gt;::run (45 samples, 6.11%)</title><rect x="29.1723%" y="453" width="6.1058%" height="15" fill="rgb(222,85,15)" fg:x="215" fg:w="45"/><text x="29.4223%" y="463.50">async_ta..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S,M&gt;::run (45 samples, 6.11%)</title><rect x="29.1723%" y="437" width="6.1058%" height="15" fill="rgb(210,85,47)" fg:x="215" fg:w="45"/><text x="29.4223%" y="447.50">async_ta..</text></g><g><title>std::panic::catch_unwind (43 samples, 5.83%)</title><rect x="29.4437%" y="421" width="5.8345%" height="15" fill="rgb(224,206,25)" fg:x="217" fg:w="43"/><text x="29.6937%" y="431.50">std::pa..</text></g><g><title>std::panicking::try (43 samples, 5.83%)</title><rect x="29.4437%" y="405" width="5.8345%" height="15" fill="rgb(243,201,19)" fg:x="217" fg:w="43"/><text x="29.6937%" y="415.50">std::pa..</text></g><g><title>std::panicking::try::do_call (43 samples, 5.83%)</title><rect x="29.4437%" y="389" width="5.8345%" height="15" fill="rgb(236,59,4)" fg:x="217" fg:w="43"/><text x="29.6937%" y="399.50">std::pa..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (43 samples, 5.83%)</title><rect x="29.4437%" y="373" width="5.8345%" height="15" fill="rgb(254,179,45)" fg:x="217" fg:w="43"/><text x="29.6937%" y="383.50">&lt;core::..</text></g><g><title>core::ops::function::FnOnce::call_once (43 samples, 5.83%)</title><rect x="29.4437%" y="357" width="5.8345%" height="15" fill="rgb(226,14,10)" fg:x="217" fg:w="43"/><text x="29.6937%" y="367.50">core::o..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S,M&gt;::run::_{{closure}} (43 samples, 5.83%)</title><rect x="29.4437%" y="341" width="5.8345%" height="15" fill="rgb(244,27,41)" fg:x="217" fg:w="43"/><text x="29.6937%" y="351.50">async_t..</text></g><g><title>async_executor::Executor::spawn_inner::_{{closure}} (43 samples, 5.83%)</title><rect x="29.4437%" y="325" width="5.8345%" height="15" fill="rgb(235,35,32)" fg:x="217" fg:w="43"/><text x="29.6937%" y="335.50">async_e..</text></g><g><title>julia::generate_image_buffer::_{{closure}} (17 samples, 2.31%)</title><rect x="32.9715%" y="309" width="2.3066%" height="15" fill="rgb(218,68,31)" fg:x="243" fg:w="17"/><text x="33.2215%" y="319.50">j..</text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (2 samples, 0.27%)</title><rect x="35.0068%" y="293" width="0.2714%" height="15" fill="rgb(207,120,37)" fg:x="258" fg:w="2"/><text x="35.2568%" y="303.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (1 samples, 0.14%)</title><rect x="35.1425%" y="277" width="0.1357%" height="15" fill="rgb(227,98,0)" fg:x="259" fg:w="1"/><text x="35.3925%" y="287.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_err (1 samples, 0.14%)</title><rect x="35.1425%" y="261" width="0.1357%" height="15" fill="rgb(207,7,3)" fg:x="259" fg:w="1"/><text x="35.3925%" y="271.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_ok (1 samples, 0.14%)</title><rect x="35.1425%" y="245" width="0.1357%" height="15" fill="rgb(206,98,19)" fg:x="259" fg:w="1"/><text x="35.3925%" y="255.50"></text></g><g><title>_int_malloc (1 samples, 0.14%)</title><rect x="35.2782%" y="853" width="0.1357%" height="15" fill="rgb(217,5,26)" fg:x="260" fg:w="1"/><text x="35.5282%" y="863.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="35.2782%" y="837" width="0.1357%" height="15" fill="rgb(235,190,38)" fg:x="260" fg:w="1"/><text x="35.5282%" y="847.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="35.2782%" y="821" width="0.1357%" height="15" fill="rgb(247,86,24)" fg:x="260" fg:w="1"/><text x="35.5282%" y="831.50"></text></g><g><title>__libc_calloc (1 samples, 0.14%)</title><rect x="35.5495%" y="437" width="0.1357%" height="15" fill="rgb(205,101,16)" fg:x="262" fg:w="1"/><text x="35.7995%" y="447.50"></text></g><g><title>_int_malloc (1 samples, 0.14%)</title><rect x="35.5495%" y="421" width="0.1357%" height="15" fill="rgb(246,168,33)" fg:x="262" fg:w="1"/><text x="35.7995%" y="431.50"></text></g><g><title>async_io::driver::block_on::CACHE::__getit (3 samples, 0.41%)</title><rect x="35.4138%" y="517" width="0.4071%" height="15" fill="rgb(231,114,1)" fg:x="261" fg:w="3"/><text x="35.6638%" y="527.50"></text></g><g><title>std::sys::thread_local::fast_local::Key&lt;T&gt;::get (3 samples, 0.41%)</title><rect x="35.4138%" y="501" width="0.4071%" height="15" fill="rgb(207,184,53)" fg:x="261" fg:w="3"/><text x="35.6638%" y="511.50"></text></g><g><title>std::sys::thread_local::fast_local::Key&lt;T&gt;::try_initialize (3 samples, 0.41%)</title><rect x="35.4138%" y="485" width="0.4071%" height="15" fill="rgb(224,95,51)" fg:x="261" fg:w="3"/><text x="35.6638%" y="495.50"></text></g><g><title>std::sys::thread_local::fast_local::Key&lt;T&gt;::try_register_dtor (3 samples, 0.41%)</title><rect x="35.4138%" y="469" width="0.4071%" height="15" fill="rgb(212,188,45)" fg:x="261" fg:w="3"/><text x="35.6638%" y="479.50"></text></g><g><title>__cxa_thread_atexit_impl (2 samples, 0.27%)</title><rect x="35.5495%" y="453" width="0.2714%" height="15" fill="rgb(223,154,38)" fg:x="262" fg:w="2"/><text x="35.7995%" y="463.50"></text></g><g><title>pthread_mutex_lock@@GLIBC_2.2.5 (1 samples, 0.14%)</title><rect x="35.6852%" y="437" width="0.1357%" height="15" fill="rgb(251,22,52)" fg:x="263" fg:w="1"/><text x="35.9352%" y="447.50"></text></g><g><title>__GI___lll_lock_wait (1 samples, 0.14%)</title><rect x="35.6852%" y="421" width="0.1357%" height="15" fill="rgb(229,209,22)" fg:x="263" fg:w="1"/><text x="35.9352%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="35.6852%" y="405" width="0.1357%" height="15" fill="rgb(234,138,34)" fg:x="263" fg:w="1"/><text x="35.9352%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="35.6852%" y="389" width="0.1357%" height="15" fill="rgb(212,95,11)" fg:x="263" fg:w="1"/><text x="35.9352%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="35.6852%" y="373" width="0.1357%" height="15" fill="rgb(240,179,47)" fg:x="263" fg:w="1"/><text x="35.9352%" y="383.50"></text></g><g><title>__lll_lock_wait_private (1 samples, 0.14%)</title><rect x="36.2280%" y="197" width="0.1357%" height="15" fill="rgb(240,163,11)" fg:x="267" fg:w="1"/><text x="36.4780%" y="207.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="36.2280%" y="181" width="0.1357%" height="15" fill="rgb(236,37,12)" fg:x="267" fg:w="1"/><text x="36.4780%" y="191.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="36.2280%" y="165" width="0.1357%" height="15" fill="rgb(232,164,16)" fg:x="267" fg:w="1"/><text x="36.4780%" y="175.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="36.2280%" y="149" width="0.1357%" height="15" fill="rgb(244,205,15)" fg:x="267" fg:w="1"/><text x="36.4780%" y="159.50"></text></g><g><title>concurrent_queue::unbounded::Block&lt;T&gt;::destroy (2 samples, 0.27%)</title><rect x="36.2280%" y="325" width="0.2714%" height="15" fill="rgb(223,117,47)" fg:x="267" fg:w="2"/><text x="36.4780%" y="335.50"></text></g><g><title>core::mem::drop (2 samples, 0.27%)</title><rect x="36.2280%" y="309" width="0.2714%" height="15" fill="rgb(244,107,35)" fg:x="267" fg:w="2"/><text x="36.4780%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;concurrent_queue::unbounded::Block&lt;async_task::runnable::Runnable&gt;&gt;&gt; (2 samples, 0.27%)</title><rect x="36.2280%" y="293" width="0.2714%" height="15" fill="rgb(205,140,8)" fg:x="267" fg:w="2"/><text x="36.4780%" y="303.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.27%)</title><rect x="36.2280%" y="277" width="0.2714%" height="15" fill="rgb(228,84,46)" fg:x="267" fg:w="2"/><text x="36.4780%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.27%)</title><rect x="36.2280%" y="261" width="0.2714%" height="15" fill="rgb(254,188,9)" fg:x="267" fg:w="2"/><text x="36.4780%" y="271.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.27%)</title><rect x="36.2280%" y="245" width="0.2714%" height="15" fill="rgb(206,112,54)" fg:x="267" fg:w="2"/><text x="36.4780%" y="255.50"></text></g><g><title>cfree@GLIBC_2.2.5 (2 samples, 0.27%)</title><rect x="36.2280%" y="229" width="0.2714%" height="15" fill="rgb(216,84,49)" fg:x="267" fg:w="2"/><text x="36.4780%" y="239.50"></text></g><g><title>_int_free (2 samples, 0.27%)</title><rect x="36.2280%" y="213" width="0.2714%" height="15" fill="rgb(214,194,35)" fg:x="267" fg:w="2"/><text x="36.4780%" y="223.50"></text></g><g><title>_int_free_merge_chunk (1 samples, 0.14%)</title><rect x="36.3636%" y="197" width="0.1357%" height="15" fill="rgb(249,28,3)" fg:x="268" fg:w="1"/><text x="36.6136%" y="207.50"></text></g><g><title>concurrent_queue::unbounded::Block&lt;T&gt;::wait_next (1 samples, 0.14%)</title><rect x="36.4993%" y="325" width="0.1357%" height="15" fill="rgb(222,56,52)" fg:x="269" fg:w="1"/><text x="36.7493%" y="335.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (1 samples, 0.14%)</title><rect x="36.4993%" y="309" width="0.1357%" height="15" fill="rgb(245,217,50)" fg:x="269" fg:w="1"/><text x="36.7493%" y="319.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.14%)</title><rect x="36.4993%" y="293" width="0.1357%" height="15" fill="rgb(213,201,24)" fg:x="269" fg:w="1"/><text x="36.7493%" y="303.50"></text></g><g><title>async_executor::steal (6 samples, 0.81%)</title><rect x="35.9566%" y="373" width="0.8141%" height="15" fill="rgb(248,116,28)" fg:x="265" fg:w="6"/><text x="36.2066%" y="383.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (6 samples, 0.81%)</title><rect x="35.9566%" y="357" width="0.8141%" height="15" fill="rgb(219,72,43)" fg:x="265" fg:w="6"/><text x="36.2066%" y="367.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (6 samples, 0.81%)</title><rect x="35.9566%" y="341" width="0.8141%" height="15" fill="rgb(209,138,14)" fg:x="265" fg:w="6"/><text x="36.2066%" y="351.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (1 samples, 0.14%)</title><rect x="36.6350%" y="325" width="0.1357%" height="15" fill="rgb(222,18,33)" fg:x="270" fg:w="1"/><text x="36.8850%" y="335.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.14%)</title><rect x="36.6350%" y="309" width="0.1357%" height="15" fill="rgb(213,199,7)" fg:x="270" fg:w="1"/><text x="36.8850%" y="319.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (1 samples, 0.14%)</title><rect x="36.7707%" y="373" width="0.1357%" height="15" fill="rgb(250,110,10)" fg:x="271" fg:w="1"/><text x="37.0207%" y="383.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (1 samples, 0.14%)</title><rect x="36.7707%" y="357" width="0.1357%" height="15" fill="rgb(248,123,6)" fg:x="271" fg:w="1"/><text x="37.0207%" y="367.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.14%)</title><rect x="36.7707%" y="341" width="0.1357%" height="15" fill="rgb(206,91,31)" fg:x="271" fg:w="1"/><text x="37.0207%" y="351.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.14%)</title><rect x="36.7707%" y="325" width="0.1357%" height="15" fill="rgb(211,154,13)" fg:x="271" fg:w="1"/><text x="37.0207%" y="335.50"></text></g><g><title>async_executor::Runner::runnable::_{{closure}}::_{{closure}} (9 samples, 1.22%)</title><rect x="35.8209%" y="389" width="1.2212%" height="15" fill="rgb(225,148,7)" fg:x="264" fg:w="9"/><text x="36.0709%" y="399.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (1 samples, 0.14%)</title><rect x="36.9064%" y="373" width="0.1357%" height="15" fill="rgb(220,160,43)" fg:x="272" fg:w="1"/><text x="37.1564%" y="383.50"></text></g><g><title>std::sys::sync::rwlock::futex::RwLock::read (1 samples, 0.14%)</title><rect x="36.9064%" y="357" width="0.1357%" height="15" fill="rgb(213,52,39)" fg:x="272" fg:w="1"/><text x="37.1564%" y="367.50"></text></g><g><title>std::sys::sync::rwlock::futex::RwLock::read_contended (1 samples, 0.14%)</title><rect x="36.9064%" y="341" width="0.1357%" height="15" fill="rgb(243,137,7)" fg:x="272" fg:w="1"/><text x="37.1564%" y="351.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_ok (3 samples, 0.41%)</title><rect x="37.0421%" y="373" width="0.4071%" height="15" fill="rgb(230,79,13)" fg:x="273" fg:w="3"/><text x="37.2921%" y="383.50"></text></g><g><title>async_executor::State::notify (5 samples, 0.68%)</title><rect x="37.0421%" y="389" width="0.6784%" height="15" fill="rgb(247,105,23)" fg:x="273" fg:w="5"/><text x="37.2921%" y="399.50"></text></g><g><title>core::task::wake::Waker::wake (2 samples, 0.27%)</title><rect x="37.4491%" y="373" width="0.2714%" height="15" fill="rgb(223,179,41)" fg:x="276" fg:w="2"/><text x="37.6991%" y="383.50"></text></g><g><title>&lt;async_io::driver::block_on::BlockOnWaker as alloc::task::Wake&gt;::wake (2 samples, 0.27%)</title><rect x="37.4491%" y="357" width="0.2714%" height="15" fill="rgb(218,9,34)" fg:x="276" fg:w="2"/><text x="37.6991%" y="367.50"></text></g><g><title>&lt;async_io::driver::block_on::BlockOnWaker as alloc::task::Wake&gt;::wake_by_ref (2 samples, 0.27%)</title><rect x="37.4491%" y="341" width="0.2714%" height="15" fill="rgb(222,106,8)" fg:x="276" fg:w="2"/><text x="37.6991%" y="351.50"></text></g><g><title>parking::Inner::unpark (2 samples, 0.27%)</title><rect x="37.4491%" y="325" width="0.2714%" height="15" fill="rgb(211,220,0)" fg:x="276" fg:w="2"/><text x="37.6991%" y="335.50"></text></g><g><title>syscall (2 samples, 0.27%)</title><rect x="37.4491%" y="309" width="0.2714%" height="15" fill="rgb(229,52,16)" fg:x="276" fg:w="2"/><text x="37.6991%" y="319.50"></text></g><g><title>[unknown] (2 samples, 0.27%)</title><rect x="37.4491%" y="293" width="0.2714%" height="15" fill="rgb(212,155,18)" fg:x="276" fg:w="2"/><text x="37.6991%" y="303.50"></text></g><g><title>[unknown] (2 samples, 0.27%)</title><rect x="37.4491%" y="277" width="0.2714%" height="15" fill="rgb(242,21,14)" fg:x="276" fg:w="2"/><text x="37.6991%" y="287.50"></text></g><g><title>[unknown] (2 samples, 0.27%)</title><rect x="37.4491%" y="261" width="0.2714%" height="15" fill="rgb(222,19,48)" fg:x="276" fg:w="2"/><text x="37.6991%" y="271.50"></text></g><g><title>[unknown] (2 samples, 0.27%)</title><rect x="37.4491%" y="245" width="0.2714%" height="15" fill="rgb(232,45,27)" fg:x="276" fg:w="2"/><text x="37.6991%" y="255.50"></text></g><g><title>[unknown] (2 samples, 0.27%)</title><rect x="37.4491%" y="229" width="0.2714%" height="15" fill="rgb(249,103,42)" fg:x="276" fg:w="2"/><text x="37.6991%" y="239.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="37.5848%" y="213" width="0.1357%" height="15" fill="rgb(246,81,33)" fg:x="277" fg:w="1"/><text x="37.8348%" y="223.50"></text></g><g><title>async_executor::Runner::runnable::_{{closure}} (15 samples, 2.04%)</title><rect x="35.8209%" y="453" width="2.0353%" height="15" fill="rgb(252,33,42)" fg:x="264" fg:w="15"/><text x="36.0709%" y="463.50">a..</text></g><g><title>async_executor::Ticker::runnable_with::_{{closure}} (15 samples, 2.04%)</title><rect x="35.8209%" y="437" width="2.0353%" height="15" fill="rgb(209,212,41)" fg:x="264" fg:w="15"/><text x="36.0709%" y="447.50">a..</text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (15 samples, 2.04%)</title><rect x="35.8209%" y="421" width="2.0353%" height="15" fill="rgb(207,154,6)" fg:x="264" fg:w="15"/><text x="36.0709%" y="431.50">&lt;..</text></g><g><title>async_executor::Ticker::runnable_with::_{{closure}}::_{{closure}} (15 samples, 2.04%)</title><rect x="35.8209%" y="405" width="2.0353%" height="15" fill="rgb(223,64,47)" fg:x="264" fg:w="15"/><text x="36.0709%" y="415.50">a..</text></g><g><title>async_executor::Ticker::sleep (1 samples, 0.14%)</title><rect x="37.7205%" y="389" width="0.1357%" height="15" fill="rgb(211,161,38)" fg:x="278" fg:w="1"/><text x="37.9705%" y="399.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (1 samples, 0.14%)</title><rect x="37.7205%" y="373" width="0.1357%" height="15" fill="rgb(219,138,40)" fg:x="278" fg:w="1"/><text x="37.9705%" y="383.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (1 samples, 0.14%)</title><rect x="37.7205%" y="357" width="0.1357%" height="15" fill="rgb(241,228,46)" fg:x="278" fg:w="1"/><text x="37.9705%" y="367.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock_contended (1 samples, 0.14%)</title><rect x="37.7205%" y="341" width="0.1357%" height="15" fill="rgb(223,209,38)" fg:x="278" fg:w="1"/><text x="37.9705%" y="351.50"></text></g><g><title>std::sys::pal::unix::futex::futex_wait (1 samples, 0.14%)</title><rect x="37.7205%" y="325" width="0.1357%" height="15" fill="rgb(236,164,45)" fg:x="278" fg:w="1"/><text x="37.9705%" y="335.50"></text></g><g><title>syscall (1 samples, 0.14%)</title><rect x="37.7205%" y="309" width="0.1357%" height="15" fill="rgb(231,15,5)" fg:x="278" fg:w="1"/><text x="37.9705%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="37.7205%" y="293" width="0.1357%" height="15" fill="rgb(252,35,15)" fg:x="278" fg:w="1"/><text x="37.9705%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="37.7205%" y="277" width="0.1357%" height="15" fill="rgb(248,181,18)" fg:x="278" fg:w="1"/><text x="37.9705%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="37.7205%" y="261" width="0.1357%" height="15" fill="rgb(233,39,42)" fg:x="278" fg:w="1"/><text x="37.9705%" y="271.50"></text></g><g><title>core::mem::drop (1 samples, 0.14%)</title><rect x="37.8562%" y="261" width="0.1357%" height="15" fill="rgb(238,110,33)" fg:x="279" fg:w="1"/><text x="38.1062%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::task::wake::Waker&gt;&gt; (1 samples, 0.14%)</title><rect x="37.8562%" y="245" width="0.1357%" height="15" fill="rgb(233,195,10)" fg:x="279" fg:w="1"/><text x="38.1062%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (1 samples, 0.14%)</title><rect x="37.8562%" y="229" width="0.1357%" height="15" fill="rgb(254,105,3)" fg:x="279" fg:w="1"/><text x="38.1062%" y="239.50"></text></g><g><title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (1 samples, 0.14%)</title><rect x="37.8562%" y="213" width="0.1357%" height="15" fill="rgb(221,225,9)" fg:x="279" fg:w="1"/><text x="38.1062%" y="223.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S,M&gt;::drop_waker (1 samples, 0.14%)</title><rect x="37.8562%" y="197" width="0.1357%" height="15" fill="rgb(224,227,45)" fg:x="279" fg:w="1"/><text x="38.1062%" y="207.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (1 samples, 0.14%)</title><rect x="37.9919%" y="245" width="0.1357%" height="15" fill="rgb(229,198,43)" fg:x="280" fg:w="1"/><text x="38.2419%" y="255.50"></text></g><g><title>std::sync::poison::Flag::guard (1 samples, 0.14%)</title><rect x="37.9919%" y="229" width="0.1357%" height="15" fill="rgb(206,209,35)" fg:x="280" fg:w="1"/><text x="38.2419%" y="239.50"></text></g><g><title>std::sys::pal::unix::futex::futex_wait (9 samples, 1.22%)</title><rect x="38.2632%" y="213" width="1.2212%" height="15" fill="rgb(245,195,53)" fg:x="282" fg:w="9"/><text x="38.5132%" y="223.50"></text></g><g><title>syscall (8 samples, 1.09%)</title><rect x="38.3989%" y="197" width="1.0855%" height="15" fill="rgb(240,92,26)" fg:x="283" fg:w="8"/><text x="38.6489%" y="207.50"></text></g><g><title>[unknown] (8 samples, 1.09%)</title><rect x="38.3989%" y="181" width="1.0855%" height="15" fill="rgb(207,40,23)" fg:x="283" fg:w="8"/><text x="38.6489%" y="191.50"></text></g><g><title>[unknown] (7 samples, 0.95%)</title><rect x="38.5346%" y="165" width="0.9498%" height="15" fill="rgb(223,111,35)" fg:x="284" fg:w="7"/><text x="38.7846%" y="175.50"></text></g><g><title>[unknown] (7 samples, 0.95%)</title><rect x="38.5346%" y="149" width="0.9498%" height="15" fill="rgb(229,147,28)" fg:x="284" fg:w="7"/><text x="38.7846%" y="159.50"></text></g><g><title>[unknown] (7 samples, 0.95%)</title><rect x="38.5346%" y="133" width="0.9498%" height="15" fill="rgb(211,29,28)" fg:x="284" fg:w="7"/><text x="38.7846%" y="143.50"></text></g><g><title>[unknown] (7 samples, 0.95%)</title><rect x="38.5346%" y="117" width="0.9498%" height="15" fill="rgb(228,72,33)" fg:x="284" fg:w="7"/><text x="38.7846%" y="127.50"></text></g><g><title>[unknown] (7 samples, 0.95%)</title><rect x="38.5346%" y="101" width="0.9498%" height="15" fill="rgb(205,214,31)" fg:x="284" fg:w="7"/><text x="38.7846%" y="111.50"></text></g><g><title>[unknown] (7 samples, 0.95%)</title><rect x="38.5346%" y="85" width="0.9498%" height="15" fill="rgb(224,111,15)" fg:x="284" fg:w="7"/><text x="38.7846%" y="95.50"></text></g><g><title>[unknown] (7 samples, 0.95%)</title><rect x="38.5346%" y="69" width="0.9498%" height="15" fill="rgb(253,21,26)" fg:x="284" fg:w="7"/><text x="38.7846%" y="79.50"></text></g><g><title>[unknown] (6 samples, 0.81%)</title><rect x="38.6703%" y="53" width="0.8141%" height="15" fill="rgb(245,139,43)" fg:x="285" fg:w="6"/><text x="38.9203%" y="63.50"></text></g><g><title>[unknown] (4 samples, 0.54%)</title><rect x="38.9417%" y="37" width="0.5427%" height="15" fill="rgb(252,170,7)" fg:x="287" fg:w="4"/><text x="39.1917%" y="47.50"></text></g><g><title>&lt;async_executor::CallOnDrop&lt;F&gt; as core::ops::drop::Drop&gt;::drop (23 samples, 3.12%)</title><rect x="37.8562%" y="293" width="3.1208%" height="15" fill="rgb(231,118,14)" fg:x="279" fg:w="23"/><text x="38.1062%" y="303.50">&lt;as..</text></g><g><title>async_executor::Executor::spawn_inner::_{{closure}}::_{{closure}} (23 samples, 3.12%)</title><rect x="37.8562%" y="277" width="3.1208%" height="15" fill="rgb(238,83,0)" fg:x="279" fg:w="23"/><text x="38.1062%" y="287.50">asy..</text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (22 samples, 2.99%)</title><rect x="37.9919%" y="261" width="2.9851%" height="15" fill="rgb(221,39,39)" fg:x="280" fg:w="22"/><text x="38.2419%" y="271.50">std..</text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (21 samples, 2.85%)</title><rect x="38.1275%" y="245" width="2.8494%" height="15" fill="rgb(222,119,46)" fg:x="281" fg:w="21"/><text x="38.3775%" y="255.50">st..</text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock_contended (21 samples, 2.85%)</title><rect x="38.1275%" y="229" width="2.8494%" height="15" fill="rgb(222,165,49)" fg:x="281" fg:w="21"/><text x="38.3775%" y="239.50">st..</text></g><g><title>std::sys::sync::mutex::futex::Mutex::spin (11 samples, 1.49%)</title><rect x="39.4844%" y="213" width="1.4925%" height="15" fill="rgb(219,113,52)" fg:x="291" fg:w="11"/><text x="39.7344%" y="223.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (4 samples, 0.54%)</title><rect x="40.4342%" y="197" width="0.5427%" height="15" fill="rgb(214,7,15)" fg:x="298" fg:w="4"/><text x="40.6842%" y="207.50"></text></g><g><title>core::sync::atomic::atomic_load (4 samples, 0.54%)</title><rect x="40.4342%" y="181" width="0.5427%" height="15" fill="rgb(235,32,4)" fg:x="298" fg:w="4"/><text x="40.6842%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_executor::CallOnDrop&lt;async_executor::Executor::spawn_inner&lt;(),julia::generate_image_buffer::{{closure}}&gt;::{{closure}}::{{closure}}&gt;&gt; (27 samples, 3.66%)</title><rect x="37.8562%" y="309" width="3.6635%" height="15" fill="rgb(238,90,54)" fg:x="279" fg:w="27"/><text x="38.1062%" y="319.50">core..</text></g><g><title>syscall (4 samples, 0.54%)</title><rect x="40.9769%" y="293" width="0.5427%" height="15" fill="rgb(213,208,19)" fg:x="302" fg:w="4"/><text x="41.2269%" y="303.50"></text></g><g><title>[unknown] (4 samples, 0.54%)</title><rect x="40.9769%" y="277" width="0.5427%" height="15" fill="rgb(233,156,4)" fg:x="302" fg:w="4"/><text x="41.2269%" y="287.50"></text></g><g><title>[unknown] (4 samples, 0.54%)</title><rect x="40.9769%" y="261" width="0.5427%" height="15" fill="rgb(207,194,5)" fg:x="302" fg:w="4"/><text x="41.2269%" y="271.50"></text></g><g><title>[unknown] (3 samples, 0.41%)</title><rect x="41.1126%" y="245" width="0.4071%" height="15" fill="rgb(206,111,30)" fg:x="303" fg:w="3"/><text x="41.3626%" y="255.50"></text></g><g><title>[unknown] (3 samples, 0.41%)</title><rect x="41.1126%" y="229" width="0.4071%" height="15" fill="rgb(243,70,54)" fg:x="303" fg:w="3"/><text x="41.3626%" y="239.50"></text></g><g><title>[unknown] (3 samples, 0.41%)</title><rect x="41.1126%" y="213" width="0.4071%" height="15" fill="rgb(242,28,8)" fg:x="303" fg:w="3"/><text x="41.3626%" y="223.50"></text></g><g><title>[unknown] (3 samples, 0.41%)</title><rect x="41.1126%" y="197" width="0.4071%" height="15" fill="rgb(219,106,18)" fg:x="303" fg:w="3"/><text x="41.3626%" y="207.50"></text></g><g><title>[unknown] (3 samples, 0.41%)</title><rect x="41.1126%" y="181" width="0.4071%" height="15" fill="rgb(244,222,10)" fg:x="303" fg:w="3"/><text x="41.3626%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;std::sync::mutex::Mutex&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;image::color::Rgb&lt;u8&gt;&gt;&gt;&gt;&gt;&gt; (1 samples, 0.14%)</title><rect x="41.5197%" y="293" width="0.1357%" height="15" fill="rgb(236,179,52)" fg:x="306" fg:w="1"/><text x="41.7697%" y="303.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.14%)</title><rect x="41.5197%" y="277" width="0.1357%" height="15" fill="rgb(213,23,39)" fg:x="306" fg:w="1"/><text x="41.7697%" y="287.50"></text></g><g><title>num_complex::Complex&lt;T&gt;::norm (6 samples, 0.81%)</title><rect x="41.7910%" y="277" width="0.8141%" height="15" fill="rgb(238,48,10)" fg:x="308" fg:w="6"/><text x="42.0410%" y="287.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::hypot (6 samples, 0.81%)</title><rect x="41.7910%" y="261" width="0.8141%" height="15" fill="rgb(251,196,23)" fg:x="308" fg:w="6"/><text x="42.0410%" y="271.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::hypot (6 samples, 0.81%)</title><rect x="41.7910%" y="245" width="0.8141%" height="15" fill="rgb(250,152,24)" fg:x="308" fg:w="6"/><text x="42.0410%" y="255.50"></text></g><g><title>hypot (6 samples, 0.81%)</title><rect x="41.7910%" y="229" width="0.8141%" height="15" fill="rgb(209,150,17)" fg:x="308" fg:w="6"/><text x="42.0410%" y="239.50"></text></g><g><title>julia::color_generator::_{{closure}} (9 samples, 1.22%)</title><rect x="41.6554%" y="293" width="1.2212%" height="15" fill="rgb(234,202,34)" fg:x="307" fg:w="9"/><text x="41.9054%" y="303.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::powf (2 samples, 0.27%)</title><rect x="42.6052%" y="277" width="0.2714%" height="15" fill="rgb(253,148,53)" fg:x="314" fg:w="2"/><text x="42.8552%" y="287.50"></text></g><g><title>pow (2 samples, 0.27%)</title><rect x="42.6052%" y="261" width="0.2714%" height="15" fill="rgb(218,129,16)" fg:x="314" fg:w="2"/><text x="42.8552%" y="271.50"></text></g><g><title>[libm.so.6] (2 samples, 0.27%)</title><rect x="42.6052%" y="245" width="0.2714%" height="15" fill="rgb(216,85,19)" fg:x="314" fg:w="2"/><text x="42.8552%" y="255.50"></text></g><g><title>async_executor::Executor::run::_{{closure}} (55 samples, 7.46%)</title><rect x="35.8209%" y="501" width="7.4627%" height="15" fill="rgb(235,228,7)" fg:x="264" fg:w="55"/><text x="36.0709%" y="511.50">async_exec..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (55 samples, 7.46%)</title><rect x="35.8209%" y="485" width="7.4627%" height="15" fill="rgb(245,175,0)" fg:x="264" fg:w="55"/><text x="36.0709%" y="495.50">&lt;futures_l..</text></g><g><title>async_executor::Executor::run::_{{closure}}::_{{closure}} (55 samples, 7.46%)</title><rect x="35.8209%" y="469" width="7.4627%" height="15" fill="rgb(208,168,36)" fg:x="264" fg:w="55"/><text x="36.0709%" y="479.50">async_exec..</text></g><g><title>async_task::runnable::Runnable&lt;M&gt;::run (40 samples, 5.43%)</title><rect x="37.8562%" y="453" width="5.4274%" height="15" fill="rgb(246,171,24)" fg:x="279" fg:w="40"/><text x="38.1062%" y="463.50">async_t..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S,M&gt;::run (40 samples, 5.43%)</title><rect x="37.8562%" y="437" width="5.4274%" height="15" fill="rgb(215,142,24)" fg:x="279" fg:w="40"/><text x="38.1062%" y="447.50">async_t..</text></g><g><title>std::panic::catch_unwind (40 samples, 5.43%)</title><rect x="37.8562%" y="421" width="5.4274%" height="15" fill="rgb(250,187,7)" fg:x="279" fg:w="40"/><text x="38.1062%" y="431.50">std::pa..</text></g><g><title>std::panicking::try (40 samples, 5.43%)</title><rect x="37.8562%" y="405" width="5.4274%" height="15" fill="rgb(228,66,33)" fg:x="279" fg:w="40"/><text x="38.1062%" y="415.50">std::pa..</text></g><g><title>std::panicking::try::do_call (40 samples, 5.43%)</title><rect x="37.8562%" y="389" width="5.4274%" height="15" fill="rgb(234,215,21)" fg:x="279" fg:w="40"/><text x="38.1062%" y="399.50">std::pa..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (40 samples, 5.43%)</title><rect x="37.8562%" y="373" width="5.4274%" height="15" fill="rgb(222,191,20)" fg:x="279" fg:w="40"/><text x="38.1062%" y="383.50">&lt;core::..</text></g><g><title>core::ops::function::FnOnce::call_once (40 samples, 5.43%)</title><rect x="37.8562%" y="357" width="5.4274%" height="15" fill="rgb(245,79,54)" fg:x="279" fg:w="40"/><text x="38.1062%" y="367.50">core::o..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S,M&gt;::run::_{{closure}} (40 samples, 5.43%)</title><rect x="37.8562%" y="341" width="5.4274%" height="15" fill="rgb(240,10,37)" fg:x="279" fg:w="40"/><text x="38.1062%" y="351.50">async_t..</text></g><g><title>async_executor::Executor::spawn_inner::_{{closure}} (40 samples, 5.43%)</title><rect x="37.8562%" y="325" width="5.4274%" height="15" fill="rgb(214,192,32)" fg:x="279" fg:w="40"/><text x="38.1062%" y="335.50">async_e..</text></g><g><title>julia::generate_image_buffer::_{{closure}} (13 samples, 1.76%)</title><rect x="41.5197%" y="309" width="1.7639%" height="15" fill="rgb(209,36,54)" fg:x="306" fg:w="13"/><text x="41.7697%" y="319.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (3 samples, 0.41%)</title><rect x="42.8765%" y="293" width="0.4071%" height="15" fill="rgb(220,10,11)" fg:x="316" fg:w="3"/><text x="43.1265%" y="303.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (3 samples, 0.41%)</title><rect x="42.8765%" y="277" width="0.4071%" height="15" fill="rgb(221,106,17)" fg:x="316" fg:w="3"/><text x="43.1265%" y="287.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_err (3 samples, 0.41%)</title><rect x="42.8765%" y="261" width="0.4071%" height="15" fill="rgb(251,142,44)" fg:x="316" fg:w="3"/><text x="43.1265%" y="271.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_ok (3 samples, 0.41%)</title><rect x="42.8765%" y="245" width="0.4071%" height="15" fill="rgb(238,13,15)" fg:x="316" fg:w="3"/><text x="43.1265%" y="255.50"></text></g><g><title>async_io::reactor::Reactor::try_lock (1 samples, 0.14%)</title><rect x="43.2836%" y="501" width="0.1357%" height="15" fill="rgb(208,107,27)" fg:x="319" fg:w="1"/><text x="43.5336%" y="511.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::try_lock (1 samples, 0.14%)</title><rect x="43.2836%" y="485" width="0.1357%" height="15" fill="rgb(205,136,37)" fg:x="319" fg:w="1"/><text x="43.5336%" y="495.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::try_lock (1 samples, 0.14%)</title><rect x="43.2836%" y="469" width="0.1357%" height="15" fill="rgb(250,205,27)" fg:x="319" fg:w="1"/><text x="43.5336%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (1 samples, 0.14%)</title><rect x="43.2836%" y="453" width="0.1357%" height="15" fill="rgb(210,80,43)" fg:x="319" fg:w="1"/><text x="43.5336%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1 samples, 0.14%)</title><rect x="43.2836%" y="437" width="0.1357%" height="15" fill="rgb(247,160,36)" fg:x="319" fg:w="1"/><text x="43.5336%" y="447.50"></text></g><g><title>async_io::reactor::ReactorLock::react (1 samples, 0.14%)</title><rect x="43.4193%" y="501" width="0.1357%" height="15" fill="rgb(234,13,49)" fg:x="320" fg:w="1"/><text x="43.6693%" y="511.50"></text></g><g><title>polling::Poller::wait (1 samples, 0.14%)</title><rect x="43.4193%" y="485" width="0.1357%" height="15" fill="rgb(234,122,0)" fg:x="320" fg:w="1"/><text x="43.6693%" y="495.50"></text></g><g><title>polling::epoll::Poller::wait (1 samples, 0.14%)</title><rect x="43.4193%" y="469" width="0.1357%" height="15" fill="rgb(207,146,38)" fg:x="320" fg:w="1"/><text x="43.6693%" y="479.50"></text></g><g><title>rustix::time::timerfd::timerfd_settime (1 samples, 0.14%)</title><rect x="43.4193%" y="453" width="0.1357%" height="15" fill="rgb(207,177,25)" fg:x="320" fg:w="1"/><text x="43.6693%" y="463.50"></text></g><g><title>rustix::backend::time::syscalls::timerfd_settime (1 samples, 0.14%)</title><rect x="43.4193%" y="437" width="0.1357%" height="15" fill="rgb(211,178,42)" fg:x="320" fg:w="1"/><text x="43.6693%" y="447.50"></text></g><g><title>rustix::backend::conv::ret (1 samples, 0.14%)</title><rect x="43.4193%" y="421" width="0.1357%" height="15" fill="rgb(230,69,54)" fg:x="320" fg:w="1"/><text x="43.6693%" y="431.50"></text></g><g><title>rustix::backend::io::errno::try_decode_void (1 samples, 0.14%)</title><rect x="43.4193%" y="405" width="0.1357%" height="15" fill="rgb(214,135,41)" fg:x="320" fg:w="1"/><text x="43.6693%" y="415.50"></text></g><g><title>rustix::backend::reg::RetReg&lt;Num&gt;::is_nonzero (1 samples, 0.14%)</title><rect x="43.4193%" y="389" width="0.1357%" height="15" fill="rgb(237,67,25)" fg:x="320" fg:w="1"/><text x="43.6693%" y="399.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (1 samples, 0.14%)</title><rect x="43.4193%" y="373" width="0.1357%" height="15" fill="rgb(222,189,50)" fg:x="320" fg:w="1"/><text x="43.6693%" y="383.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null::runtime_impl (1 samples, 0.14%)</title><rect x="43.4193%" y="357" width="0.1357%" height="15" fill="rgb(245,148,34)" fg:x="320" fg:w="1"/><text x="43.6693%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="43.4193%" y="341" width="0.1357%" height="15" fill="rgb(222,29,6)" fg:x="320" fg:w="1"/><text x="43.6693%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="43.4193%" y="325" width="0.1357%" height="15" fill="rgb(221,189,43)" fg:x="320" fg:w="1"/><text x="43.6693%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="43.4193%" y="309" width="0.1357%" height="15" fill="rgb(207,36,27)" fg:x="320" fg:w="1"/><text x="43.6693%" y="319.50"></text></g><g><title>async_io::driver::block_on (62 samples, 8.41%)</title><rect x="35.4138%" y="565" width="8.4125%" height="15" fill="rgb(217,90,24)" fg:x="261" fg:w="62"/><text x="35.6638%" y="575.50">async_io::dr..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (62 samples, 8.41%)</title><rect x="35.4138%" y="549" width="8.4125%" height="15" fill="rgb(224,66,35)" fg:x="261" fg:w="62"/><text x="35.6638%" y="559.50">std::thread:..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (62 samples, 8.41%)</title><rect x="35.4138%" y="533" width="8.4125%" height="15" fill="rgb(221,13,50)" fg:x="261" fg:w="62"/><text x="35.6638%" y="543.50">std::thread:..</text></g><g><title>async_io::driver::block_on::_{{closure}} (59 samples, 8.01%)</title><rect x="35.8209%" y="517" width="8.0054%" height="15" fill="rgb(236,68,49)" fg:x="264" fg:w="59"/><text x="36.0709%" y="527.50">async_io::d..</text></g><g><title>parking::Inner::park (2 samples, 0.27%)</title><rect x="43.5550%" y="501" width="0.2714%" height="15" fill="rgb(229,146,28)" fg:x="321" fg:w="2"/><text x="43.8050%" y="511.50"></text></g><g><title>std::sync::condvar::Condvar::wait (2 samples, 0.27%)</title><rect x="43.5550%" y="485" width="0.2714%" height="15" fill="rgb(225,31,38)" fg:x="321" fg:w="2"/><text x="43.8050%" y="495.50"></text></g><g><title>std::sys::sync::condvar::futex::Condvar::wait (2 samples, 0.27%)</title><rect x="43.5550%" y="469" width="0.2714%" height="15" fill="rgb(250,208,3)" fg:x="321" fg:w="2"/><text x="43.8050%" y="479.50"></text></g><g><title>std::sys::sync::condvar::futex::Condvar::wait_optional_timeout (2 samples, 0.27%)</title><rect x="43.5550%" y="453" width="0.2714%" height="15" fill="rgb(246,54,23)" fg:x="321" fg:w="2"/><text x="43.8050%" y="463.50"></text></g><g><title>std::sys::pal::unix::futex::futex_wait (2 samples, 0.27%)</title><rect x="43.5550%" y="437" width="0.2714%" height="15" fill="rgb(243,76,11)" fg:x="321" fg:w="2"/><text x="43.8050%" y="447.50"></text></g><g><title>syscall (2 samples, 0.27%)</title><rect x="43.5550%" y="421" width="0.2714%" height="15" fill="rgb(245,21,50)" fg:x="321" fg:w="2"/><text x="43.8050%" y="431.50"></text></g><g><title>[unknown] (2 samples, 0.27%)</title><rect x="43.5550%" y="405" width="0.2714%" height="15" fill="rgb(228,9,43)" fg:x="321" fg:w="2"/><text x="43.8050%" y="415.50"></text></g><g><title>[unknown] (2 samples, 0.27%)</title><rect x="43.5550%" y="389" width="0.2714%" height="15" fill="rgb(208,100,47)" fg:x="321" fg:w="2"/><text x="43.8050%" y="399.50"></text></g><g><title>[unknown] (2 samples, 0.27%)</title><rect x="43.5550%" y="373" width="0.2714%" height="15" fill="rgb(232,26,8)" fg:x="321" fg:w="2"/><text x="43.8050%" y="383.50"></text></g><g><title>[unknown] (2 samples, 0.27%)</title><rect x="43.5550%" y="357" width="0.2714%" height="15" fill="rgb(216,166,38)" fg:x="321" fg:w="2"/><text x="43.8050%" y="367.50"></text></g><g><title>[unknown] (2 samples, 0.27%)</title><rect x="43.5550%" y="341" width="0.2714%" height="15" fill="rgb(251,202,51)" fg:x="321" fg:w="2"/><text x="43.8050%" y="351.50"></text></g><g><title>[unknown] (2 samples, 0.27%)</title><rect x="43.5550%" y="325" width="0.2714%" height="15" fill="rgb(254,216,34)" fg:x="321" fg:w="2"/><text x="43.8050%" y="335.50"></text></g><g><title>[unknown] (2 samples, 0.27%)</title><rect x="43.5550%" y="309" width="0.2714%" height="15" fill="rgb(251,32,27)" fg:x="321" fg:w="2"/><text x="43.8050%" y="319.50"></text></g><g><title>[unknown] (2 samples, 0.27%)</title><rect x="43.5550%" y="293" width="0.2714%" height="15" fill="rgb(208,127,28)" fg:x="321" fg:w="2"/><text x="43.8050%" y="303.50"></text></g><g><title>[unknown] (2 samples, 0.27%)</title><rect x="43.5550%" y="277" width="0.2714%" height="15" fill="rgb(224,137,22)" fg:x="321" fg:w="2"/><text x="43.8050%" y="287.50"></text></g><g><title>[unknown] (2 samples, 0.27%)</title><rect x="43.5550%" y="261" width="0.2714%" height="15" fill="rgb(254,70,32)" fg:x="321" fg:w="2"/><text x="43.8050%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="43.6906%" y="245" width="0.1357%" height="15" fill="rgb(229,75,37)" fg:x="322" fg:w="1"/><text x="43.9406%" y="255.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="43.6906%" y="229" width="0.1357%" height="15" fill="rgb(252,64,23)" fg:x="322" fg:w="1"/><text x="43.9406%" y="239.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="43.6906%" y="213" width="0.1357%" height="15" fill="rgb(232,162,48)" fg:x="322" fg:w="1"/><text x="43.9406%" y="223.50"></text></g><g><title>async_lock::once_cell::OnceCell&lt;T&gt;::initialize_or_wait::_{{closure}} (1 samples, 0.14%)</title><rect x="43.8263%" y="501" width="0.1357%" height="15" fill="rgb(246,160,12)" fg:x="323" fg:w="1"/><text x="44.0763%" y="511.50"></text></g><g><title>&lt;event_listener_strategy::Blocking as event_listener_strategy::Strategy&gt;::wait (1 samples, 0.14%)</title><rect x="43.8263%" y="485" width="0.1357%" height="15" fill="rgb(247,166,0)" fg:x="323" fg:w="1"/><text x="44.0763%" y="495.50"></text></g><g><title>event_listener::EventListener&lt;T&gt;::wait (1 samples, 0.14%)</title><rect x="43.8263%" y="469" width="0.1357%" height="15" fill="rgb(249,219,21)" fg:x="323" fg:w="1"/><text x="44.0763%" y="479.50"></text></g><g><title>event_listener::Listener&lt;T,B&gt;::wait_internal (1 samples, 0.14%)</title><rect x="43.8263%" y="453" width="0.1357%" height="15" fill="rgb(205,209,3)" fg:x="323" fg:w="1"/><text x="44.0763%" y="463.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.14%)</title><rect x="43.8263%" y="437" width="0.1357%" height="15" fill="rgb(243,44,1)" fg:x="323" fg:w="1"/><text x="44.0763%" y="447.50"></text></g><g><title>event_listener::Listener&lt;T,B&gt;::wait_internal::_{{closure}} (1 samples, 0.14%)</title><rect x="43.8263%" y="421" width="0.1357%" height="15" fill="rgb(206,159,16)" fg:x="323" fg:w="1"/><text x="44.0763%" y="431.50"></text></g><g><title>event_listener::Listener&lt;T,B&gt;::wait_with_parker (1 samples, 0.14%)</title><rect x="43.8263%" y="405" width="0.1357%" height="15" fill="rgb(244,77,30)" fg:x="323" fg:w="1"/><text x="44.0763%" y="415.50"></text></g><g><title>parking::Inner::park (1 samples, 0.14%)</title><rect x="43.8263%" y="389" width="0.1357%" height="15" fill="rgb(218,69,12)" fg:x="323" fg:w="1"/><text x="44.0763%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;()&gt;&gt; (1 samples, 0.14%)</title><rect x="43.8263%" y="373" width="0.1357%" height="15" fill="rgb(212,87,7)" fg:x="323" fg:w="1"/><text x="44.0763%" y="383.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.14%)</title><rect x="43.8263%" y="357" width="0.1357%" height="15" fill="rgb(245,114,25)" fg:x="323" fg:w="1"/><text x="44.0763%" y="367.50"></text></g><g><title>std::sync::poison::Flag::done (1 samples, 0.14%)</title><rect x="43.8263%" y="341" width="0.1357%" height="15" fill="rgb(210,61,42)" fg:x="323" fg:w="1"/><text x="44.0763%" y="351.50"></text></g><g><title>std::thread::panicking (1 samples, 0.14%)</title><rect x="43.8263%" y="325" width="0.1357%" height="15" fill="rgb(211,52,33)" fg:x="323" fg:w="1"/><text x="44.0763%" y="335.50"></text></g><g><title>std::panicking::panicking (1 samples, 0.14%)</title><rect x="43.8263%" y="309" width="0.1357%" height="15" fill="rgb(234,58,33)" fg:x="323" fg:w="1"/><text x="44.0763%" y="319.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (1 samples, 0.14%)</title><rect x="43.8263%" y="293" width="0.1357%" height="15" fill="rgb(220,115,36)" fg:x="323" fg:w="1"/><text x="44.0763%" y="303.50"></text></g><g><title>smol-1 (65 samples, 8.82%)</title><rect x="35.2782%" y="869" width="8.8195%" height="15" fill="rgb(243,153,54)" fg:x="260" fg:w="65"/><text x="35.5282%" y="879.50">smol-1</text></g><g><title>clone3 (64 samples, 8.68%)</title><rect x="35.4138%" y="853" width="8.6839%" height="15" fill="rgb(251,47,18)" fg:x="261" fg:w="64"/><text x="35.6638%" y="863.50">clone3</text></g><g><title>start_thread (64 samples, 8.68%)</title><rect x="35.4138%" y="837" width="8.6839%" height="15" fill="rgb(242,102,42)" fg:x="261" fg:w="64"/><text x="35.6638%" y="847.50">start_thread</text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (64 samples, 8.68%)</title><rect x="35.4138%" y="821" width="8.6839%" height="15" fill="rgb(234,31,38)" fg:x="261" fg:w="64"/><text x="35.6638%" y="831.50">std::sys::pa..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (64 samples, 8.68%)</title><rect x="35.4138%" y="805" width="8.6839%" height="15" fill="rgb(221,117,51)" fg:x="261" fg:w="64"/><text x="35.6638%" y="815.50">&lt;alloc::boxe..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (64 samples, 8.68%)</title><rect x="35.4138%" y="789" width="8.6839%" height="15" fill="rgb(212,20,18)" fg:x="261" fg:w="64"/><text x="35.6638%" y="799.50">&lt;alloc::boxe..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (64 samples, 8.68%)</title><rect x="35.4138%" y="773" width="8.6839%" height="15" fill="rgb(245,133,36)" fg:x="261" fg:w="64"/><text x="35.6638%" y="783.50">core::ops::f..</text></g><g><title>std::thread::Builder::spawn_unchecked_::_{{closure}} (64 samples, 8.68%)</title><rect x="35.4138%" y="757" width="8.6839%" height="15" fill="rgb(212,6,19)" fg:x="261" fg:w="64"/><text x="35.6638%" y="767.50">std::thread:..</text></g><g><title>std::panic::catch_unwind (64 samples, 8.68%)</title><rect x="35.4138%" y="741" width="8.6839%" height="15" fill="rgb(218,1,36)" fg:x="261" fg:w="64"/><text x="35.6638%" y="751.50">std::panic::..</text></g><g><title>std::panicking::try (64 samples, 8.68%)</title><rect x="35.4138%" y="725" width="8.6839%" height="15" fill="rgb(246,84,54)" fg:x="261" fg:w="64"/><text x="35.6638%" y="735.50">std::panicki..</text></g><g><title>std::panicking::try::do_call (64 samples, 8.68%)</title><rect x="35.4138%" y="709" width="8.6839%" height="15" fill="rgb(242,110,6)" fg:x="261" fg:w="64"/><text x="35.6638%" y="719.50">std::panicki..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (64 samples, 8.68%)</title><rect x="35.4138%" y="693" width="8.6839%" height="15" fill="rgb(214,47,5)" fg:x="261" fg:w="64"/><text x="35.6638%" y="703.50">&lt;core::panic..</text></g><g><title>std::thread::Builder::spawn_unchecked_::_{{closure}}::_{{closure}} (64 samples, 8.68%)</title><rect x="35.4138%" y="677" width="8.6839%" height="15" fill="rgb(218,159,25)" fg:x="261" fg:w="64"/><text x="35.6638%" y="687.50">std::thread:..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (64 samples, 8.68%)</title><rect x="35.4138%" y="661" width="8.6839%" height="15" fill="rgb(215,211,28)" fg:x="261" fg:w="64"/><text x="35.6638%" y="671.50">std::sys_com..</text></g><g><title>smol::spawn::spawn::global::_{{closure}}::_{{closure}} (64 samples, 8.68%)</title><rect x="35.4138%" y="645" width="8.6839%" height="15" fill="rgb(238,59,32)" fg:x="261" fg:w="64"/><text x="35.6638%" y="655.50">smol::spawn:..</text></g><g><title>std::panic::catch_unwind (64 samples, 8.68%)</title><rect x="35.4138%" y="629" width="8.6839%" height="15" fill="rgb(226,82,3)" fg:x="261" fg:w="64"/><text x="35.6638%" y="639.50">std::panic::..</text></g><g><title>std::panicking::try (64 samples, 8.68%)</title><rect x="35.4138%" y="613" width="8.6839%" height="15" fill="rgb(240,164,32)" fg:x="261" fg:w="64"/><text x="35.6638%" y="623.50">std::panicki..</text></g><g><title>std::panicking::try::do_call (64 samples, 8.68%)</title><rect x="35.4138%" y="597" width="8.6839%" height="15" fill="rgb(232,46,7)" fg:x="261" fg:w="64"/><text x="35.6638%" y="607.50">std::panicki..</text></g><g><title>smol::spawn::spawn::global::_{{closure}}::_{{closure}}::_{{closure}} (64 samples, 8.68%)</title><rect x="35.4138%" y="581" width="8.6839%" height="15" fill="rgb(229,129,53)" fg:x="261" fg:w="64"/><text x="35.6638%" y="591.50">smol::spawn:..</text></g><g><title>smol::spawn::spawn::global (2 samples, 0.27%)</title><rect x="43.8263%" y="565" width="0.2714%" height="15" fill="rgb(234,188,29)" fg:x="323" fg:w="2"/><text x="44.0763%" y="575.50"></text></g><g><title>async_lock::once_cell::OnceCell&lt;T&gt;::get_or_init_blocking (2 samples, 0.27%)</title><rect x="43.8263%" y="549" width="0.2714%" height="15" fill="rgb(246,141,4)" fg:x="323" fg:w="2"/><text x="44.0763%" y="559.50"></text></g><g><title>async_lock::once_cell::OnceCell&lt;T&gt;::get_or_try_init_blocking (2 samples, 0.27%)</title><rect x="43.8263%" y="533" width="0.2714%" height="15" fill="rgb(229,23,39)" fg:x="323" fg:w="2"/><text x="44.0763%" y="543.50"></text></g><g><title>async_lock::once_cell::now_or_never (2 samples, 0.27%)</title><rect x="43.8263%" y="517" width="0.2714%" height="15" fill="rgb(206,12,3)" fg:x="323" fg:w="2"/><text x="44.0763%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_lock::once_cell::OnceCell&lt;async_executor::Executor&gt;::initialize_or_wait&lt;core::convert::Infallible,core::future::ready::Ready&lt;core::result::Result&lt;async_executor::Executor,core::convert::Infallible&gt;&gt;,async_lock::once_cell::OnceCell&lt;async_executor::Executor&gt;::get_or_try_init_blocking&lt;core::convert::Infallible,async_lock::once_cell::OnceCell&lt;async_executor::Executor&gt;::get_or_init_blocking&lt;smol::spawn::spawn::global::{{closure}}&gt;::{{closure}}&gt;::{{closure}},event_listener_strategy::Blocking&gt;::{{closure}}&gt; (1 samples, 0.14%)</title><rect x="43.9620%" y="501" width="0.1357%" height="15" fill="rgb(252,226,20)" fg:x="324" fg:w="1"/><text x="44.2120%" y="511.50"></text></g><g><title>concurrent_queue::unbounded::Slot&lt;T&gt;::wait_write (1 samples, 0.14%)</title><rect x="44.3691%" y="325" width="0.1357%" height="15" fill="rgb(216,123,35)" fg:x="327" fg:w="1"/><text x="44.6191%" y="335.50"></text></g><g><title>async_executor::steal (4 samples, 0.54%)</title><rect x="44.2334%" y="373" width="0.5427%" height="15" fill="rgb(212,68,40)" fg:x="326" fg:w="4"/><text x="44.4834%" y="383.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (4 samples, 0.54%)</title><rect x="44.2334%" y="357" width="0.5427%" height="15" fill="rgb(254,125,32)" fg:x="326" fg:w="4"/><text x="44.4834%" y="367.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (4 samples, 0.54%)</title><rect x="44.2334%" y="341" width="0.5427%" height="15" fill="rgb(253,97,22)" fg:x="326" fg:w="4"/><text x="44.4834%" y="351.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (2 samples, 0.27%)</title><rect x="44.5047%" y="325" width="0.2714%" height="15" fill="rgb(241,101,14)" fg:x="328" fg:w="2"/><text x="44.7547%" y="335.50"></text></g><g><title>core::sync::atomic::atomic_load (2 samples, 0.27%)</title><rect x="44.5047%" y="309" width="0.2714%" height="15" fill="rgb(238,103,29)" fg:x="328" fg:w="2"/><text x="44.7547%" y="319.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (1 samples, 0.14%)</title><rect x="44.7761%" y="357" width="0.1357%" height="15" fill="rgb(233,195,47)" fg:x="330" fg:w="1"/><text x="45.0261%" y="367.50"></text></g><g><title>async_executor::Runner::runnable::_{{closure}}::_{{closure}} (6 samples, 0.81%)</title><rect x="44.2334%" y="389" width="0.8141%" height="15" fill="rgb(246,218,30)" fg:x="326" fg:w="6"/><text x="44.4834%" y="399.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (2 samples, 0.27%)</title><rect x="44.7761%" y="373" width="0.2714%" height="15" fill="rgb(219,145,47)" fg:x="330" fg:w="2"/><text x="45.0261%" y="383.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (1 samples, 0.14%)</title><rect x="44.9118%" y="357" width="0.1357%" height="15" fill="rgb(243,12,26)" fg:x="331" fg:w="1"/><text x="45.1618%" y="367.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (1 samples, 0.14%)</title><rect x="44.9118%" y="341" width="0.1357%" height="15" fill="rgb(214,87,16)" fg:x="331" fg:w="1"/><text x="45.1618%" y="351.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.14%)</title><rect x="44.9118%" y="325" width="0.1357%" height="15" fill="rgb(208,99,42)" fg:x="331" fg:w="1"/><text x="45.1618%" y="335.50"></text></g><g><title>async_executor::State::notify (3 samples, 0.41%)</title><rect x="45.0475%" y="389" width="0.4071%" height="15" fill="rgb(253,99,2)" fg:x="332" fg:w="3"/><text x="45.2975%" y="399.50"></text></g><g><title>core::task::wake::Waker::wake (3 samples, 0.41%)</title><rect x="45.0475%" y="373" width="0.4071%" height="15" fill="rgb(220,168,23)" fg:x="332" fg:w="3"/><text x="45.2975%" y="383.50"></text></g><g><title>&lt;async_io::driver::block_on::BlockOnWaker as alloc::task::Wake&gt;::wake (3 samples, 0.41%)</title><rect x="45.0475%" y="357" width="0.4071%" height="15" fill="rgb(242,38,24)" fg:x="332" fg:w="3"/><text x="45.2975%" y="367.50"></text></g><g><title>&lt;async_io::driver::block_on::BlockOnWaker as alloc::task::Wake&gt;::wake_by_ref (3 samples, 0.41%)</title><rect x="45.0475%" y="341" width="0.4071%" height="15" fill="rgb(225,182,9)" fg:x="332" fg:w="3"/><text x="45.2975%" y="351.50"></text></g><g><title>parking::Inner::unpark (3 samples, 0.41%)</title><rect x="45.0475%" y="325" width="0.4071%" height="15" fill="rgb(243,178,37)" fg:x="332" fg:w="3"/><text x="45.2975%" y="335.50"></text></g><g><title>syscall (3 samples, 0.41%)</title><rect x="45.0475%" y="309" width="0.4071%" height="15" fill="rgb(232,139,19)" fg:x="332" fg:w="3"/><text x="45.2975%" y="319.50"></text></g><g><title>[unknown] (3 samples, 0.41%)</title><rect x="45.0475%" y="293" width="0.4071%" height="15" fill="rgb(225,201,24)" fg:x="332" fg:w="3"/><text x="45.2975%" y="303.50"></text></g><g><title>[unknown] (3 samples, 0.41%)</title><rect x="45.0475%" y="277" width="0.4071%" height="15" fill="rgb(221,47,46)" fg:x="332" fg:w="3"/><text x="45.2975%" y="287.50"></text></g><g><title>[unknown] (3 samples, 0.41%)</title><rect x="45.0475%" y="261" width="0.4071%" height="15" fill="rgb(249,23,13)" fg:x="332" fg:w="3"/><text x="45.2975%" y="271.50"></text></g><g><title>[unknown] (3 samples, 0.41%)</title><rect x="45.0475%" y="245" width="0.4071%" height="15" fill="rgb(219,9,5)" fg:x="332" fg:w="3"/><text x="45.2975%" y="255.50"></text></g><g><title>[unknown] (3 samples, 0.41%)</title><rect x="45.0475%" y="229" width="0.4071%" height="15" fill="rgb(254,171,16)" fg:x="332" fg:w="3"/><text x="45.2975%" y="239.50"></text></g><g><title>[unknown] (3 samples, 0.41%)</title><rect x="45.0475%" y="213" width="0.4071%" height="15" fill="rgb(230,171,20)" fg:x="332" fg:w="3"/><text x="45.2975%" y="223.50"></text></g><g><title>[unknown] (2 samples, 0.27%)</title><rect x="45.1832%" y="197" width="0.2714%" height="15" fill="rgb(210,71,41)" fg:x="333" fg:w="2"/><text x="45.4332%" y="207.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="45.3189%" y="181" width="0.1357%" height="15" fill="rgb(206,173,20)" fg:x="334" fg:w="1"/><text x="45.5689%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (1 samples, 0.14%)</title><rect x="45.4545%" y="373" width="0.1357%" height="15" fill="rgb(233,88,34)" fg:x="335" fg:w="1"/><text x="45.7045%" y="383.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.14%)</title><rect x="45.4545%" y="357" width="0.1357%" height="15" fill="rgb(223,209,46)" fg:x="335" fg:w="1"/><text x="45.7045%" y="367.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (1 samples, 0.14%)</title><rect x="45.4545%" y="341" width="0.1357%" height="15" fill="rgb(250,43,18)" fg:x="335" fg:w="1"/><text x="45.7045%" y="351.50"></text></g><g><title>syscall (1 samples, 0.14%)</title><rect x="45.4545%" y="325" width="0.1357%" height="15" fill="rgb(208,13,10)" fg:x="335" fg:w="1"/><text x="45.7045%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="45.4545%" y="309" width="0.1357%" height="15" fill="rgb(212,200,36)" fg:x="335" fg:w="1"/><text x="45.7045%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="45.4545%" y="293" width="0.1357%" height="15" fill="rgb(225,90,30)" fg:x="335" fg:w="1"/><text x="45.7045%" y="303.50"></text></g><g><title>std::sys::pal::unix::futex::futex_wait (1 samples, 0.14%)</title><rect x="45.5902%" y="325" width="0.1357%" height="15" fill="rgb(236,182,39)" fg:x="336" fg:w="1"/><text x="45.8402%" y="335.50"></text></g><g><title>syscall (1 samples, 0.14%)</title><rect x="45.5902%" y="309" width="0.1357%" height="15" fill="rgb(212,144,35)" fg:x="336" fg:w="1"/><text x="45.8402%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="45.5902%" y="293" width="0.1357%" height="15" fill="rgb(228,63,44)" fg:x="336" fg:w="1"/><text x="45.8402%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="45.5902%" y="277" width="0.1357%" height="15" fill="rgb(228,109,6)" fg:x="336" fg:w="1"/><text x="45.8402%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="45.5902%" y="261" width="0.1357%" height="15" fill="rgb(238,117,24)" fg:x="336" fg:w="1"/><text x="45.8402%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="45.5902%" y="245" width="0.1357%" height="15" fill="rgb(242,26,26)" fg:x="336" fg:w="1"/><text x="45.8402%" y="255.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="45.5902%" y="229" width="0.1357%" height="15" fill="rgb(221,92,48)" fg:x="336" fg:w="1"/><text x="45.8402%" y="239.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="45.5902%" y="213" width="0.1357%" height="15" fill="rgb(209,209,32)" fg:x="336" fg:w="1"/><text x="45.8402%" y="223.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="45.5902%" y="197" width="0.1357%" height="15" fill="rgb(221,70,22)" fg:x="336" fg:w="1"/><text x="45.8402%" y="207.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="45.5902%" y="181" width="0.1357%" height="15" fill="rgb(248,145,5)" fg:x="336" fg:w="1"/><text x="45.8402%" y="191.50"></text></g><g><title>async_executor::Ticker::sleep (3 samples, 0.41%)</title><rect x="45.4545%" y="389" width="0.4071%" height="15" fill="rgb(226,116,26)" fg:x="335" fg:w="3"/><text x="45.7045%" y="399.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (2 samples, 0.27%)</title><rect x="45.5902%" y="373" width="0.2714%" height="15" fill="rgb(244,5,17)" fg:x="336" fg:w="2"/><text x="45.8402%" y="383.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (2 samples, 0.27%)</title><rect x="45.5902%" y="357" width="0.2714%" height="15" fill="rgb(252,159,33)" fg:x="336" fg:w="2"/><text x="45.8402%" y="367.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock_contended (2 samples, 0.27%)</title><rect x="45.5902%" y="341" width="0.2714%" height="15" fill="rgb(206,71,0)" fg:x="336" fg:w="2"/><text x="45.8402%" y="351.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::spin (1 samples, 0.14%)</title><rect x="45.7259%" y="325" width="0.1357%" height="15" fill="rgb(233,118,54)" fg:x="337" fg:w="1"/><text x="45.9759%" y="335.50"></text></g><g><title>async_executor::Runner::runnable::_{{closure}} (14 samples, 1.90%)</title><rect x="44.0977%" y="453" width="1.8996%" height="15" fill="rgb(234,83,48)" fg:x="325" fg:w="14"/><text x="44.3477%" y="463.50">a..</text></g><g><title>async_executor::Ticker::runnable_with::_{{closure}} (13 samples, 1.76%)</title><rect x="44.2334%" y="437" width="1.7639%" height="15" fill="rgb(228,3,54)" fg:x="326" fg:w="13"/><text x="44.4834%" y="447.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (13 samples, 1.76%)</title><rect x="44.2334%" y="421" width="1.7639%" height="15" fill="rgb(226,155,13)" fg:x="326" fg:w="13"/><text x="44.4834%" y="431.50"></text></g><g><title>async_executor::Ticker::runnable_with::_{{closure}}::_{{closure}} (13 samples, 1.76%)</title><rect x="44.2334%" y="405" width="1.7639%" height="15" fill="rgb(241,28,37)" fg:x="326" fg:w="13"/><text x="44.4834%" y="415.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S,M&gt;::run (1 samples, 0.14%)</title><rect x="45.8616%" y="389" width="0.1357%" height="15" fill="rgb(233,93,10)" fg:x="338" fg:w="1"/><text x="46.1116%" y="399.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S,M&gt;::drop_future (1 samples, 0.14%)</title><rect x="45.8616%" y="373" width="0.1357%" height="15" fill="rgb(225,113,19)" fg:x="338" fg:w="1"/><text x="46.1116%" y="383.50"></text></g><g><title>async_task::utils::abort_on_panic (1 samples, 0.14%)</title><rect x="45.8616%" y="357" width="0.1357%" height="15" fill="rgb(241,2,18)" fg:x="338" fg:w="1"/><text x="46.1116%" y="367.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S,M&gt;::drop_future::_{{closure}} (1 samples, 0.14%)</title><rect x="45.8616%" y="341" width="0.1357%" height="15" fill="rgb(228,207,21)" fg:x="338" fg:w="1"/><text x="46.1116%" y="351.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (1 samples, 0.14%)</title><rect x="45.8616%" y="325" width="0.1357%" height="15" fill="rgb(213,211,35)" fg:x="338" fg:w="1"/><text x="46.1116%" y="335.50"></text></g><g><title>std::panicking::try (1 samples, 0.14%)</title><rect x="45.8616%" y="309" width="0.1357%" height="15" fill="rgb(209,83,10)" fg:x="338" fg:w="1"/><text x="46.1116%" y="319.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.14%)</title><rect x="45.8616%" y="293" width="0.1357%" height="15" fill="rgb(209,164,1)" fg:x="338" fg:w="1"/><text x="46.1116%" y="303.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.14%)</title><rect x="45.8616%" y="277" width="0.1357%" height="15" fill="rgb(213,184,43)" fg:x="338" fg:w="1"/><text x="46.1116%" y="287.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.14%)</title><rect x="45.8616%" y="261" width="0.1357%" height="15" fill="rgb(231,61,34)" fg:x="338" fg:w="1"/><text x="46.1116%" y="271.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S,M&gt;::run::_{{closure}} (1 samples, 0.14%)</title><rect x="45.8616%" y="245" width="0.1357%" height="15" fill="rgb(235,75,3)" fg:x="338" fg:w="1"/><text x="46.1116%" y="255.50"></text></g><g><title>async_executor::Executor::spawn_inner::_{{closure}} (1 samples, 0.14%)</title><rect x="45.8616%" y="229" width="0.1357%" height="15" fill="rgb(220,106,47)" fg:x="338" fg:w="1"/><text x="46.1116%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_executor::CallOnDrop&lt;async_executor::Executor::spawn_inner&lt;(),julia::generate_image_buffer::{{closure}}&gt;::{{closure}}::{{closure}}&gt;&gt; (1 samples, 0.14%)</title><rect x="45.8616%" y="213" width="0.1357%" height="15" fill="rgb(210,196,33)" fg:x="338" fg:w="1"/><text x="46.1116%" y="223.50"></text></g><g><title>syscall (1 samples, 0.14%)</title><rect x="45.8616%" y="197" width="0.1357%" height="15" fill="rgb(229,154,42)" fg:x="338" fg:w="1"/><text x="46.1116%" y="207.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="45.8616%" y="181" width="0.1357%" height="15" fill="rgb(228,114,26)" fg:x="338" fg:w="1"/><text x="46.1116%" y="191.50"></text></g><g><title>core::mem::drop (1 samples, 0.14%)</title><rect x="46.2687%" y="261" width="0.1357%" height="15" fill="rgb(208,144,1)" fg:x="341" fg:w="1"/><text x="46.5187%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::task::wake::Waker&gt;&gt; (1 samples, 0.14%)</title><rect x="46.2687%" y="245" width="0.1357%" height="15" fill="rgb(239,112,37)" fg:x="341" fg:w="1"/><text x="46.5187%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (1 samples, 0.14%)</title><rect x="46.2687%" y="229" width="0.1357%" height="15" fill="rgb(210,96,50)" fg:x="341" fg:w="1"/><text x="46.5187%" y="239.50"></text></g><g><title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (1 samples, 0.14%)</title><rect x="46.2687%" y="213" width="0.1357%" height="15" fill="rgb(222,178,2)" fg:x="341" fg:w="1"/><text x="46.5187%" y="223.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S,M&gt;::drop_waker (1 samples, 0.14%)</title><rect x="46.2687%" y="197" width="0.1357%" height="15" fill="rgb(226,74,18)" fg:x="341" fg:w="1"/><text x="46.5187%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;slab::Slab&lt;core::task::wake::Waker&gt;&gt;&gt; (1 samples, 0.14%)</title><rect x="46.4043%" y="261" width="0.1357%" height="15" fill="rgb(225,67,54)" fg:x="342" fg:w="1"/><text x="46.6543%" y="271.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.14%)</title><rect x="46.4043%" y="245" width="0.1357%" height="15" fill="rgb(251,92,32)" fg:x="342" fg:w="1"/><text x="46.6543%" y="255.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (1 samples, 0.14%)</title><rect x="46.4043%" y="229" width="0.1357%" height="15" fill="rgb(228,149,22)" fg:x="342" fg:w="1"/><text x="46.6543%" y="239.50"></text></g><g><title>slab::Slab&lt;T&gt;::try_remove (1 samples, 0.14%)</title><rect x="46.5400%" y="261" width="0.1357%" height="15" fill="rgb(243,54,13)" fg:x="343" fg:w="1"/><text x="46.7900%" y="271.50"></text></g><g><title>core::mem::replace (1 samples, 0.14%)</title><rect x="46.5400%" y="245" width="0.1357%" height="15" fill="rgb(243,180,28)" fg:x="343" fg:w="1"/><text x="46.7900%" y="255.50"></text></g><g><title>core::ptr::read (1 samples, 0.14%)</title><rect x="46.5400%" y="229" width="0.1357%" height="15" fill="rgb(208,167,24)" fg:x="343" fg:w="1"/><text x="46.7900%" y="239.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_err (2 samples, 0.27%)</title><rect x="46.6757%" y="229" width="0.2714%" height="15" fill="rgb(245,73,45)" fg:x="344" fg:w="2"/><text x="46.9257%" y="239.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_ok (2 samples, 0.27%)</title><rect x="46.6757%" y="213" width="0.2714%" height="15" fill="rgb(237,203,48)" fg:x="344" fg:w="2"/><text x="46.9257%" y="223.50"></text></g><g><title>std::sys::pal::unix::futex::futex_wait (5 samples, 0.68%)</title><rect x="47.0828%" y="213" width="0.6784%" height="15" fill="rgb(211,197,16)" fg:x="347" fg:w="5"/><text x="47.3328%" y="223.50"></text></g><g><title>syscall (5 samples, 0.68%)</title><rect x="47.0828%" y="197" width="0.6784%" height="15" fill="rgb(243,99,51)" fg:x="347" fg:w="5"/><text x="47.3328%" y="207.50"></text></g><g><title>[unknown] (5 samples, 0.68%)</title><rect x="47.0828%" y="181" width="0.6784%" height="15" fill="rgb(215,123,29)" fg:x="347" fg:w="5"/><text x="47.3328%" y="191.50"></text></g><g><title>[unknown] (5 samples, 0.68%)</title><rect x="47.0828%" y="165" width="0.6784%" height="15" fill="rgb(239,186,37)" fg:x="347" fg:w="5"/><text x="47.3328%" y="175.50"></text></g><g><title>[unknown] (4 samples, 0.54%)</title><rect x="47.2185%" y="149" width="0.5427%" height="15" fill="rgb(252,136,39)" fg:x="348" fg:w="4"/><text x="47.4685%" y="159.50"></text></g><g><title>[unknown] (4 samples, 0.54%)</title><rect x="47.2185%" y="133" width="0.5427%" height="15" fill="rgb(223,213,32)" fg:x="348" fg:w="4"/><text x="47.4685%" y="143.50"></text></g><g><title>[unknown] (3 samples, 0.41%)</title><rect x="47.3541%" y="117" width="0.4071%" height="15" fill="rgb(233,115,5)" fg:x="349" fg:w="3"/><text x="47.6041%" y="127.50"></text></g><g><title>[unknown] (3 samples, 0.41%)</title><rect x="47.3541%" y="101" width="0.4071%" height="15" fill="rgb(207,226,44)" fg:x="349" fg:w="3"/><text x="47.6041%" y="111.50"></text></g><g><title>[unknown] (2 samples, 0.27%)</title><rect x="47.4898%" y="85" width="0.2714%" height="15" fill="rgb(208,126,0)" fg:x="350" fg:w="2"/><text x="47.7398%" y="95.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="47.6255%" y="69" width="0.1357%" height="15" fill="rgb(244,66,21)" fg:x="351" fg:w="1"/><text x="47.8755%" y="79.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="47.6255%" y="53" width="0.1357%" height="15" fill="rgb(222,97,12)" fg:x="351" fg:w="1"/><text x="47.8755%" y="63.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="47.6255%" y="37" width="0.1357%" height="15" fill="rgb(219,213,19)" fg:x="351" fg:w="1"/><text x="47.8755%" y="47.50"></text></g><g><title>&lt;async_executor::CallOnDrop&lt;F&gt; as core::ops::drop::Drop&gt;::drop (26 samples, 3.53%)</title><rect x="46.2687%" y="293" width="3.5278%" height="15" fill="rgb(252,169,30)" fg:x="341" fg:w="26"/><text x="46.5187%" y="303.50">&lt;as..</text></g><g><title>async_executor::Executor::spawn_inner::_{{closure}}::_{{closure}} (26 samples, 3.53%)</title><rect x="46.2687%" y="277" width="3.5278%" height="15" fill="rgb(206,32,51)" fg:x="341" fg:w="26"/><text x="46.5187%" y="287.50">asy..</text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (23 samples, 3.12%)</title><rect x="46.6757%" y="261" width="3.1208%" height="15" fill="rgb(250,172,42)" fg:x="344" fg:w="23"/><text x="46.9257%" y="271.50">std..</text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (23 samples, 3.12%)</title><rect x="46.6757%" y="245" width="3.1208%" height="15" fill="rgb(209,34,43)" fg:x="344" fg:w="23"/><text x="46.9257%" y="255.50">std..</text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock_contended (21 samples, 2.85%)</title><rect x="46.9471%" y="229" width="2.8494%" height="15" fill="rgb(223,11,35)" fg:x="346" fg:w="21"/><text x="47.1971%" y="239.50">st..</text></g><g><title>std::sys::sync::mutex::futex::Mutex::spin (15 samples, 2.04%)</title><rect x="47.7612%" y="213" width="2.0353%" height="15" fill="rgb(251,219,26)" fg:x="352" fg:w="15"/><text x="48.0112%" y="223.50">s..</text></g><g><title>core::sync::atomic::AtomicU32::load (3 samples, 0.41%)</title><rect x="49.3894%" y="197" width="0.4071%" height="15" fill="rgb(231,119,3)" fg:x="364" fg:w="3"/><text x="49.6394%" y="207.50"></text></g><g><title>core::sync::atomic::atomic_load (3 samples, 0.41%)</title><rect x="49.3894%" y="181" width="0.4071%" height="15" fill="rgb(216,97,11)" fg:x="364" fg:w="3"/><text x="49.6394%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_executor::CallOnDrop&lt;async_executor::Executor::spawn_inner&lt;(),julia::generate_image_buffer::{{closure}}&gt;::{{closure}}::{{closure}}&gt;&gt; (33 samples, 4.48%)</title><rect x="46.2687%" y="309" width="4.4776%" height="15" fill="rgb(223,59,9)" fg:x="341" fg:w="33"/><text x="46.5187%" y="319.50">core:..</text></g><g><title>syscall (7 samples, 0.95%)</title><rect x="49.7965%" y="293" width="0.9498%" height="15" fill="rgb(233,93,31)" fg:x="367" fg:w="7"/><text x="50.0465%" y="303.50"></text></g><g><title>[unknown] (7 samples, 0.95%)</title><rect x="49.7965%" y="277" width="0.9498%" height="15" fill="rgb(239,81,33)" fg:x="367" fg:w="7"/><text x="50.0465%" y="287.50"></text></g><g><title>[unknown] (7 samples, 0.95%)</title><rect x="49.7965%" y="261" width="0.9498%" height="15" fill="rgb(213,120,34)" fg:x="367" fg:w="7"/><text x="50.0465%" y="271.50"></text></g><g><title>[unknown] (6 samples, 0.81%)</title><rect x="49.9322%" y="245" width="0.8141%" height="15" fill="rgb(243,49,53)" fg:x="368" fg:w="6"/><text x="50.1822%" y="255.50"></text></g><g><title>[unknown] (5 samples, 0.68%)</title><rect x="50.0678%" y="229" width="0.6784%" height="15" fill="rgb(247,216,33)" fg:x="369" fg:w="5"/><text x="50.3178%" y="239.50"></text></g><g><title>[unknown] (3 samples, 0.41%)</title><rect x="50.3392%" y="213" width="0.4071%" height="15" fill="rgb(226,26,14)" fg:x="371" fg:w="3"/><text x="50.5892%" y="223.50"></text></g><g><title>[unknown] (3 samples, 0.41%)</title><rect x="50.3392%" y="197" width="0.4071%" height="15" fill="rgb(215,49,53)" fg:x="371" fg:w="3"/><text x="50.5892%" y="207.50"></text></g><g><title>[unknown] (2 samples, 0.27%)</title><rect x="50.4749%" y="181" width="0.2714%" height="15" fill="rgb(245,162,40)" fg:x="372" fg:w="2"/><text x="50.7249%" y="191.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="50.6106%" y="165" width="0.1357%" height="15" fill="rgb(229,68,17)" fg:x="373" fg:w="1"/><text x="50.8606%" y="175.50"></text></g><g><title>num_complex::Complex&lt;T&gt;::norm (4 samples, 0.54%)</title><rect x="50.7463%" y="277" width="0.5427%" height="15" fill="rgb(213,182,10)" fg:x="374" fg:w="4"/><text x="50.9963%" y="287.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::hypot (4 samples, 0.54%)</title><rect x="50.7463%" y="261" width="0.5427%" height="15" fill="rgb(245,125,30)" fg:x="374" fg:w="4"/><text x="50.9963%" y="271.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::hypot (4 samples, 0.54%)</title><rect x="50.7463%" y="245" width="0.5427%" height="15" fill="rgb(232,202,2)" fg:x="374" fg:w="4"/><text x="50.9963%" y="255.50"></text></g><g><title>hypot (4 samples, 0.54%)</title><rect x="50.7463%" y="229" width="0.5427%" height="15" fill="rgb(237,140,51)" fg:x="374" fg:w="4"/><text x="50.9963%" y="239.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (58 samples, 7.87%)</title><rect x="44.0977%" y="485" width="7.8697%" height="15" fill="rgb(236,157,25)" fg:x="325" fg:w="58"/><text x="44.3477%" y="495.50">&lt;futures_li..</text></g><g><title>async_executor::Executor::run::_{{closure}}::_{{closure}} (58 samples, 7.87%)</title><rect x="44.0977%" y="469" width="7.8697%" height="15" fill="rgb(219,209,0)" fg:x="325" fg:w="58"/><text x="44.3477%" y="479.50">async_execu..</text></g><g><title>async_task::runnable::Runnable&lt;M&gt;::run (44 samples, 5.97%)</title><rect x="45.9973%" y="453" width="5.9701%" height="15" fill="rgb(240,116,54)" fg:x="339" fg:w="44"/><text x="46.2473%" y="463.50">async_ta..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S,M&gt;::run (44 samples, 5.97%)</title><rect x="45.9973%" y="437" width="5.9701%" height="15" fill="rgb(216,10,36)" fg:x="339" fg:w="44"/><text x="46.2473%" y="447.50">async_ta..</text></g><g><title>std::panic::catch_unwind (43 samples, 5.83%)</title><rect x="46.1330%" y="421" width="5.8345%" height="15" fill="rgb(222,72,44)" fg:x="340" fg:w="43"/><text x="46.3830%" y="431.50">std::pa..</text></g><g><title>std::panicking::try (43 samples, 5.83%)</title><rect x="46.1330%" y="405" width="5.8345%" height="15" fill="rgb(232,159,9)" fg:x="340" fg:w="43"/><text x="46.3830%" y="415.50">std::pa..</text></g><g><title>std::panicking::try::do_call (43 samples, 5.83%)</title><rect x="46.1330%" y="389" width="5.8345%" height="15" fill="rgb(210,39,32)" fg:x="340" fg:w="43"/><text x="46.3830%" y="399.50">std::pa..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (43 samples, 5.83%)</title><rect x="46.1330%" y="373" width="5.8345%" height="15" fill="rgb(216,194,45)" fg:x="340" fg:w="43"/><text x="46.3830%" y="383.50">&lt;core::..</text></g><g><title>core::ops::function::FnOnce::call_once (43 samples, 5.83%)</title><rect x="46.1330%" y="357" width="5.8345%" height="15" fill="rgb(218,18,35)" fg:x="340" fg:w="43"/><text x="46.3830%" y="367.50">core::o..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S,M&gt;::run::_{{closure}} (43 samples, 5.83%)</title><rect x="46.1330%" y="341" width="5.8345%" height="15" fill="rgb(207,83,51)" fg:x="340" fg:w="43"/><text x="46.3830%" y="351.50">async_t..</text></g><g><title>async_executor::Executor::spawn_inner::_{{closure}} (43 samples, 5.83%)</title><rect x="46.1330%" y="325" width="5.8345%" height="15" fill="rgb(225,63,43)" fg:x="340" fg:w="43"/><text x="46.3830%" y="335.50">async_e..</text></g><g><title>julia::generate_image_buffer::_{{closure}} (9 samples, 1.22%)</title><rect x="50.7463%" y="309" width="1.2212%" height="15" fill="rgb(207,57,36)" fg:x="374" fg:w="9"/><text x="50.9963%" y="319.50"></text></g><g><title>julia::color_generator::_{{closure}} (9 samples, 1.22%)</title><rect x="50.7463%" y="293" width="1.2212%" height="15" fill="rgb(216,99,33)" fg:x="374" fg:w="9"/><text x="50.9963%" y="303.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::powf (5 samples, 0.68%)</title><rect x="51.2890%" y="277" width="0.6784%" height="15" fill="rgb(225,42,16)" fg:x="378" fg:w="5"/><text x="51.5390%" y="287.50"></text></g><g><title>pow (5 samples, 0.68%)</title><rect x="51.2890%" y="261" width="0.6784%" height="15" fill="rgb(220,201,45)" fg:x="378" fg:w="5"/><text x="51.5390%" y="271.50"></text></g><g><title>[libm.so.6] (5 samples, 0.68%)</title><rect x="51.2890%" y="245" width="0.6784%" height="15" fill="rgb(225,33,4)" fg:x="378" fg:w="5"/><text x="51.5390%" y="255.50"></text></g><g><title>async_executor::Executor::run::_{{closure}} (59 samples, 8.01%)</title><rect x="44.0977%" y="501" width="8.0054%" height="15" fill="rgb(224,33,50)" fg:x="325" fg:w="59"/><text x="44.3477%" y="511.50">async_execu..</text></g><g><title>async_executor::Runner::new (1 samples, 0.14%)</title><rect x="51.9674%" y="485" width="0.1357%" height="15" fill="rgb(246,198,51)" fg:x="383" fg:w="1"/><text x="52.2174%" y="495.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::bounded (1 samples, 0.14%)</title><rect x="51.9674%" y="469" width="0.1357%" height="15" fill="rgb(205,22,4)" fg:x="383" fg:w="1"/><text x="52.2174%" y="479.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::new (1 samples, 0.14%)</title><rect x="51.9674%" y="453" width="0.1357%" height="15" fill="rgb(206,3,8)" fg:x="383" fg:w="1"/><text x="52.2174%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.14%)</title><rect x="51.9674%" y="437" width="0.1357%" height="15" fill="rgb(251,23,15)" fg:x="383" fg:w="1"/><text x="52.2174%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.14%)</title><rect x="51.9674%" y="421" width="0.1357%" height="15" fill="rgb(252,88,28)" fg:x="383" fg:w="1"/><text x="52.2174%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.14%)</title><rect x="51.9674%" y="405" width="0.1357%" height="15" fill="rgb(212,127,14)" fg:x="383" fg:w="1"/><text x="52.2174%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (1 samples, 0.14%)</title><rect x="51.9674%" y="389" width="0.1357%" height="15" fill="rgb(247,145,37)" fg:x="383" fg:w="1"/><text x="52.2174%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.14%)</title><rect x="51.9674%" y="373" width="0.1357%" height="15" fill="rgb(209,117,53)" fg:x="383" fg:w="1"/><text x="52.2174%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.14%)</title><rect x="51.9674%" y="357" width="0.1357%" height="15" fill="rgb(212,90,42)" fg:x="383" fg:w="1"/><text x="52.2174%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.14%)</title><rect x="51.9674%" y="341" width="0.1357%" height="15" fill="rgb(218,164,37)" fg:x="383" fg:w="1"/><text x="52.2174%" y="351.50"></text></g><g><title>malloc (1 samples, 0.14%)</title><rect x="51.9674%" y="325" width="0.1357%" height="15" fill="rgb(246,65,34)" fg:x="383" fg:w="1"/><text x="52.2174%" y="335.50"></text></g><g><title>_int_malloc (1 samples, 0.14%)</title><rect x="51.9674%" y="309" width="0.1357%" height="15" fill="rgb(231,100,33)" fg:x="383" fg:w="1"/><text x="52.2174%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="51.9674%" y="293" width="0.1357%" height="15" fill="rgb(228,126,14)" fg:x="383" fg:w="1"/><text x="52.2174%" y="303.50"></text></g><g><title>async_io::driver::block_on (60 samples, 8.14%)</title><rect x="44.0977%" y="565" width="8.1411%" height="15" fill="rgb(215,173,21)" fg:x="325" fg:w="60"/><text x="44.3477%" y="575.50">async_io::d..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (60 samples, 8.14%)</title><rect x="44.0977%" y="549" width="8.1411%" height="15" fill="rgb(210,6,40)" fg:x="325" fg:w="60"/><text x="44.3477%" y="559.50">std::thread..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (60 samples, 8.14%)</title><rect x="44.0977%" y="533" width="8.1411%" height="15" fill="rgb(212,48,18)" fg:x="325" fg:w="60"/><text x="44.3477%" y="543.50">std::thread..</text></g><g><title>async_io::driver::block_on::_{{closure}} (60 samples, 8.14%)</title><rect x="44.0977%" y="517" width="8.1411%" height="15" fill="rgb(230,214,11)" fg:x="325" fg:w="60"/><text x="44.3477%" y="527.50">async_io::d..</text></g><g><title>parking::Inner::park (1 samples, 0.14%)</title><rect x="52.1031%" y="501" width="0.1357%" height="15" fill="rgb(254,105,39)" fg:x="384" fg:w="1"/><text x="52.3531%" y="511.50"></text></g><g><title>std::sync::condvar::Condvar::wait (1 samples, 0.14%)</title><rect x="52.1031%" y="485" width="0.1357%" height="15" fill="rgb(245,158,5)" fg:x="384" fg:w="1"/><text x="52.3531%" y="495.50"></text></g><g><title>std::sys::sync::condvar::futex::Condvar::wait (1 samples, 0.14%)</title><rect x="52.1031%" y="469" width="0.1357%" height="15" fill="rgb(249,208,11)" fg:x="384" fg:w="1"/><text x="52.3531%" y="479.50"></text></g><g><title>std::sys::sync::condvar::futex::Condvar::wait_optional_timeout (1 samples, 0.14%)</title><rect x="52.1031%" y="453" width="0.1357%" height="15" fill="rgb(210,39,28)" fg:x="384" fg:w="1"/><text x="52.3531%" y="463.50"></text></g><g><title>std::sys::pal::unix::futex::futex_wait (1 samples, 0.14%)</title><rect x="52.1031%" y="437" width="0.1357%" height="15" fill="rgb(211,56,53)" fg:x="384" fg:w="1"/><text x="52.3531%" y="447.50"></text></g><g><title>syscall (1 samples, 0.14%)</title><rect x="52.1031%" y="421" width="0.1357%" height="15" fill="rgb(226,201,30)" fg:x="384" fg:w="1"/><text x="52.3531%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="52.1031%" y="405" width="0.1357%" height="15" fill="rgb(239,101,34)" fg:x="384" fg:w="1"/><text x="52.3531%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="52.1031%" y="389" width="0.1357%" height="15" fill="rgb(226,209,5)" fg:x="384" fg:w="1"/><text x="52.3531%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="52.1031%" y="373" width="0.1357%" height="15" fill="rgb(250,105,47)" fg:x="384" fg:w="1"/><text x="52.3531%" y="383.50"></text></g><g><title>&lt;event_listener_strategy::Blocking as event_listener_strategy::Strategy&gt;::wait (1 samples, 0.14%)</title><rect x="52.2388%" y="485" width="0.1357%" height="15" fill="rgb(230,72,3)" fg:x="385" fg:w="1"/><text x="52.4888%" y="495.50"></text></g><g><title>event_listener::EventListener&lt;T&gt;::wait (1 samples, 0.14%)</title><rect x="52.2388%" y="469" width="0.1357%" height="15" fill="rgb(232,218,39)" fg:x="385" fg:w="1"/><text x="52.4888%" y="479.50"></text></g><g><title>event_listener::Listener&lt;T,B&gt;::wait_internal (1 samples, 0.14%)</title><rect x="52.2388%" y="453" width="0.1357%" height="15" fill="rgb(248,166,6)" fg:x="385" fg:w="1"/><text x="52.4888%" y="463.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.14%)</title><rect x="52.2388%" y="437" width="0.1357%" height="15" fill="rgb(247,89,20)" fg:x="385" fg:w="1"/><text x="52.4888%" y="447.50"></text></g><g><title>event_listener::Listener&lt;T,B&gt;::wait_internal::_{{closure}} (1 samples, 0.14%)</title><rect x="52.2388%" y="421" width="0.1357%" height="15" fill="rgb(248,130,54)" fg:x="385" fg:w="1"/><text x="52.4888%" y="431.50"></text></g><g><title>event_listener::Listener&lt;T,B&gt;::wait_with_parker (1 samples, 0.14%)</title><rect x="52.2388%" y="405" width="0.1357%" height="15" fill="rgb(234,196,4)" fg:x="385" fg:w="1"/><text x="52.4888%" y="415.50"></text></g><g><title>event_listener::sys::&lt;impl event_listener::Inner&lt;T&gt;&gt;::register (1 samples, 0.14%)</title><rect x="52.2388%" y="389" width="0.1357%" height="15" fill="rgb(250,143,31)" fg:x="385" fg:w="1"/><text x="52.4888%" y="399.50"></text></g><g><title>event_listener::sys::Inner&lt;T&gt;::remove (1 samples, 0.14%)</title><rect x="52.2388%" y="373" width="0.1357%" height="15" fill="rgb(211,110,34)" fg:x="385" fg:w="1"/><text x="52.4888%" y="383.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_pin_mut (1 samples, 0.14%)</title><rect x="52.2388%" y="357" width="0.1357%" height="15" fill="rgb(215,124,48)" fg:x="385" fg:w="1"/><text x="52.4888%" y="367.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (1 samples, 0.14%)</title><rect x="52.2388%" y="341" width="0.1357%" height="15" fill="rgb(216,46,13)" fg:x="385" fg:w="1"/><text x="52.4888%" y="351.50"></text></g><g><title>smol-2 (65 samples, 8.82%)</title><rect x="44.0977%" y="869" width="8.8195%" height="15" fill="rgb(205,184,25)" fg:x="325" fg:w="65"/><text x="44.3477%" y="879.50">smol-2</text></g><g><title>clone3 (65 samples, 8.82%)</title><rect x="44.0977%" y="853" width="8.8195%" height="15" fill="rgb(228,1,10)" fg:x="325" fg:w="65"/><text x="44.3477%" y="863.50">clone3</text></g><g><title>start_thread (65 samples, 8.82%)</title><rect x="44.0977%" y="837" width="8.8195%" height="15" fill="rgb(213,116,27)" fg:x="325" fg:w="65"/><text x="44.3477%" y="847.50">start_thread</text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (65 samples, 8.82%)</title><rect x="44.0977%" y="821" width="8.8195%" height="15" fill="rgb(241,95,50)" fg:x="325" fg:w="65"/><text x="44.3477%" y="831.50">std::sys::pa..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (65 samples, 8.82%)</title><rect x="44.0977%" y="805" width="8.8195%" height="15" fill="rgb(238,48,32)" fg:x="325" fg:w="65"/><text x="44.3477%" y="815.50">&lt;alloc::boxe..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (65 samples, 8.82%)</title><rect x="44.0977%" y="789" width="8.8195%" height="15" fill="rgb(235,113,49)" fg:x="325" fg:w="65"/><text x="44.3477%" y="799.50">&lt;alloc::boxe..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (65 samples, 8.82%)</title><rect x="44.0977%" y="773" width="8.8195%" height="15" fill="rgb(205,127,43)" fg:x="325" fg:w="65"/><text x="44.3477%" y="783.50">core::ops::f..</text></g><g><title>std::thread::Builder::spawn_unchecked_::_{{closure}} (65 samples, 8.82%)</title><rect x="44.0977%" y="757" width="8.8195%" height="15" fill="rgb(250,162,2)" fg:x="325" fg:w="65"/><text x="44.3477%" y="767.50">std::thread:..</text></g><g><title>std::panic::catch_unwind (65 samples, 8.82%)</title><rect x="44.0977%" y="741" width="8.8195%" height="15" fill="rgb(220,13,41)" fg:x="325" fg:w="65"/><text x="44.3477%" y="751.50">std::panic::..</text></g><g><title>std::panicking::try (65 samples, 8.82%)</title><rect x="44.0977%" y="725" width="8.8195%" height="15" fill="rgb(249,221,25)" fg:x="325" fg:w="65"/><text x="44.3477%" y="735.50">std::panicki..</text></g><g><title>std::panicking::try::do_call (65 samples, 8.82%)</title><rect x="44.0977%" y="709" width="8.8195%" height="15" fill="rgb(215,208,19)" fg:x="325" fg:w="65"/><text x="44.3477%" y="719.50">std::panicki..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (65 samples, 8.82%)</title><rect x="44.0977%" y="693" width="8.8195%" height="15" fill="rgb(236,175,2)" fg:x="325" fg:w="65"/><text x="44.3477%" y="703.50">&lt;core::panic..</text></g><g><title>std::thread::Builder::spawn_unchecked_::_{{closure}}::_{{closure}} (65 samples, 8.82%)</title><rect x="44.0977%" y="677" width="8.8195%" height="15" fill="rgb(241,52,2)" fg:x="325" fg:w="65"/><text x="44.3477%" y="687.50">std::thread:..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (65 samples, 8.82%)</title><rect x="44.0977%" y="661" width="8.8195%" height="15" fill="rgb(248,140,14)" fg:x="325" fg:w="65"/><text x="44.3477%" y="671.50">std::sys_com..</text></g><g><title>smol::spawn::spawn::global::_{{closure}}::_{{closure}} (65 samples, 8.82%)</title><rect x="44.0977%" y="645" width="8.8195%" height="15" fill="rgb(253,22,42)" fg:x="325" fg:w="65"/><text x="44.3477%" y="655.50">smol::spawn:..</text></g><g><title>std::panic::catch_unwind (65 samples, 8.82%)</title><rect x="44.0977%" y="629" width="8.8195%" height="15" fill="rgb(234,61,47)" fg:x="325" fg:w="65"/><text x="44.3477%" y="639.50">std::panic::..</text></g><g><title>std::panicking::try (65 samples, 8.82%)</title><rect x="44.0977%" y="613" width="8.8195%" height="15" fill="rgb(208,226,15)" fg:x="325" fg:w="65"/><text x="44.3477%" y="623.50">std::panicki..</text></g><g><title>std::panicking::try::do_call (65 samples, 8.82%)</title><rect x="44.0977%" y="597" width="8.8195%" height="15" fill="rgb(217,221,4)" fg:x="325" fg:w="65"/><text x="44.3477%" y="607.50">std::panicki..</text></g><g><title>smol::spawn::spawn::global::_{{closure}}::_{{closure}}::_{{closure}} (65 samples, 8.82%)</title><rect x="44.0977%" y="581" width="8.8195%" height="15" fill="rgb(212,174,34)" fg:x="325" fg:w="65"/><text x="44.3477%" y="591.50">smol::spawn:..</text></g><g><title>smol::spawn::spawn::global (5 samples, 0.68%)</title><rect x="52.2388%" y="565" width="0.6784%" height="15" fill="rgb(253,83,4)" fg:x="385" fg:w="5"/><text x="52.4888%" y="575.50"></text></g><g><title>async_lock::once_cell::OnceCell&lt;T&gt;::get_or_init_blocking (5 samples, 0.68%)</title><rect x="52.2388%" y="549" width="0.6784%" height="15" fill="rgb(250,195,49)" fg:x="385" fg:w="5"/><text x="52.4888%" y="559.50"></text></g><g><title>async_lock::once_cell::OnceCell&lt;T&gt;::get_or_try_init_blocking (5 samples, 0.68%)</title><rect x="52.2388%" y="533" width="0.6784%" height="15" fill="rgb(241,192,25)" fg:x="385" fg:w="5"/><text x="52.4888%" y="543.50"></text></g><g><title>async_lock::once_cell::now_or_never (5 samples, 0.68%)</title><rect x="52.2388%" y="517" width="0.6784%" height="15" fill="rgb(208,124,10)" fg:x="385" fg:w="5"/><text x="52.4888%" y="527.50"></text></g><g><title>async_lock::once_cell::OnceCell&lt;T&gt;::initialize_or_wait::_{{closure}} (5 samples, 0.68%)</title><rect x="52.2388%" y="501" width="0.6784%" height="15" fill="rgb(222,33,0)" fg:x="385" fg:w="5"/><text x="52.4888%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::EventListener&gt; (4 samples, 0.54%)</title><rect x="52.3745%" y="485" width="0.5427%" height="15" fill="rgb(234,209,28)" fg:x="386" fg:w="4"/><text x="52.6245%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::Listener&lt;(),alloc::sync::Arc&lt;event_listener::Inner&lt;()&gt;&gt;&gt;&gt; (3 samples, 0.41%)</title><rect x="52.5102%" y="469" width="0.4071%" height="15" fill="rgb(224,11,23)" fg:x="387" fg:w="3"/><text x="52.7602%" y="479.50"></text></g><g><title>event_listener::_::&lt;impl core::ops::drop::Drop for event_listener::Listener&lt;T,B&gt;&gt;::drop (3 samples, 0.41%)</title><rect x="52.5102%" y="453" width="0.4071%" height="15" fill="rgb(232,99,1)" fg:x="387" fg:w="3"/><text x="52.7602%" y="463.50"></text></g><g><title>event_listener::_::&lt;impl core::ops::drop::Drop for event_listener::Listener&lt;T,B&gt;&gt;::drop::__drop_inner (3 samples, 0.41%)</title><rect x="52.5102%" y="437" width="0.4071%" height="15" fill="rgb(237,95,45)" fg:x="387" fg:w="3"/><text x="52.7602%" y="447.50"></text></g><g><title>event_listener::sys::&lt;impl event_listener::Inner&lt;T&gt;&gt;::remove (3 samples, 0.41%)</title><rect x="52.5102%" y="421" width="0.4071%" height="15" fill="rgb(208,109,11)" fg:x="387" fg:w="3"/><text x="52.7602%" y="431.50"></text></g><g><title>event_listener::sys::&lt;impl event_listener::Inner&lt;T&gt;&gt;::lock (3 samples, 0.41%)</title><rect x="52.5102%" y="405" width="0.4071%" height="15" fill="rgb(216,190,48)" fg:x="387" fg:w="3"/><text x="52.7602%" y="415.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (3 samples, 0.41%)</title><rect x="52.5102%" y="389" width="0.4071%" height="15" fill="rgb(251,171,36)" fg:x="387" fg:w="3"/><text x="52.7602%" y="399.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (3 samples, 0.41%)</title><rect x="52.5102%" y="373" width="0.4071%" height="15" fill="rgb(230,62,22)" fg:x="387" fg:w="3"/><text x="52.7602%" y="383.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock_contended (3 samples, 0.41%)</title><rect x="52.5102%" y="357" width="0.4071%" height="15" fill="rgb(225,114,35)" fg:x="387" fg:w="3"/><text x="52.7602%" y="367.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::spin (3 samples, 0.41%)</title><rect x="52.5102%" y="341" width="0.4071%" height="15" fill="rgb(215,118,42)" fg:x="387" fg:w="3"/><text x="52.7602%" y="351.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (1 samples, 0.14%)</title><rect x="52.9172%" y="437" width="0.1357%" height="15" fill="rgb(243,119,21)" fg:x="390" fg:w="1"/><text x="53.1672%" y="447.50"></text></g><g><title>__libc_calloc (1 samples, 0.14%)</title><rect x="53.0529%" y="437" width="0.1357%" height="15" fill="rgb(252,177,53)" fg:x="391" fg:w="1"/><text x="53.3029%" y="447.50"></text></g><g><title>async_io::driver::block_on::CACHE::__getit (3 samples, 0.41%)</title><rect x="52.9172%" y="517" width="0.4071%" height="15" fill="rgb(237,209,29)" fg:x="390" fg:w="3"/><text x="53.1672%" y="527.50"></text></g><g><title>std::sys::thread_local::fast_local::Key&lt;T&gt;::get (3 samples, 0.41%)</title><rect x="52.9172%" y="501" width="0.4071%" height="15" fill="rgb(212,65,23)" fg:x="390" fg:w="3"/><text x="53.1672%" y="511.50"></text></g><g><title>std::sys::thread_local::fast_local::Key&lt;T&gt;::try_initialize (3 samples, 0.41%)</title><rect x="52.9172%" y="485" width="0.4071%" height="15" fill="rgb(230,222,46)" fg:x="390" fg:w="3"/><text x="53.1672%" y="495.50"></text></g><g><title>std::sys::thread_local::fast_local::Key&lt;T&gt;::try_register_dtor (3 samples, 0.41%)</title><rect x="52.9172%" y="469" width="0.4071%" height="15" fill="rgb(215,135,32)" fg:x="390" fg:w="3"/><text x="53.1672%" y="479.50"></text></g><g><title>__cxa_thread_atexit_impl (3 samples, 0.41%)</title><rect x="52.9172%" y="453" width="0.4071%" height="15" fill="rgb(246,101,22)" fg:x="390" fg:w="3"/><text x="53.1672%" y="463.50"></text></g><g><title>pthread_mutex_lock@@GLIBC_2.2.5 (1 samples, 0.14%)</title><rect x="53.1886%" y="437" width="0.1357%" height="15" fill="rgb(206,107,13)" fg:x="392" fg:w="1"/><text x="53.4386%" y="447.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::len (2 samples, 0.27%)</title><rect x="53.4600%" y="357" width="0.2714%" height="15" fill="rgb(250,100,44)" fg:x="394" fg:w="2"/><text x="53.7100%" y="367.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (2 samples, 0.27%)</title><rect x="53.7313%" y="357" width="0.2714%" height="15" fill="rgb(231,147,38)" fg:x="396" fg:w="2"/><text x="53.9813%" y="367.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (2 samples, 0.27%)</title><rect x="53.7313%" y="341" width="0.2714%" height="15" fill="rgb(229,8,40)" fg:x="396" fg:w="2"/><text x="53.9813%" y="351.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (2 samples, 0.27%)</title><rect x="53.7313%" y="325" width="0.2714%" height="15" fill="rgb(221,135,30)" fg:x="396" fg:w="2"/><text x="53.9813%" y="335.50"></text></g><g><title>core::sync::atomic::atomic_load (2 samples, 0.27%)</title><rect x="53.7313%" y="309" width="0.2714%" height="15" fill="rgb(249,193,18)" fg:x="396" fg:w="2"/><text x="53.9813%" y="319.50"></text></g><g><title>async_executor::steal (5 samples, 0.68%)</title><rect x="53.4600%" y="373" width="0.6784%" height="15" fill="rgb(209,133,39)" fg:x="394" fg:w="5"/><text x="53.7100%" y="383.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (1 samples, 0.14%)</title><rect x="54.0027%" y="357" width="0.1357%" height="15" fill="rgb(232,100,14)" fg:x="398" fg:w="1"/><text x="54.2527%" y="367.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (1 samples, 0.14%)</title><rect x="54.4098%" y="357" width="0.1357%" height="15" fill="rgb(224,185,1)" fg:x="401" fg:w="1"/><text x="54.6598%" y="367.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (7 samples, 0.95%)</title><rect x="54.1384%" y="373" width="0.9498%" height="15" fill="rgb(223,139,8)" fg:x="399" fg:w="7"/><text x="54.3884%" y="383.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (4 samples, 0.54%)</title><rect x="54.5455%" y="357" width="0.5427%" height="15" fill="rgb(232,213,38)" fg:x="402" fg:w="4"/><text x="54.7955%" y="367.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (1 samples, 0.14%)</title><rect x="54.9525%" y="341" width="0.1357%" height="15" fill="rgb(207,94,22)" fg:x="405" fg:w="1"/><text x="55.2025%" y="351.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.14%)</title><rect x="54.9525%" y="325" width="0.1357%" height="15" fill="rgb(219,183,54)" fg:x="405" fg:w="1"/><text x="55.2025%" y="335.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap (1 samples, 0.14%)</title><rect x="55.0882%" y="373" width="0.1357%" height="15" fill="rgb(216,185,54)" fg:x="406" fg:w="1"/><text x="55.3382%" y="383.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_err (2 samples, 0.27%)</title><rect x="55.2239%" y="341" width="0.2714%" height="15" fill="rgb(254,217,39)" fg:x="407" fg:w="2"/><text x="55.4739%" y="351.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_ok (2 samples, 0.27%)</title><rect x="55.2239%" y="325" width="0.2714%" height="15" fill="rgb(240,178,23)" fg:x="407" fg:w="2"/><text x="55.4739%" y="335.50"></text></g><g><title>async_executor::Runner::runnable::_{{closure}}::_{{closure}} (16 samples, 2.17%)</title><rect x="53.4600%" y="389" width="2.1710%" height="15" fill="rgb(218,11,47)" fg:x="394" fg:w="16"/><text x="53.7100%" y="399.50">a..</text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (3 samples, 0.41%)</title><rect x="55.2239%" y="373" width="0.4071%" height="15" fill="rgb(218,51,51)" fg:x="407" fg:w="3"/><text x="55.4739%" y="383.50"></text></g><g><title>std::sys::sync::rwlock::futex::RwLock::read (3 samples, 0.41%)</title><rect x="55.2239%" y="357" width="0.4071%" height="15" fill="rgb(238,126,27)" fg:x="407" fg:w="3"/><text x="55.4739%" y="367.50"></text></g><g><title>std::sys::sync::rwlock::futex::is_read_lockable (1 samples, 0.14%)</title><rect x="55.4953%" y="341" width="0.1357%" height="15" fill="rgb(249,202,22)" fg:x="409" fg:w="1"/><text x="55.7453%" y="351.50"></text></g><g><title>async_executor::State::notify (1 samples, 0.14%)</title><rect x="55.6309%" y="389" width="0.1357%" height="15" fill="rgb(254,195,49)" fg:x="410" fg:w="1"/><text x="55.8809%" y="399.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_ok (1 samples, 0.14%)</title><rect x="55.6309%" y="373" width="0.1357%" height="15" fill="rgb(208,123,14)" fg:x="410" fg:w="1"/><text x="55.8809%" y="383.50"></text></g><g><title>async_executor::Ticker::sleep (1 samples, 0.14%)</title><rect x="55.7666%" y="389" width="0.1357%" height="15" fill="rgb(224,200,8)" fg:x="411" fg:w="1"/><text x="56.0166%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (1 samples, 0.14%)</title><rect x="55.7666%" y="373" width="0.1357%" height="15" fill="rgb(217,61,36)" fg:x="411" fg:w="1"/><text x="56.0166%" y="383.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.14%)</title><rect x="55.7666%" y="357" width="0.1357%" height="15" fill="rgb(206,35,45)" fg:x="411" fg:w="1"/><text x="56.0166%" y="367.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (1 samples, 0.14%)</title><rect x="55.7666%" y="341" width="0.1357%" height="15" fill="rgb(217,65,33)" fg:x="411" fg:w="1"/><text x="56.0166%" y="351.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (1 samples, 0.14%)</title><rect x="55.7666%" y="325" width="0.1357%" height="15" fill="rgb(222,158,48)" fg:x="411" fg:w="1"/><text x="56.0166%" y="335.50"></text></g><g><title>core::sync::atomic::atomic_swap (1 samples, 0.14%)</title><rect x="55.7666%" y="309" width="0.1357%" height="15" fill="rgb(254,2,54)" fg:x="411" fg:w="1"/><text x="56.0166%" y="319.50"></text></g><g><title>async_executor::Runner::runnable::_{{closure}} (19 samples, 2.58%)</title><rect x="53.4600%" y="453" width="2.5780%" height="15" fill="rgb(250,143,38)" fg:x="394" fg:w="19"/><text x="53.7100%" y="463.50">as..</text></g><g><title>async_executor::Ticker::runnable_with::_{{closure}} (19 samples, 2.58%)</title><rect x="53.4600%" y="437" width="2.5780%" height="15" fill="rgb(248,25,0)" fg:x="394" fg:w="19"/><text x="53.7100%" y="447.50">as..</text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (19 samples, 2.58%)</title><rect x="53.4600%" y="421" width="2.5780%" height="15" fill="rgb(206,152,27)" fg:x="394" fg:w="19"/><text x="53.7100%" y="431.50">&lt;f..</text></g><g><title>async_executor::Ticker::runnable_with::_{{closure}}::_{{closure}} (19 samples, 2.58%)</title><rect x="53.4600%" y="405" width="2.5780%" height="15" fill="rgb(240,77,30)" fg:x="394" fg:w="19"/><text x="53.7100%" y="415.50">as..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S,M&gt;::run (1 samples, 0.14%)</title><rect x="55.9023%" y="389" width="0.1357%" height="15" fill="rgb(231,5,3)" fg:x="412" fg:w="1"/><text x="56.1523%" y="399.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S,M&gt;::drop_future (1 samples, 0.14%)</title><rect x="55.9023%" y="373" width="0.1357%" height="15" fill="rgb(207,226,32)" fg:x="412" fg:w="1"/><text x="56.1523%" y="383.50"></text></g><g><title>async_task::utils::abort_on_panic (1 samples, 0.14%)</title><rect x="55.9023%" y="357" width="0.1357%" height="15" fill="rgb(222,207,47)" fg:x="412" fg:w="1"/><text x="56.1523%" y="367.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S,M&gt;::drop_future::_{{closure}} (1 samples, 0.14%)</title><rect x="55.9023%" y="341" width="0.1357%" height="15" fill="rgb(229,115,45)" fg:x="412" fg:w="1"/><text x="56.1523%" y="351.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (1 samples, 0.14%)</title><rect x="55.9023%" y="325" width="0.1357%" height="15" fill="rgb(224,191,6)" fg:x="412" fg:w="1"/><text x="56.1523%" y="335.50"></text></g><g><title>std::panicking::try (1 samples, 0.14%)</title><rect x="55.9023%" y="309" width="0.1357%" height="15" fill="rgb(230,227,24)" fg:x="412" fg:w="1"/><text x="56.1523%" y="319.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.14%)</title><rect x="55.9023%" y="293" width="0.1357%" height="15" fill="rgb(228,80,19)" fg:x="412" fg:w="1"/><text x="56.1523%" y="303.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.14%)</title><rect x="55.9023%" y="277" width="0.1357%" height="15" fill="rgb(247,229,0)" fg:x="412" fg:w="1"/><text x="56.1523%" y="287.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.14%)</title><rect x="55.9023%" y="261" width="0.1357%" height="15" fill="rgb(237,194,15)" fg:x="412" fg:w="1"/><text x="56.1523%" y="271.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S,M&gt;::run::_{{closure}} (1 samples, 0.14%)</title><rect x="55.9023%" y="245" width="0.1357%" height="15" fill="rgb(219,203,20)" fg:x="412" fg:w="1"/><text x="56.1523%" y="255.50"></text></g><g><title>async_executor::Executor::spawn_inner::_{{closure}} (1 samples, 0.14%)</title><rect x="55.9023%" y="229" width="0.1357%" height="15" fill="rgb(234,128,8)" fg:x="412" fg:w="1"/><text x="56.1523%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_executor::CallOnDrop&lt;async_executor::Executor::spawn_inner&lt;(),julia::generate_image_buffer::{{closure}}&gt;::{{closure}}::{{closure}}&gt;&gt; (1 samples, 0.14%)</title><rect x="55.9023%" y="213" width="0.1357%" height="15" fill="rgb(248,202,8)" fg:x="412" fg:w="1"/><text x="56.1523%" y="223.50"></text></g><g><title>syscall (1 samples, 0.14%)</title><rect x="55.9023%" y="197" width="0.1357%" height="15" fill="rgb(206,104,37)" fg:x="412" fg:w="1"/><text x="56.1523%" y="207.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="55.9023%" y="181" width="0.1357%" height="15" fill="rgb(223,8,27)" fg:x="412" fg:w="1"/><text x="56.1523%" y="191.50"></text></g><g><title>core::mem::drop (1 samples, 0.14%)</title><rect x="56.1737%" y="261" width="0.1357%" height="15" fill="rgb(216,217,28)" fg:x="414" fg:w="1"/><text x="56.4237%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::task::wake::Waker&gt;&gt; (1 samples, 0.14%)</title><rect x="56.1737%" y="245" width="0.1357%" height="15" fill="rgb(249,199,1)" fg:x="414" fg:w="1"/><text x="56.4237%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (1 samples, 0.14%)</title><rect x="56.1737%" y="229" width="0.1357%" height="15" fill="rgb(240,85,17)" fg:x="414" fg:w="1"/><text x="56.4237%" y="239.50"></text></g><g><title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (1 samples, 0.14%)</title><rect x="56.1737%" y="213" width="0.1357%" height="15" fill="rgb(206,108,45)" fg:x="414" fg:w="1"/><text x="56.4237%" y="223.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S,M&gt;::drop_waker (1 samples, 0.14%)</title><rect x="56.1737%" y="197" width="0.1357%" height="15" fill="rgb(245,210,41)" fg:x="414" fg:w="1"/><text x="56.4237%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;slab::Slab&lt;core::task::wake::Waker&gt;&gt;&gt; (1 samples, 0.14%)</title><rect x="56.3094%" y="261" width="0.1357%" height="15" fill="rgb(206,13,37)" fg:x="415" fg:w="1"/><text x="56.5594%" y="271.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.14%)</title><rect x="56.3094%" y="245" width="0.1357%" height="15" fill="rgb(250,61,18)" fg:x="415" fg:w="1"/><text x="56.5594%" y="255.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (1 samples, 0.14%)</title><rect x="56.3094%" y="229" width="0.1357%" height="15" fill="rgb(235,172,48)" fg:x="415" fg:w="1"/><text x="56.5594%" y="239.50"></text></g><g><title>slab::Slab&lt;T&gt;::try_remove (1 samples, 0.14%)</title><rect x="56.4450%" y="261" width="0.1357%" height="15" fill="rgb(249,201,17)" fg:x="416" fg:w="1"/><text x="56.6950%" y="271.50"></text></g><g><title>core::mem::replace (1 samples, 0.14%)</title><rect x="56.4450%" y="245" width="0.1357%" height="15" fill="rgb(219,208,6)" fg:x="416" fg:w="1"/><text x="56.6950%" y="255.50"></text></g><g><title>core::ptr::read (1 samples, 0.14%)</title><rect x="56.4450%" y="229" width="0.1357%" height="15" fill="rgb(248,31,23)" fg:x="416" fg:w="1"/><text x="56.6950%" y="239.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (3 samples, 0.41%)</title><rect x="56.5807%" y="245" width="0.4071%" height="15" fill="rgb(245,15,42)" fg:x="417" fg:w="3"/><text x="56.8307%" y="255.50"></text></g><g><title>std::sync::poison::Flag::guard (3 samples, 0.41%)</title><rect x="56.5807%" y="229" width="0.4071%" height="15" fill="rgb(222,217,39)" fg:x="417" fg:w="3"/><text x="56.8307%" y="239.50"></text></g><g><title>std::thread::panicking (3 samples, 0.41%)</title><rect x="56.5807%" y="213" width="0.4071%" height="15" fill="rgb(210,219,27)" fg:x="417" fg:w="3"/><text x="56.8307%" y="223.50"></text></g><g><title>std::panicking::panicking (3 samples, 0.41%)</title><rect x="56.5807%" y="197" width="0.4071%" height="15" fill="rgb(252,166,36)" fg:x="417" fg:w="3"/><text x="56.8307%" y="207.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (3 samples, 0.41%)</title><rect x="56.5807%" y="181" width="0.4071%" height="15" fill="rgb(245,132,34)" fg:x="417" fg:w="3"/><text x="56.8307%" y="191.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (3 samples, 0.41%)</title><rect x="56.5807%" y="165" width="0.4071%" height="15" fill="rgb(236,54,3)" fg:x="417" fg:w="3"/><text x="56.8307%" y="175.50"></text></g><g><title>core::sync::atomic::atomic_load (3 samples, 0.41%)</title><rect x="56.5807%" y="149" width="0.4071%" height="15" fill="rgb(241,173,43)" fg:x="417" fg:w="3"/><text x="56.8307%" y="159.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="56.8521%" y="133" width="0.1357%" height="15" fill="rgb(215,190,9)" fg:x="419" fg:w="1"/><text x="57.1021%" y="143.50"></text></g><g><title>std::sys::pal::unix::futex::futex_wait (3 samples, 0.41%)</title><rect x="56.9878%" y="213" width="0.4071%" height="15" fill="rgb(242,101,16)" fg:x="420" fg:w="3"/><text x="57.2378%" y="223.50"></text></g><g><title>syscall (3 samples, 0.41%)</title><rect x="56.9878%" y="197" width="0.4071%" height="15" fill="rgb(223,190,21)" fg:x="420" fg:w="3"/><text x="57.2378%" y="207.50"></text></g><g><title>[unknown] (3 samples, 0.41%)</title><rect x="56.9878%" y="181" width="0.4071%" height="15" fill="rgb(215,228,25)" fg:x="420" fg:w="3"/><text x="57.2378%" y="191.50"></text></g><g><title>[unknown] (3 samples, 0.41%)</title><rect x="56.9878%" y="165" width="0.4071%" height="15" fill="rgb(225,36,22)" fg:x="420" fg:w="3"/><text x="57.2378%" y="175.50"></text></g><g><title>[unknown] (3 samples, 0.41%)</title><rect x="56.9878%" y="149" width="0.4071%" height="15" fill="rgb(251,106,46)" fg:x="420" fg:w="3"/><text x="57.2378%" y="159.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="57.2592%" y="133" width="0.1357%" height="15" fill="rgb(208,90,1)" fg:x="422" fg:w="1"/><text x="57.5092%" y="143.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="57.2592%" y="117" width="0.1357%" height="15" fill="rgb(243,10,4)" fg:x="422" fg:w="1"/><text x="57.5092%" y="127.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="57.2592%" y="101" width="0.1357%" height="15" fill="rgb(212,137,27)" fg:x="422" fg:w="1"/><text x="57.5092%" y="111.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="57.2592%" y="85" width="0.1357%" height="15" fill="rgb(231,220,49)" fg:x="422" fg:w="1"/><text x="57.5092%" y="95.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="57.2592%" y="69" width="0.1357%" height="15" fill="rgb(237,96,20)" fg:x="422" fg:w="1"/><text x="57.5092%" y="79.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="57.2592%" y="53" width="0.1357%" height="15" fill="rgb(239,229,30)" fg:x="422" fg:w="1"/><text x="57.5092%" y="63.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="57.2592%" y="37" width="0.1357%" height="15" fill="rgb(219,65,33)" fg:x="422" fg:w="1"/><text x="57.5092%" y="47.50"></text></g><g><title>&lt;async_executor::CallOnDrop&lt;F&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 2.17%)</title><rect x="56.1737%" y="293" width="2.1710%" height="15" fill="rgb(243,134,7)" fg:x="414" fg:w="16"/><text x="56.4237%" y="303.50">&lt;..</text></g><g><title>async_executor::Executor::spawn_inner::_{{closure}}::_{{closure}} (16 samples, 2.17%)</title><rect x="56.1737%" y="277" width="2.1710%" height="15" fill="rgb(216,177,54)" fg:x="414" fg:w="16"/><text x="56.4237%" y="287.50">a..</text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (13 samples, 1.76%)</title><rect x="56.5807%" y="261" width="1.7639%" height="15" fill="rgb(211,160,20)" fg:x="417" fg:w="13"/><text x="56.8307%" y="271.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (10 samples, 1.36%)</title><rect x="56.9878%" y="245" width="1.3569%" height="15" fill="rgb(239,85,39)" fg:x="420" fg:w="10"/><text x="57.2378%" y="255.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock_contended (10 samples, 1.36%)</title><rect x="56.9878%" y="229" width="1.3569%" height="15" fill="rgb(232,125,22)" fg:x="420" fg:w="10"/><text x="57.2378%" y="239.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::spin (7 samples, 0.95%)</title><rect x="57.3948%" y="213" width="0.9498%" height="15" fill="rgb(244,57,34)" fg:x="423" fg:w="7"/><text x="57.6448%" y="223.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (2 samples, 0.27%)</title><rect x="58.0733%" y="197" width="0.2714%" height="15" fill="rgb(214,203,32)" fg:x="428" fg:w="2"/><text x="58.3233%" y="207.50"></text></g><g><title>core::sync::atomic::atomic_load (2 samples, 0.27%)</title><rect x="58.0733%" y="181" width="0.2714%" height="15" fill="rgb(207,58,43)" fg:x="428" fg:w="2"/><text x="58.3233%" y="191.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::wake (1 samples, 0.14%)</title><rect x="58.3446%" y="293" width="0.1357%" height="15" fill="rgb(215,193,15)" fg:x="430" fg:w="1"/><text x="58.5946%" y="303.50"></text></g><g><title>std::sys::pal::unix::futex::futex_wake (1 samples, 0.14%)</title><rect x="58.3446%" y="277" width="0.1357%" height="15" fill="rgb(232,15,44)" fg:x="430" fg:w="1"/><text x="58.5946%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_executor::CallOnDrop&lt;async_executor::Executor::spawn_inner&lt;(),julia::generate_image_buffer::{{closure}}&gt;::{{closure}}::{{closure}}&gt;&gt; (18 samples, 2.44%)</title><rect x="56.1737%" y="309" width="2.4423%" height="15" fill="rgb(212,3,48)" fg:x="414" fg:w="18"/><text x="56.4237%" y="319.50">co..</text></g><g><title>syscall (1 samples, 0.14%)</title><rect x="58.4803%" y="293" width="0.1357%" height="15" fill="rgb(218,128,7)" fg:x="431" fg:w="1"/><text x="58.7303%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="58.4803%" y="277" width="0.1357%" height="15" fill="rgb(226,216,39)" fg:x="431" fg:w="1"/><text x="58.7303%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="58.4803%" y="261" width="0.1357%" height="15" fill="rgb(243,47,51)" fg:x="431" fg:w="1"/><text x="58.7303%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="58.4803%" y="245" width="0.1357%" height="15" fill="rgb(241,183,40)" fg:x="431" fg:w="1"/><text x="58.7303%" y="255.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="58.4803%" y="229" width="0.1357%" height="15" fill="rgb(231,217,32)" fg:x="431" fg:w="1"/><text x="58.7303%" y="239.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="58.4803%" y="213" width="0.1357%" height="15" fill="rgb(229,61,38)" fg:x="431" fg:w="1"/><text x="58.7303%" y="223.50"></text></g><g><title>num_complex::Complex&lt;T&gt;::norm (3 samples, 0.41%)</title><rect x="58.8874%" y="277" width="0.4071%" height="15" fill="rgb(225,210,5)" fg:x="434" fg:w="3"/><text x="59.1374%" y="287.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::hypot (3 samples, 0.41%)</title><rect x="58.8874%" y="261" width="0.4071%" height="15" fill="rgb(231,79,45)" fg:x="434" fg:w="3"/><text x="59.1374%" y="271.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::hypot (3 samples, 0.41%)</title><rect x="58.8874%" y="245" width="0.4071%" height="15" fill="rgb(224,100,7)" fg:x="434" fg:w="3"/><text x="59.1374%" y="255.50"></text></g><g><title>hypot (3 samples, 0.41%)</title><rect x="58.8874%" y="229" width="0.4071%" height="15" fill="rgb(241,198,18)" fg:x="434" fg:w="3"/><text x="59.1374%" y="239.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (46 samples, 6.24%)</title><rect x="53.3243%" y="485" width="6.2415%" height="15" fill="rgb(252,97,53)" fg:x="393" fg:w="46"/><text x="53.5743%" y="495.50">&lt;futures..</text></g><g><title>async_executor::Executor::run::_{{closure}}::_{{closure}} (46 samples, 6.24%)</title><rect x="53.3243%" y="469" width="6.2415%" height="15" fill="rgb(220,88,7)" fg:x="393" fg:w="46"/><text x="53.5743%" y="479.50">async_ex..</text></g><g><title>async_task::runnable::Runnable&lt;M&gt;::run (26 samples, 3.53%)</title><rect x="56.0380%" y="453" width="3.5278%" height="15" fill="rgb(213,176,14)" fg:x="413" fg:w="26"/><text x="56.2880%" y="463.50">asy..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S,M&gt;::run (26 samples, 3.53%)</title><rect x="56.0380%" y="437" width="3.5278%" height="15" fill="rgb(246,73,7)" fg:x="413" fg:w="26"/><text x="56.2880%" y="447.50">asy..</text></g><g><title>std::panic::catch_unwind (25 samples, 3.39%)</title><rect x="56.1737%" y="421" width="3.3921%" height="15" fill="rgb(245,64,36)" fg:x="414" fg:w="25"/><text x="56.4237%" y="431.50">std..</text></g><g><title>std::panicking::try (25 samples, 3.39%)</title><rect x="56.1737%" y="405" width="3.3921%" height="15" fill="rgb(245,80,10)" fg:x="414" fg:w="25"/><text x="56.4237%" y="415.50">std..</text></g><g><title>std::panicking::try::do_call (25 samples, 3.39%)</title><rect x="56.1737%" y="389" width="3.3921%" height="15" fill="rgb(232,107,50)" fg:x="414" fg:w="25"/><text x="56.4237%" y="399.50">std..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (25 samples, 3.39%)</title><rect x="56.1737%" y="373" width="3.3921%" height="15" fill="rgb(253,3,0)" fg:x="414" fg:w="25"/><text x="56.4237%" y="383.50">&lt;co..</text></g><g><title>core::ops::function::FnOnce::call_once (25 samples, 3.39%)</title><rect x="56.1737%" y="357" width="3.3921%" height="15" fill="rgb(212,99,53)" fg:x="414" fg:w="25"/><text x="56.4237%" y="367.50">cor..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S,M&gt;::run::_{{closure}} (25 samples, 3.39%)</title><rect x="56.1737%" y="341" width="3.3921%" height="15" fill="rgb(249,111,54)" fg:x="414" fg:w="25"/><text x="56.4237%" y="351.50">asy..</text></g><g><title>async_executor::Executor::spawn_inner::_{{closure}} (25 samples, 3.39%)</title><rect x="56.1737%" y="325" width="3.3921%" height="15" fill="rgb(249,55,30)" fg:x="414" fg:w="25"/><text x="56.4237%" y="335.50">asy..</text></g><g><title>julia::generate_image_buffer::_{{closure}} (7 samples, 0.95%)</title><rect x="58.6160%" y="309" width="0.9498%" height="15" fill="rgb(237,47,42)" fg:x="432" fg:w="7"/><text x="58.8660%" y="319.50"></text></g><g><title>julia::color_generator::_{{closure}} (7 samples, 0.95%)</title><rect x="58.6160%" y="293" width="0.9498%" height="15" fill="rgb(211,20,18)" fg:x="432" fg:w="7"/><text x="58.8660%" y="303.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::powf (2 samples, 0.27%)</title><rect x="59.2944%" y="277" width="0.2714%" height="15" fill="rgb(231,203,46)" fg:x="437" fg:w="2"/><text x="59.5444%" y="287.50"></text></g><g><title>pow (2 samples, 0.27%)</title><rect x="59.2944%" y="261" width="0.2714%" height="15" fill="rgb(237,142,3)" fg:x="437" fg:w="2"/><text x="59.5444%" y="271.50"></text></g><g><title>[libm.so.6] (2 samples, 0.27%)</title><rect x="59.2944%" y="245" width="0.2714%" height="15" fill="rgb(241,107,1)" fg:x="437" fg:w="2"/><text x="59.5444%" y="255.50"></text></g><g><title>async_executor::Runner::new (1 samples, 0.14%)</title><rect x="59.5658%" y="485" width="0.1357%" height="15" fill="rgb(229,83,13)" fg:x="439" fg:w="1"/><text x="59.8158%" y="495.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::bounded (1 samples, 0.14%)</title><rect x="59.5658%" y="469" width="0.1357%" height="15" fill="rgb(241,91,40)" fg:x="439" fg:w="1"/><text x="59.8158%" y="479.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::new (1 samples, 0.14%)</title><rect x="59.5658%" y="453" width="0.1357%" height="15" fill="rgb(225,3,45)" fg:x="439" fg:w="1"/><text x="59.8158%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.14%)</title><rect x="59.5658%" y="437" width="0.1357%" height="15" fill="rgb(244,223,14)" fg:x="439" fg:w="1"/><text x="59.8158%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.14%)</title><rect x="59.5658%" y="421" width="0.1357%" height="15" fill="rgb(224,124,37)" fg:x="439" fg:w="1"/><text x="59.8158%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.14%)</title><rect x="59.5658%" y="405" width="0.1357%" height="15" fill="rgb(251,171,30)" fg:x="439" fg:w="1"/><text x="59.8158%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (1 samples, 0.14%)</title><rect x="59.5658%" y="389" width="0.1357%" height="15" fill="rgb(236,46,54)" fg:x="439" fg:w="1"/><text x="59.8158%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.14%)</title><rect x="59.5658%" y="373" width="0.1357%" height="15" fill="rgb(245,213,5)" fg:x="439" fg:w="1"/><text x="59.8158%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.14%)</title><rect x="59.5658%" y="357" width="0.1357%" height="15" fill="rgb(230,144,27)" fg:x="439" fg:w="1"/><text x="59.8158%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.14%)</title><rect x="59.5658%" y="341" width="0.1357%" height="15" fill="rgb(220,86,6)" fg:x="439" fg:w="1"/><text x="59.8158%" y="351.50"></text></g><g><title>core::ptr::read_volatile (1 samples, 0.14%)</title><rect x="59.5658%" y="325" width="0.1357%" height="15" fill="rgb(240,20,13)" fg:x="439" fg:w="1"/><text x="59.8158%" y="335.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or (1 samples, 0.14%)</title><rect x="59.7015%" y="341" width="0.1357%" height="15" fill="rgb(217,89,34)" fg:x="440" fg:w="1"/><text x="59.9515%" y="351.50"></text></g><g><title>async_io::driver::block_on (52 samples, 7.06%)</title><rect x="52.9172%" y="565" width="7.0556%" height="15" fill="rgb(229,13,5)" fg:x="390" fg:w="52"/><text x="53.1672%" y="575.50">async_io:..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (52 samples, 7.06%)</title><rect x="52.9172%" y="549" width="7.0556%" height="15" fill="rgb(244,67,35)" fg:x="390" fg:w="52"/><text x="53.1672%" y="559.50">std::thre..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (52 samples, 7.06%)</title><rect x="52.9172%" y="533" width="7.0556%" height="15" fill="rgb(221,40,2)" fg:x="390" fg:w="52"/><text x="53.1672%" y="543.50">std::thre..</text></g><g><title>async_io::driver::block_on::_{{closure}} (49 samples, 6.65%)</title><rect x="53.3243%" y="517" width="6.6486%" height="15" fill="rgb(237,157,21)" fg:x="393" fg:w="49"/><text x="53.5743%" y="527.50">async_io:..</text></g><g><title>async_executor::Executor::run::_{{closure}} (49 samples, 6.65%)</title><rect x="53.3243%" y="501" width="6.6486%" height="15" fill="rgb(222,94,11)" fg:x="393" fg:w="49"/><text x="53.5743%" y="511.50">async_exe..</text></g><g><title>fastrand::global_rng::&lt;impl fastrand::Rng&gt;::new (2 samples, 0.27%)</title><rect x="59.7015%" y="485" width="0.2714%" height="15" fill="rgb(249,113,6)" fg:x="440" fg:w="2"/><text x="59.9515%" y="495.50"></text></g><g><title>fastrand::global_rng::try_with_rng (2 samples, 0.27%)</title><rect x="59.7015%" y="469" width="0.2714%" height="15" fill="rgb(238,137,36)" fg:x="440" fg:w="2"/><text x="59.9515%" y="479.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2 samples, 0.27%)</title><rect x="59.7015%" y="453" width="0.2714%" height="15" fill="rgb(210,102,26)" fg:x="440" fg:w="2"/><text x="59.9515%" y="463.50"></text></g><g><title>fastrand::global_rng::RNG::__getit (2 samples, 0.27%)</title><rect x="59.7015%" y="437" width="0.2714%" height="15" fill="rgb(218,30,30)" fg:x="440" fg:w="2"/><text x="59.9515%" y="447.50"></text></g><g><title>std::sys::thread_local::fast_local::Key&lt;T&gt;::get (2 samples, 0.27%)</title><rect x="59.7015%" y="421" width="0.2714%" height="15" fill="rgb(214,67,26)" fg:x="440" fg:w="2"/><text x="59.9515%" y="431.50"></text></g><g><title>std::sys::thread_local::fast_local::Key&lt;T&gt;::try_initialize (2 samples, 0.27%)</title><rect x="59.7015%" y="405" width="0.2714%" height="15" fill="rgb(251,9,53)" fg:x="440" fg:w="2"/><text x="59.9515%" y="415.50"></text></g><g><title>std::sys::thread_local::lazy::LazyKeyInner&lt;T&gt;::initialize (2 samples, 0.27%)</title><rect x="59.7015%" y="389" width="0.2714%" height="15" fill="rgb(228,204,25)" fg:x="440" fg:w="2"/><text x="59.9515%" y="399.50"></text></g><g><title>fastrand::global_rng::RNG::__getit::_{{closure}} (2 samples, 0.27%)</title><rect x="59.7015%" y="373" width="0.2714%" height="15" fill="rgb(207,153,8)" fg:x="440" fg:w="2"/><text x="59.9515%" y="383.50"></text></g><g><title>fastrand::global_rng::RNG::__init (2 samples, 0.27%)</title><rect x="59.7015%" y="357" width="0.2714%" height="15" fill="rgb(242,9,16)" fg:x="440" fg:w="2"/><text x="59.9515%" y="367.50"></text></g><g><title>fastrand::global_rng::random_seed (1 samples, 0.14%)</title><rect x="59.8372%" y="341" width="0.1357%" height="15" fill="rgb(217,211,10)" fg:x="441" fg:w="1"/><text x="60.0872%" y="351.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (1 samples, 0.14%)</title><rect x="59.8372%" y="325" width="0.1357%" height="15" fill="rgb(219,228,52)" fg:x="441" fg:w="1"/><text x="60.0872%" y="335.50"></text></g><g><title>std::sys::pal::unix::cvt (1 samples, 0.14%)</title><rect x="59.8372%" y="309" width="0.1357%" height="15" fill="rgb(231,92,29)" fg:x="441" fg:w="1"/><text x="60.0872%" y="319.50"></text></g><g><title>smol-3 (54 samples, 7.33%)</title><rect x="52.9172%" y="869" width="7.3270%" height="15" fill="rgb(232,8,23)" fg:x="390" fg:w="54"/><text x="53.1672%" y="879.50">smol-3</text></g><g><title>clone3 (54 samples, 7.33%)</title><rect x="52.9172%" y="853" width="7.3270%" height="15" fill="rgb(216,211,34)" fg:x="390" fg:w="54"/><text x="53.1672%" y="863.50">clone3</text></g><g><title>start_thread (54 samples, 7.33%)</title><rect x="52.9172%" y="837" width="7.3270%" height="15" fill="rgb(236,151,0)" fg:x="390" fg:w="54"/><text x="53.1672%" y="847.50">start_thre..</text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (54 samples, 7.33%)</title><rect x="52.9172%" y="821" width="7.3270%" height="15" fill="rgb(209,168,3)" fg:x="390" fg:w="54"/><text x="53.1672%" y="831.50">std::sys::..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (54 samples, 7.33%)</title><rect x="52.9172%" y="805" width="7.3270%" height="15" fill="rgb(208,129,28)" fg:x="390" fg:w="54"/><text x="53.1672%" y="815.50">&lt;alloc::bo..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (54 samples, 7.33%)</title><rect x="52.9172%" y="789" width="7.3270%" height="15" fill="rgb(229,78,22)" fg:x="390" fg:w="54"/><text x="53.1672%" y="799.50">&lt;alloc::bo..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (54 samples, 7.33%)</title><rect x="52.9172%" y="773" width="7.3270%" height="15" fill="rgb(228,187,13)" fg:x="390" fg:w="54"/><text x="53.1672%" y="783.50">core::ops:..</text></g><g><title>std::thread::Builder::spawn_unchecked_::_{{closure}} (54 samples, 7.33%)</title><rect x="52.9172%" y="757" width="7.3270%" height="15" fill="rgb(240,119,24)" fg:x="390" fg:w="54"/><text x="53.1672%" y="767.50">std::threa..</text></g><g><title>std::panic::catch_unwind (54 samples, 7.33%)</title><rect x="52.9172%" y="741" width="7.3270%" height="15" fill="rgb(209,194,42)" fg:x="390" fg:w="54"/><text x="53.1672%" y="751.50">std::panic..</text></g><g><title>std::panicking::try (54 samples, 7.33%)</title><rect x="52.9172%" y="725" width="7.3270%" height="15" fill="rgb(247,200,46)" fg:x="390" fg:w="54"/><text x="53.1672%" y="735.50">std::panic..</text></g><g><title>std::panicking::try::do_call (54 samples, 7.33%)</title><rect x="52.9172%" y="709" width="7.3270%" height="15" fill="rgb(218,76,16)" fg:x="390" fg:w="54"/><text x="53.1672%" y="719.50">std::panic..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (54 samples, 7.33%)</title><rect x="52.9172%" y="693" width="7.3270%" height="15" fill="rgb(225,21,48)" fg:x="390" fg:w="54"/><text x="53.1672%" y="703.50">&lt;core::pan..</text></g><g><title>std::thread::Builder::spawn_unchecked_::_{{closure}}::_{{closure}} (54 samples, 7.33%)</title><rect x="52.9172%" y="677" width="7.3270%" height="15" fill="rgb(239,223,50)" fg:x="390" fg:w="54"/><text x="53.1672%" y="687.50">std::threa..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (54 samples, 7.33%)</title><rect x="52.9172%" y="661" width="7.3270%" height="15" fill="rgb(244,45,21)" fg:x="390" fg:w="54"/><text x="53.1672%" y="671.50">std::sys_c..</text></g><g><title>smol::spawn::spawn::global::_{{closure}}::_{{closure}} (54 samples, 7.33%)</title><rect x="52.9172%" y="645" width="7.3270%" height="15" fill="rgb(232,33,43)" fg:x="390" fg:w="54"/><text x="53.1672%" y="655.50">smol::spaw..</text></g><g><title>std::panic::catch_unwind (54 samples, 7.33%)</title><rect x="52.9172%" y="629" width="7.3270%" height="15" fill="rgb(209,8,3)" fg:x="390" fg:w="54"/><text x="53.1672%" y="639.50">std::panic..</text></g><g><title>std::panicking::try (54 samples, 7.33%)</title><rect x="52.9172%" y="613" width="7.3270%" height="15" fill="rgb(214,25,53)" fg:x="390" fg:w="54"/><text x="53.1672%" y="623.50">std::panic..</text></g><g><title>std::panicking::try::do_call (54 samples, 7.33%)</title><rect x="52.9172%" y="597" width="7.3270%" height="15" fill="rgb(254,186,54)" fg:x="390" fg:w="54"/><text x="53.1672%" y="607.50">std::panic..</text></g><g><title>smol::spawn::spawn::global::_{{closure}}::_{{closure}}::_{{closure}} (54 samples, 7.33%)</title><rect x="52.9172%" y="581" width="7.3270%" height="15" fill="rgb(208,174,49)" fg:x="390" fg:w="54"/><text x="53.1672%" y="591.50">smol::spaw..</text></g><g><title>smol::spawn::spawn::global (2 samples, 0.27%)</title><rect x="59.9729%" y="565" width="0.2714%" height="15" fill="rgb(233,191,51)" fg:x="442" fg:w="2"/><text x="60.2229%" y="575.50"></text></g><g><title>async_lock::once_cell::OnceCell&lt;T&gt;::get_or_init_blocking (2 samples, 0.27%)</title><rect x="59.9729%" y="549" width="0.2714%" height="15" fill="rgb(222,134,10)" fg:x="442" fg:w="2"/><text x="60.2229%" y="559.50"></text></g><g><title>async_lock::once_cell::OnceCell&lt;T&gt;::get_or_try_init_blocking (2 samples, 0.27%)</title><rect x="59.9729%" y="533" width="0.2714%" height="15" fill="rgb(230,226,20)" fg:x="442" fg:w="2"/><text x="60.2229%" y="543.50"></text></g><g><title>async_lock::once_cell::now_or_never (2 samples, 0.27%)</title><rect x="59.9729%" y="517" width="0.2714%" height="15" fill="rgb(251,111,25)" fg:x="442" fg:w="2"/><text x="60.2229%" y="527.50"></text></g><g><title>async_lock::once_cell::OnceCell&lt;T&gt;::initialize_or_wait::_{{closure}} (2 samples, 0.27%)</title><rect x="59.9729%" y="501" width="0.2714%" height="15" fill="rgb(224,40,46)" fg:x="442" fg:w="2"/><text x="60.2229%" y="511.50"></text></g><g><title>&lt;event_listener_strategy::Blocking as event_listener_strategy::Strategy&gt;::wait (1 samples, 0.14%)</title><rect x="60.1085%" y="485" width="0.1357%" height="15" fill="rgb(236,108,47)" fg:x="443" fg:w="1"/><text x="60.3585%" y="495.50"></text></g><g><title>event_listener::EventListener&lt;T&gt;::wait (1 samples, 0.14%)</title><rect x="60.1085%" y="469" width="0.1357%" height="15" fill="rgb(234,93,0)" fg:x="443" fg:w="1"/><text x="60.3585%" y="479.50"></text></g><g><title>event_listener::Listener&lt;T,B&gt;::wait_internal (1 samples, 0.14%)</title><rect x="60.1085%" y="453" width="0.1357%" height="15" fill="rgb(224,213,32)" fg:x="443" fg:w="1"/><text x="60.3585%" y="463.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.14%)</title><rect x="60.1085%" y="437" width="0.1357%" height="15" fill="rgb(251,11,48)" fg:x="443" fg:w="1"/><text x="60.3585%" y="447.50"></text></g><g><title>event_listener::Listener&lt;T,B&gt;::wait_internal::_{{closure}} (1 samples, 0.14%)</title><rect x="60.1085%" y="421" width="0.1357%" height="15" fill="rgb(236,173,5)" fg:x="443" fg:w="1"/><text x="60.3585%" y="431.50"></text></g><g><title>event_listener::Listener&lt;T,B&gt;::wait_with_parker (1 samples, 0.14%)</title><rect x="60.1085%" y="405" width="0.1357%" height="15" fill="rgb(230,95,12)" fg:x="443" fg:w="1"/><text x="60.3585%" y="415.50"></text></g><g><title>event_listener::sys::&lt;impl event_listener::Inner&lt;T&gt;&gt;::register (1 samples, 0.14%)</title><rect x="60.1085%" y="389" width="0.1357%" height="15" fill="rgb(232,209,1)" fg:x="443" fg:w="1"/><text x="60.3585%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::sys::ListLock&lt;()&gt;&gt; (1 samples, 0.14%)</title><rect x="60.1085%" y="373" width="0.1357%" height="15" fill="rgb(232,6,1)" fg:x="443" fg:w="1"/><text x="60.3585%" y="383.50"></text></g><g><title>&lt;event_listener::sys::ListLock&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.14%)</title><rect x="60.1085%" y="357" width="0.1357%" height="15" fill="rgb(210,224,50)" fg:x="443" fg:w="1"/><text x="60.3585%" y="367.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.14%)</title><rect x="60.2442%" y="549" width="0.1357%" height="15" fill="rgb(228,127,35)" fg:x="444" fg:w="1"/><text x="60.4942%" y="559.50"></text></g><g><title>std::sys::thread_local::fast_local::Key&lt;T&gt;::try_register_dtor (1 samples, 0.14%)</title><rect x="60.3799%" y="469" width="0.1357%" height="15" fill="rgb(245,102,45)" fg:x="445" fg:w="1"/><text x="60.6299%" y="479.50"></text></g><g><title>__cxa_thread_atexit_impl (1 samples, 0.14%)</title><rect x="60.3799%" y="453" width="0.1357%" height="15" fill="rgb(214,1,49)" fg:x="445" fg:w="1"/><text x="60.6299%" y="463.50"></text></g><g><title>__libc_calloc (1 samples, 0.14%)</title><rect x="60.3799%" y="437" width="0.1357%" height="15" fill="rgb(226,163,40)" fg:x="445" fg:w="1"/><text x="60.6299%" y="447.50"></text></g><g><title>async_io::driver::block_on::CACHE::__getit (2 samples, 0.27%)</title><rect x="60.3799%" y="517" width="0.2714%" height="15" fill="rgb(239,212,28)" fg:x="445" fg:w="2"/><text x="60.6299%" y="527.50"></text></g><g><title>std::sys::thread_local::fast_local::Key&lt;T&gt;::get (2 samples, 0.27%)</title><rect x="60.3799%" y="501" width="0.2714%" height="15" fill="rgb(220,20,13)" fg:x="445" fg:w="2"/><text x="60.6299%" y="511.50"></text></g><g><title>std::sys::thread_local::fast_local::Key&lt;T&gt;::try_initialize (2 samples, 0.27%)</title><rect x="60.3799%" y="485" width="0.2714%" height="15" fill="rgb(210,164,35)" fg:x="445" fg:w="2"/><text x="60.6299%" y="495.50"></text></g><g><title>std::sys::thread_local::lazy::LazyKeyInner&lt;T&gt;::initialize (1 samples, 0.14%)</title><rect x="60.5156%" y="469" width="0.1357%" height="15" fill="rgb(248,109,41)" fg:x="446" fg:w="1"/><text x="60.7656%" y="479.50"></text></g><g><title>async_io::driver::block_on::CACHE::__getit::_{{closure}} (1 samples, 0.14%)</title><rect x="60.5156%" y="453" width="0.1357%" height="15" fill="rgb(238,23,50)" fg:x="446" fg:w="1"/><text x="60.7656%" y="463.50"></text></g><g><title>async_io::driver::block_on::CACHE::__init (1 samples, 0.14%)</title><rect x="60.5156%" y="437" width="0.1357%" height="15" fill="rgb(211,48,49)" fg:x="446" fg:w="1"/><text x="60.7656%" y="447.50"></text></g><g><title>async_io::driver::block_on::parker_and_waker (1 samples, 0.14%)</title><rect x="60.5156%" y="421" width="0.1357%" height="15" fill="rgb(223,36,21)" fg:x="446" fg:w="1"/><text x="60.7656%" y="431.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (1 samples, 0.14%)</title><rect x="60.6513%" y="501" width="0.1357%" height="15" fill="rgb(207,123,46)" fg:x="447" fg:w="1"/><text x="60.9013%" y="511.50"></text></g><g><title>async_executor::Executor::run::_{{closure}}::_{{closure}} (1 samples, 0.14%)</title><rect x="60.6513%" y="485" width="0.1357%" height="15" fill="rgb(240,218,32)" fg:x="447" fg:w="1"/><text x="60.9013%" y="495.50"></text></g><g><title>async_executor::Runner::runnable::_{{closure}} (1 samples, 0.14%)</title><rect x="60.6513%" y="469" width="0.1357%" height="15" fill="rgb(252,5,43)" fg:x="447" fg:w="1"/><text x="60.9013%" y="479.50"></text></g><g><title>async_executor::Ticker::runnable_with::_{{closure}} (1 samples, 0.14%)</title><rect x="60.6513%" y="453" width="0.1357%" height="15" fill="rgb(252,84,19)" fg:x="447" fg:w="1"/><text x="60.9013%" y="463.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (1 samples, 0.14%)</title><rect x="60.6513%" y="437" width="0.1357%" height="15" fill="rgb(243,152,39)" fg:x="447" fg:w="1"/><text x="60.9013%" y="447.50"></text></g><g><title>async_executor::Ticker::runnable_with::_{{closure}}::_{{closure}} (1 samples, 0.14%)</title><rect x="60.6513%" y="421" width="0.1357%" height="15" fill="rgb(234,160,15)" fg:x="447" fg:w="1"/><text x="60.9013%" y="431.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S,M&gt;::run (1 samples, 0.14%)</title><rect x="60.6513%" y="405" width="0.1357%" height="15" fill="rgb(237,34,20)" fg:x="447" fg:w="1"/><text x="60.9013%" y="415.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S,M&gt;::drop_future (1 samples, 0.14%)</title><rect x="60.6513%" y="389" width="0.1357%" height="15" fill="rgb(229,97,13)" fg:x="447" fg:w="1"/><text x="60.9013%" y="399.50"></text></g><g><title>async_task::utils::abort_on_panic (1 samples, 0.14%)</title><rect x="60.6513%" y="373" width="0.1357%" height="15" fill="rgb(234,71,50)" fg:x="447" fg:w="1"/><text x="60.9013%" y="383.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S,M&gt;::drop_future::_{{closure}} (1 samples, 0.14%)</title><rect x="60.6513%" y="357" width="0.1357%" height="15" fill="rgb(253,155,4)" fg:x="447" fg:w="1"/><text x="60.9013%" y="367.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (1 samples, 0.14%)</title><rect x="60.6513%" y="341" width="0.1357%" height="15" fill="rgb(222,185,37)" fg:x="447" fg:w="1"/><text x="60.9013%" y="351.50"></text></g><g><title>std::panicking::try (1 samples, 0.14%)</title><rect x="60.6513%" y="325" width="0.1357%" height="15" fill="rgb(251,177,13)" fg:x="447" fg:w="1"/><text x="60.9013%" y="335.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.14%)</title><rect x="60.6513%" y="309" width="0.1357%" height="15" fill="rgb(250,179,40)" fg:x="447" fg:w="1"/><text x="60.9013%" y="319.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.14%)</title><rect x="60.6513%" y="293" width="0.1357%" height="15" fill="rgb(242,44,2)" fg:x="447" fg:w="1"/><text x="60.9013%" y="303.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.14%)</title><rect x="60.6513%" y="277" width="0.1357%" height="15" fill="rgb(216,177,13)" fg:x="447" fg:w="1"/><text x="60.9013%" y="287.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S,M&gt;::run::_{{closure}} (1 samples, 0.14%)</title><rect x="60.6513%" y="261" width="0.1357%" height="15" fill="rgb(216,106,43)" fg:x="447" fg:w="1"/><text x="60.9013%" y="271.50"></text></g><g><title>async_executor::Executor::spawn_inner::_{{closure}} (1 samples, 0.14%)</title><rect x="60.6513%" y="245" width="0.1357%" height="15" fill="rgb(216,183,2)" fg:x="447" fg:w="1"/><text x="60.9013%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_executor::CallOnDrop&lt;async_executor::Executor::spawn_inner&lt;(),julia::generate_image_buffer::{{closure}}&gt;::{{closure}}::{{closure}}&gt;&gt; (1 samples, 0.14%)</title><rect x="60.6513%" y="229" width="0.1357%" height="15" fill="rgb(249,75,3)" fg:x="447" fg:w="1"/><text x="60.9013%" y="239.50"></text></g><g><title>syscall (1 samples, 0.14%)</title><rect x="60.6513%" y="213" width="0.1357%" height="15" fill="rgb(219,67,39)" fg:x="447" fg:w="1"/><text x="60.9013%" y="223.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="60.6513%" y="197" width="0.1357%" height="15" fill="rgb(253,228,2)" fg:x="447" fg:w="1"/><text x="60.9013%" y="207.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::len (2 samples, 0.27%)</title><rect x="60.7870%" y="357" width="0.2714%" height="15" fill="rgb(235,138,27)" fg:x="448" fg:w="2"/><text x="61.0370%" y="367.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::len (2 samples, 0.27%)</title><rect x="60.7870%" y="341" width="0.2714%" height="15" fill="rgb(236,97,51)" fg:x="448" fg:w="2"/><text x="61.0370%" y="351.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (2 samples, 0.27%)</title><rect x="60.7870%" y="325" width="0.2714%" height="15" fill="rgb(240,80,30)" fg:x="448" fg:w="2"/><text x="61.0370%" y="335.50"></text></g><g><title>core::sync::atomic::atomic_load (2 samples, 0.27%)</title><rect x="60.7870%" y="309" width="0.2714%" height="15" fill="rgb(230,178,19)" fg:x="448" fg:w="2"/><text x="61.0370%" y="319.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (3 samples, 0.41%)</title><rect x="61.0583%" y="357" width="0.4071%" height="15" fill="rgb(210,190,27)" fg:x="450" fg:w="3"/><text x="61.3083%" y="367.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (3 samples, 0.41%)</title><rect x="61.0583%" y="341" width="0.4071%" height="15" fill="rgb(222,107,31)" fg:x="450" fg:w="3"/><text x="61.3083%" y="351.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (2 samples, 0.27%)</title><rect x="61.1940%" y="325" width="0.2714%" height="15" fill="rgb(216,127,34)" fg:x="451" fg:w="2"/><text x="61.4440%" y="335.50"></text></g><g><title>core::sync::atomic::atomic_load (2 samples, 0.27%)</title><rect x="61.1940%" y="309" width="0.2714%" height="15" fill="rgb(234,116,52)" fg:x="451" fg:w="2"/><text x="61.4440%" y="319.50"></text></g><g><title>async_executor::steal (6 samples, 0.81%)</title><rect x="60.7870%" y="373" width="0.8141%" height="15" fill="rgb(222,124,15)" fg:x="448" fg:w="6"/><text x="61.0370%" y="383.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (1 samples, 0.14%)</title><rect x="61.4654%" y="357" width="0.1357%" height="15" fill="rgb(231,179,28)" fg:x="453" fg:w="1"/><text x="61.7154%" y="367.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::push (1 samples, 0.14%)</title><rect x="61.4654%" y="341" width="0.1357%" height="15" fill="rgb(226,93,45)" fg:x="453" fg:w="1"/><text x="61.7154%" y="351.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (3 samples, 0.41%)</title><rect x="61.6011%" y="373" width="0.4071%" height="15" fill="rgb(215,8,51)" fg:x="454" fg:w="3"/><text x="61.8511%" y="383.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (3 samples, 0.41%)</title><rect x="61.6011%" y="357" width="0.4071%" height="15" fill="rgb(223,106,5)" fg:x="454" fg:w="3"/><text x="61.8511%" y="367.50"></text></g><g><title>async_executor::Runner::runnable::_{{closure}}::_{{closure}} (10 samples, 1.36%)</title><rect x="60.7870%" y="389" width="1.3569%" height="15" fill="rgb(250,191,5)" fg:x="448" fg:w="10"/><text x="61.0370%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;concurrent_queue::ConcurrentQueue&lt;async_task::runnable::Runnable&gt;&gt;&gt;&gt;&gt; (1 samples, 0.14%)</title><rect x="62.0081%" y="373" width="0.1357%" height="15" fill="rgb(242,132,44)" fg:x="457" fg:w="1"/><text x="62.2581%" y="383.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.14%)</title><rect x="62.0081%" y="357" width="0.1357%" height="15" fill="rgb(251,152,29)" fg:x="457" fg:w="1"/><text x="62.2581%" y="367.50"></text></g><g><title>std::sys::sync::rwlock::futex::RwLock::read_unlock (1 samples, 0.14%)</title><rect x="62.0081%" y="341" width="0.1357%" height="15" fill="rgb(218,179,5)" fg:x="457" fg:w="1"/><text x="62.2581%" y="351.50"></text></g><g><title>async_executor::State::notify (1 samples, 0.14%)</title><rect x="62.1438%" y="389" width="0.1357%" height="15" fill="rgb(227,67,19)" fg:x="458" fg:w="1"/><text x="62.3938%" y="399.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_ok (1 samples, 0.14%)</title><rect x="62.1438%" y="373" width="0.1357%" height="15" fill="rgb(233,119,31)" fg:x="458" fg:w="1"/><text x="62.3938%" y="383.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_err (1 samples, 0.14%)</title><rect x="62.2795%" y="341" width="0.1357%" height="15" fill="rgb(241,120,22)" fg:x="459" fg:w="1"/><text x="62.5295%" y="351.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_ok (1 samples, 0.14%)</title><rect x="62.2795%" y="325" width="0.1357%" height="15" fill="rgb(224,102,30)" fg:x="459" fg:w="1"/><text x="62.5295%" y="335.50"></text></g><g><title>async_executor::Runner::runnable::_{{closure}} (13 samples, 1.76%)</title><rect x="60.7870%" y="453" width="1.7639%" height="15" fill="rgb(210,164,37)" fg:x="448" fg:w="13"/><text x="61.0370%" y="463.50"></text></g><g><title>async_executor::Ticker::runnable_with::_{{closure}} (13 samples, 1.76%)</title><rect x="60.7870%" y="437" width="1.7639%" height="15" fill="rgb(226,191,16)" fg:x="448" fg:w="13"/><text x="61.0370%" y="447.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (13 samples, 1.76%)</title><rect x="60.7870%" y="421" width="1.7639%" height="15" fill="rgb(214,40,45)" fg:x="448" fg:w="13"/><text x="61.0370%" y="431.50"></text></g><g><title>async_executor::Ticker::runnable_with::_{{closure}}::_{{closure}} (13 samples, 1.76%)</title><rect x="60.7870%" y="405" width="1.7639%" height="15" fill="rgb(244,29,26)" fg:x="448" fg:w="13"/><text x="61.0370%" y="415.50"></text></g><g><title>async_executor::Ticker::sleep (2 samples, 0.27%)</title><rect x="62.2795%" y="389" width="0.2714%" height="15" fill="rgb(216,16,5)" fg:x="459" fg:w="2"/><text x="62.5295%" y="399.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (2 samples, 0.27%)</title><rect x="62.2795%" y="373" width="0.2714%" height="15" fill="rgb(249,76,35)" fg:x="459" fg:w="2"/><text x="62.5295%" y="383.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (2 samples, 0.27%)</title><rect x="62.2795%" y="357" width="0.2714%" height="15" fill="rgb(207,11,44)" fg:x="459" fg:w="2"/><text x="62.5295%" y="367.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock_contended (1 samples, 0.14%)</title><rect x="62.4152%" y="341" width="0.1357%" height="15" fill="rgb(228,190,49)" fg:x="460" fg:w="1"/><text x="62.6652%" y="351.50"></text></g><g><title>std::sys::pal::unix::futex::futex_wait (1 samples, 0.14%)</title><rect x="62.4152%" y="325" width="0.1357%" height="15" fill="rgb(214,173,12)" fg:x="460" fg:w="1"/><text x="62.6652%" y="335.50"></text></g><g><title>syscall (1 samples, 0.14%)</title><rect x="62.4152%" y="309" width="0.1357%" height="15" fill="rgb(218,26,35)" fg:x="460" fg:w="1"/><text x="62.6652%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="62.4152%" y="293" width="0.1357%" height="15" fill="rgb(220,200,19)" fg:x="460" fg:w="1"/><text x="62.6652%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="62.4152%" y="277" width="0.1357%" height="15" fill="rgb(239,95,49)" fg:x="460" fg:w="1"/><text x="62.6652%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="62.4152%" y="261" width="0.1357%" height="15" fill="rgb(235,85,53)" fg:x="460" fg:w="1"/><text x="62.6652%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="62.4152%" y="245" width="0.1357%" height="15" fill="rgb(233,133,31)" fg:x="460" fg:w="1"/><text x="62.6652%" y="255.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="62.4152%" y="229" width="0.1357%" height="15" fill="rgb(218,25,20)" fg:x="460" fg:w="1"/><text x="62.6652%" y="239.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="62.4152%" y="213" width="0.1357%" height="15" fill="rgb(252,210,38)" fg:x="460" fg:w="1"/><text x="62.6652%" y="223.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="62.4152%" y="197" width="0.1357%" height="15" fill="rgb(242,134,21)" fg:x="460" fg:w="1"/><text x="62.6652%" y="207.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="62.4152%" y="181" width="0.1357%" height="15" fill="rgb(213,28,48)" fg:x="460" fg:w="1"/><text x="62.6652%" y="191.50"></text></g><g><title>std::sys::pal::unix::futex::futex_wait (8 samples, 1.09%)</title><rect x="62.6866%" y="213" width="1.0855%" height="15" fill="rgb(250,196,2)" fg:x="462" fg:w="8"/><text x="62.9366%" y="223.50"></text></g><g><title>syscall (8 samples, 1.09%)</title><rect x="62.6866%" y="197" width="1.0855%" height="15" fill="rgb(227,5,17)" fg:x="462" fg:w="8"/><text x="62.9366%" y="207.50"></text></g><g><title>[unknown] (8 samples, 1.09%)</title><rect x="62.6866%" y="181" width="1.0855%" height="15" fill="rgb(221,226,24)" fg:x="462" fg:w="8"/><text x="62.9366%" y="191.50"></text></g><g><title>[unknown] (8 samples, 1.09%)</title><rect x="62.6866%" y="165" width="1.0855%" height="15" fill="rgb(211,5,48)" fg:x="462" fg:w="8"/><text x="62.9366%" y="175.50"></text></g><g><title>[unknown] (7 samples, 0.95%)</title><rect x="62.8223%" y="149" width="0.9498%" height="15" fill="rgb(219,150,6)" fg:x="463" fg:w="7"/><text x="63.0723%" y="159.50"></text></g><g><title>[unknown] (7 samples, 0.95%)</title><rect x="62.8223%" y="133" width="0.9498%" height="15" fill="rgb(251,46,16)" fg:x="463" fg:w="7"/><text x="63.0723%" y="143.50"></text></g><g><title>[unknown] (5 samples, 0.68%)</title><rect x="63.0936%" y="117" width="0.6784%" height="15" fill="rgb(220,204,40)" fg:x="465" fg:w="5"/><text x="63.3436%" y="127.50"></text></g><g><title>[unknown] (5 samples, 0.68%)</title><rect x="63.0936%" y="101" width="0.6784%" height="15" fill="rgb(211,85,2)" fg:x="465" fg:w="5"/><text x="63.3436%" y="111.50"></text></g><g><title>[unknown] (4 samples, 0.54%)</title><rect x="63.2293%" y="85" width="0.5427%" height="15" fill="rgb(229,17,7)" fg:x="466" fg:w="4"/><text x="63.4793%" y="95.50"></text></g><g><title>[unknown] (4 samples, 0.54%)</title><rect x="63.2293%" y="69" width="0.5427%" height="15" fill="rgb(239,72,28)" fg:x="466" fg:w="4"/><text x="63.4793%" y="79.50"></text></g><g><title>[unknown] (4 samples, 0.54%)</title><rect x="63.2293%" y="53" width="0.5427%" height="15" fill="rgb(230,47,54)" fg:x="466" fg:w="4"/><text x="63.4793%" y="63.50"></text></g><g><title>[unknown] (2 samples, 0.27%)</title><rect x="63.5007%" y="37" width="0.2714%" height="15" fill="rgb(214,50,8)" fg:x="468" fg:w="2"/><text x="63.7507%" y="47.50"></text></g><g><title>&lt;async_executor::CallOnDrop&lt;F&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 2.31%)</title><rect x="62.5509%" y="293" width="2.3066%" height="15" fill="rgb(216,198,43)" fg:x="461" fg:w="17"/><text x="62.8009%" y="303.50">&lt;..</text></g><g><title>async_executor::Executor::spawn_inner::_{{closure}}::_{{closure}} (17 samples, 2.31%)</title><rect x="62.5509%" y="277" width="2.3066%" height="15" fill="rgb(234,20,35)" fg:x="461" fg:w="17"/><text x="62.8009%" y="287.50">a..</text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (17 samples, 2.31%)</title><rect x="62.5509%" y="261" width="2.3066%" height="15" fill="rgb(254,45,19)" fg:x="461" fg:w="17"/><text x="62.8009%" y="271.50">s..</text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (17 samples, 2.31%)</title><rect x="62.5509%" y="245" width="2.3066%" height="15" fill="rgb(219,14,44)" fg:x="461" fg:w="17"/><text x="62.8009%" y="255.50">s..</text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock_contended (16 samples, 2.17%)</title><rect x="62.6866%" y="229" width="2.1710%" height="15" fill="rgb(217,220,26)" fg:x="462" fg:w="16"/><text x="62.9366%" y="239.50">s..</text></g><g><title>std::sys::sync::mutex::futex::Mutex::spin (8 samples, 1.09%)</title><rect x="63.7720%" y="213" width="1.0855%" height="15" fill="rgb(213,158,28)" fg:x="470" fg:w="8"/><text x="64.0220%" y="223.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (2 samples, 0.27%)</title><rect x="64.5862%" y="197" width="0.2714%" height="15" fill="rgb(252,51,52)" fg:x="476" fg:w="2"/><text x="64.8362%" y="207.50"></text></g><g><title>core::sync::atomic::atomic_load (2 samples, 0.27%)</title><rect x="64.5862%" y="181" width="0.2714%" height="15" fill="rgb(246,89,16)" fg:x="476" fg:w="2"/><text x="64.8362%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_executor::CallOnDrop&lt;async_executor::Executor::spawn_inner&lt;(),julia::generate_image_buffer::{{closure}}&gt;::{{closure}}::{{closure}}&gt;&gt; (21 samples, 2.85%)</title><rect x="62.5509%" y="309" width="2.8494%" height="15" fill="rgb(216,158,49)" fg:x="461" fg:w="21"/><text x="62.8009%" y="319.50">co..</text></g><g><title>syscall (4 samples, 0.54%)</title><rect x="64.8575%" y="293" width="0.5427%" height="15" fill="rgb(236,107,19)" fg:x="478" fg:w="4"/><text x="65.1075%" y="303.50"></text></g><g><title>[unknown] (4 samples, 0.54%)</title><rect x="64.8575%" y="277" width="0.5427%" height="15" fill="rgb(228,185,30)" fg:x="478" fg:w="4"/><text x="65.1075%" y="287.50"></text></g><g><title>[unknown] (4 samples, 0.54%)</title><rect x="64.8575%" y="261" width="0.5427%" height="15" fill="rgb(246,134,8)" fg:x="478" fg:w="4"/><text x="65.1075%" y="271.50"></text></g><g><title>[unknown] (4 samples, 0.54%)</title><rect x="64.8575%" y="245" width="0.5427%" height="15" fill="rgb(214,143,50)" fg:x="478" fg:w="4"/><text x="65.1075%" y="255.50"></text></g><g><title>[unknown] (4 samples, 0.54%)</title><rect x="64.8575%" y="229" width="0.5427%" height="15" fill="rgb(228,75,8)" fg:x="478" fg:w="4"/><text x="65.1075%" y="239.50"></text></g><g><title>[unknown] (4 samples, 0.54%)</title><rect x="64.8575%" y="213" width="0.5427%" height="15" fill="rgb(207,175,4)" fg:x="478" fg:w="4"/><text x="65.1075%" y="223.50"></text></g><g><title>[unknown] (2 samples, 0.27%)</title><rect x="65.1289%" y="197" width="0.2714%" height="15" fill="rgb(205,108,24)" fg:x="480" fg:w="2"/><text x="65.3789%" y="207.50"></text></g><g><title>[unknown] (2 samples, 0.27%)</title><rect x="65.1289%" y="181" width="0.2714%" height="15" fill="rgb(244,120,49)" fg:x="480" fg:w="2"/><text x="65.3789%" y="191.50"></text></g><g><title>num_complex::Complex&lt;T&gt;::norm (2 samples, 0.27%)</title><rect x="65.4003%" y="277" width="0.2714%" height="15" fill="rgb(223,47,38)" fg:x="482" fg:w="2"/><text x="65.6503%" y="287.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::hypot (2 samples, 0.27%)</title><rect x="65.4003%" y="261" width="0.2714%" height="15" fill="rgb(229,179,11)" fg:x="482" fg:w="2"/><text x="65.6503%" y="271.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::hypot (2 samples, 0.27%)</title><rect x="65.4003%" y="245" width="0.2714%" height="15" fill="rgb(231,122,1)" fg:x="482" fg:w="2"/><text x="65.6503%" y="255.50"></text></g><g><title>hypot (2 samples, 0.27%)</title><rect x="65.4003%" y="229" width="0.2714%" height="15" fill="rgb(245,119,9)" fg:x="482" fg:w="2"/><text x="65.6503%" y="239.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (41 samples, 5.56%)</title><rect x="60.7870%" y="485" width="5.5631%" height="15" fill="rgb(241,163,25)" fg:x="448" fg:w="41"/><text x="61.0370%" y="495.50">&lt;future..</text></g><g><title>async_executor::Executor::run::_{{closure}}::_{{closure}} (41 samples, 5.56%)</title><rect x="60.7870%" y="469" width="5.5631%" height="15" fill="rgb(217,214,3)" fg:x="448" fg:w="41"/><text x="61.0370%" y="479.50">async_e..</text></g><g><title>async_task::runnable::Runnable&lt;M&gt;::run (28 samples, 3.80%)</title><rect x="62.5509%" y="453" width="3.7992%" height="15" fill="rgb(240,86,28)" fg:x="461" fg:w="28"/><text x="62.8009%" y="463.50">asyn..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S,M&gt;::run (28 samples, 3.80%)</title><rect x="62.5509%" y="437" width="3.7992%" height="15" fill="rgb(215,47,9)" fg:x="461" fg:w="28"/><text x="62.8009%" y="447.50">asyn..</text></g><g><title>std::panic::catch_unwind (28 samples, 3.80%)</title><rect x="62.5509%" y="421" width="3.7992%" height="15" fill="rgb(252,25,45)" fg:x="461" fg:w="28"/><text x="62.8009%" y="431.50">std:..</text></g><g><title>std::panicking::try (28 samples, 3.80%)</title><rect x="62.5509%" y="405" width="3.7992%" height="15" fill="rgb(251,164,9)" fg:x="461" fg:w="28"/><text x="62.8009%" y="415.50">std:..</text></g><g><title>std::panicking::try::do_call (28 samples, 3.80%)</title><rect x="62.5509%" y="389" width="3.7992%" height="15" fill="rgb(233,194,0)" fg:x="461" fg:w="28"/><text x="62.8009%" y="399.50">std:..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (28 samples, 3.80%)</title><rect x="62.5509%" y="373" width="3.7992%" height="15" fill="rgb(249,111,24)" fg:x="461" fg:w="28"/><text x="62.8009%" y="383.50">&lt;cor..</text></g><g><title>core::ops::function::FnOnce::call_once (28 samples, 3.80%)</title><rect x="62.5509%" y="357" width="3.7992%" height="15" fill="rgb(250,223,3)" fg:x="461" fg:w="28"/><text x="62.8009%" y="367.50">core..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S,M&gt;::run::_{{closure}} (28 samples, 3.80%)</title><rect x="62.5509%" y="341" width="3.7992%" height="15" fill="rgb(236,178,37)" fg:x="461" fg:w="28"/><text x="62.8009%" y="351.50">asyn..</text></g><g><title>async_executor::Executor::spawn_inner::_{{closure}} (28 samples, 3.80%)</title><rect x="62.5509%" y="325" width="3.7992%" height="15" fill="rgb(241,158,50)" fg:x="461" fg:w="28"/><text x="62.8009%" y="335.50">asyn..</text></g><g><title>julia::generate_image_buffer::_{{closure}} (7 samples, 0.95%)</title><rect x="65.4003%" y="309" width="0.9498%" height="15" fill="rgb(213,121,41)" fg:x="482" fg:w="7"/><text x="65.6503%" y="319.50"></text></g><g><title>julia::color_generator::_{{closure}} (7 samples, 0.95%)</title><rect x="65.4003%" y="293" width="0.9498%" height="15" fill="rgb(240,92,3)" fg:x="482" fg:w="7"/><text x="65.6503%" y="303.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::powf (5 samples, 0.68%)</title><rect x="65.6716%" y="277" width="0.6784%" height="15" fill="rgb(205,123,3)" fg:x="484" fg:w="5"/><text x="65.9216%" y="287.50"></text></g><g><title>pow (5 samples, 0.68%)</title><rect x="65.6716%" y="261" width="0.6784%" height="15" fill="rgb(205,97,47)" fg:x="484" fg:w="5"/><text x="65.9216%" y="271.50"></text></g><g><title>[libm.so.6] (5 samples, 0.68%)</title><rect x="65.6716%" y="245" width="0.6784%" height="15" fill="rgb(247,152,14)" fg:x="484" fg:w="5"/><text x="65.9216%" y="255.50"></text></g><g><title>async_io::driver::block_on (46 samples, 6.24%)</title><rect x="60.2442%" y="565" width="6.2415%" height="15" fill="rgb(248,195,53)" fg:x="444" fg:w="46"/><text x="60.4942%" y="575.50">async_io..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (45 samples, 6.11%)</title><rect x="60.3799%" y="549" width="6.1058%" height="15" fill="rgb(226,201,16)" fg:x="445" fg:w="45"/><text x="60.6299%" y="559.50">std::thr..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (45 samples, 6.11%)</title><rect x="60.3799%" y="533" width="6.1058%" height="15" fill="rgb(205,98,0)" fg:x="445" fg:w="45"/><text x="60.6299%" y="543.50">std::thr..</text></g><g><title>async_io::driver::block_on::_{{closure}} (43 samples, 5.83%)</title><rect x="60.6513%" y="517" width="5.8345%" height="15" fill="rgb(214,191,48)" fg:x="447" fg:w="43"/><text x="60.9013%" y="527.50">async_i..</text></g><g><title>async_executor::Executor::run::_{{closure}} (42 samples, 5.70%)</title><rect x="60.7870%" y="501" width="5.6988%" height="15" fill="rgb(237,112,39)" fg:x="448" fg:w="42"/><text x="61.0370%" y="511.50">async_e..</text></g><g><title>async_executor::Runner::new (1 samples, 0.14%)</title><rect x="66.3501%" y="485" width="0.1357%" height="15" fill="rgb(247,203,27)" fg:x="489" fg:w="1"/><text x="66.6001%" y="495.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::bounded (1 samples, 0.14%)</title><rect x="66.3501%" y="469" width="0.1357%" height="15" fill="rgb(235,124,28)" fg:x="489" fg:w="1"/><text x="66.6001%" y="479.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::new (1 samples, 0.14%)</title><rect x="66.3501%" y="453" width="0.1357%" height="15" fill="rgb(208,207,46)" fg:x="489" fg:w="1"/><text x="66.6001%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.14%)</title><rect x="66.3501%" y="437" width="0.1357%" height="15" fill="rgb(234,176,4)" fg:x="489" fg:w="1"/><text x="66.6001%" y="447.50"></text></g><g><title>core::ptr::write (1 samples, 0.14%)</title><rect x="66.3501%" y="421" width="0.1357%" height="15" fill="rgb(230,133,28)" fg:x="489" fg:w="1"/><text x="66.6001%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="66.3501%" y="405" width="0.1357%" height="15" fill="rgb(211,137,40)" fg:x="489" fg:w="1"/><text x="66.6001%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="66.3501%" y="389" width="0.1357%" height="15" fill="rgb(254,35,13)" fg:x="489" fg:w="1"/><text x="66.6001%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="66.3501%" y="373" width="0.1357%" height="15" fill="rgb(225,49,51)" fg:x="489" fg:w="1"/><text x="66.6001%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="66.3501%" y="357" width="0.1357%" height="15" fill="rgb(251,10,15)" fg:x="489" fg:w="1"/><text x="66.6001%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="66.3501%" y="341" width="0.1357%" height="15" fill="rgb(228,207,15)" fg:x="489" fg:w="1"/><text x="66.6001%" y="351.50"></text></g><g><title>&lt;event_listener_strategy::Blocking as event_listener_strategy::Strategy&gt;::wait (1 samples, 0.14%)</title><rect x="66.4858%" y="485" width="0.1357%" height="15" fill="rgb(241,99,19)" fg:x="490" fg:w="1"/><text x="66.7358%" y="495.50"></text></g><g><title>event_listener::EventListener&lt;T&gt;::wait (1 samples, 0.14%)</title><rect x="66.4858%" y="469" width="0.1357%" height="15" fill="rgb(207,104,49)" fg:x="490" fg:w="1"/><text x="66.7358%" y="479.50"></text></g><g><title>event_listener::Listener&lt;T,B&gt;::wait_internal (1 samples, 0.14%)</title><rect x="66.4858%" y="453" width="0.1357%" height="15" fill="rgb(234,99,18)" fg:x="490" fg:w="1"/><text x="66.7358%" y="463.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.14%)</title><rect x="66.4858%" y="437" width="0.1357%" height="15" fill="rgb(213,191,49)" fg:x="490" fg:w="1"/><text x="66.7358%" y="447.50"></text></g><g><title>event_listener::Listener&lt;T,B&gt;::wait_internal::_{{closure}} (1 samples, 0.14%)</title><rect x="66.4858%" y="421" width="0.1357%" height="15" fill="rgb(210,226,19)" fg:x="490" fg:w="1"/><text x="66.7358%" y="431.50"></text></g><g><title>event_listener::Listener&lt;T,B&gt;::wait_with_parker (1 samples, 0.14%)</title><rect x="66.4858%" y="405" width="0.1357%" height="15" fill="rgb(229,97,18)" fg:x="490" fg:w="1"/><text x="66.7358%" y="415.50"></text></g><g><title>event_listener::sys::&lt;impl event_listener::Inner&lt;T&gt;&gt;::register (1 samples, 0.14%)</title><rect x="66.4858%" y="389" width="0.1357%" height="15" fill="rgb(211,167,15)" fg:x="490" fg:w="1"/><text x="66.7358%" y="399.50"></text></g><g><title>event_listener::sys::&lt;impl event_listener::Inner&lt;T&gt;&gt;::lock (1 samples, 0.14%)</title><rect x="66.4858%" y="373" width="0.1357%" height="15" fill="rgb(210,169,34)" fg:x="490" fg:w="1"/><text x="66.7358%" y="383.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (1 samples, 0.14%)</title><rect x="66.4858%" y="357" width="0.1357%" height="15" fill="rgb(241,121,31)" fg:x="490" fg:w="1"/><text x="66.7358%" y="367.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (1 samples, 0.14%)</title><rect x="66.4858%" y="341" width="0.1357%" height="15" fill="rgb(232,40,11)" fg:x="490" fg:w="1"/><text x="66.7358%" y="351.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock_contended (1 samples, 0.14%)</title><rect x="66.4858%" y="325" width="0.1357%" height="15" fill="rgb(205,86,26)" fg:x="490" fg:w="1"/><text x="66.7358%" y="335.50"></text></g><g><title>smol-4 (48 samples, 6.51%)</title><rect x="60.2442%" y="869" width="6.5129%" height="15" fill="rgb(231,126,28)" fg:x="444" fg:w="48"/><text x="60.4942%" y="879.50">smol-4</text></g><g><title>clone3 (48 samples, 6.51%)</title><rect x="60.2442%" y="853" width="6.5129%" height="15" fill="rgb(219,221,18)" fg:x="444" fg:w="48"/><text x="60.4942%" y="863.50">clone3</text></g><g><title>start_thread (48 samples, 6.51%)</title><rect x="60.2442%" y="837" width="6.5129%" height="15" fill="rgb(211,40,0)" fg:x="444" fg:w="48"/><text x="60.4942%" y="847.50">start_thr..</text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (48 samples, 6.51%)</title><rect x="60.2442%" y="821" width="6.5129%" height="15" fill="rgb(239,85,43)" fg:x="444" fg:w="48"/><text x="60.4942%" y="831.50">std::sys:..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (48 samples, 6.51%)</title><rect x="60.2442%" y="805" width="6.5129%" height="15" fill="rgb(231,55,21)" fg:x="444" fg:w="48"/><text x="60.4942%" y="815.50">&lt;alloc::b..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (48 samples, 6.51%)</title><rect x="60.2442%" y="789" width="6.5129%" height="15" fill="rgb(225,184,43)" fg:x="444" fg:w="48"/><text x="60.4942%" y="799.50">&lt;alloc::b..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (48 samples, 6.51%)</title><rect x="60.2442%" y="773" width="6.5129%" height="15" fill="rgb(251,158,41)" fg:x="444" fg:w="48"/><text x="60.4942%" y="783.50">core::ops..</text></g><g><title>std::thread::Builder::spawn_unchecked_::_{{closure}} (48 samples, 6.51%)</title><rect x="60.2442%" y="757" width="6.5129%" height="15" fill="rgb(234,159,37)" fg:x="444" fg:w="48"/><text x="60.4942%" y="767.50">std::thre..</text></g><g><title>std::panic::catch_unwind (48 samples, 6.51%)</title><rect x="60.2442%" y="741" width="6.5129%" height="15" fill="rgb(216,204,22)" fg:x="444" fg:w="48"/><text x="60.4942%" y="751.50">std::pani..</text></g><g><title>std::panicking::try (48 samples, 6.51%)</title><rect x="60.2442%" y="725" width="6.5129%" height="15" fill="rgb(214,17,3)" fg:x="444" fg:w="48"/><text x="60.4942%" y="735.50">std::pani..</text></g><g><title>std::panicking::try::do_call (48 samples, 6.51%)</title><rect x="60.2442%" y="709" width="6.5129%" height="15" fill="rgb(212,111,17)" fg:x="444" fg:w="48"/><text x="60.4942%" y="719.50">std::pani..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (48 samples, 6.51%)</title><rect x="60.2442%" y="693" width="6.5129%" height="15" fill="rgb(221,157,24)" fg:x="444" fg:w="48"/><text x="60.4942%" y="703.50">&lt;core::pa..</text></g><g><title>std::thread::Builder::spawn_unchecked_::_{{closure}}::_{{closure}} (48 samples, 6.51%)</title><rect x="60.2442%" y="677" width="6.5129%" height="15" fill="rgb(252,16,13)" fg:x="444" fg:w="48"/><text x="60.4942%" y="687.50">std::thre..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (48 samples, 6.51%)</title><rect x="60.2442%" y="661" width="6.5129%" height="15" fill="rgb(221,62,2)" fg:x="444" fg:w="48"/><text x="60.4942%" y="671.50">std::sys_..</text></g><g><title>smol::spawn::spawn::global::_{{closure}}::_{{closure}} (48 samples, 6.51%)</title><rect x="60.2442%" y="645" width="6.5129%" height="15" fill="rgb(247,87,22)" fg:x="444" fg:w="48"/><text x="60.4942%" y="655.50">smol::spa..</text></g><g><title>std::panic::catch_unwind (48 samples, 6.51%)</title><rect x="60.2442%" y="629" width="6.5129%" height="15" fill="rgb(215,73,9)" fg:x="444" fg:w="48"/><text x="60.4942%" y="639.50">std::pani..</text></g><g><title>std::panicking::try (48 samples, 6.51%)</title><rect x="60.2442%" y="613" width="6.5129%" height="15" fill="rgb(207,175,33)" fg:x="444" fg:w="48"/><text x="60.4942%" y="623.50">std::pani..</text></g><g><title>std::panicking::try::do_call (48 samples, 6.51%)</title><rect x="60.2442%" y="597" width="6.5129%" height="15" fill="rgb(243,129,54)" fg:x="444" fg:w="48"/><text x="60.4942%" y="607.50">std::pani..</text></g><g><title>smol::spawn::spawn::global::_{{closure}}::_{{closure}}::_{{closure}} (48 samples, 6.51%)</title><rect x="60.2442%" y="581" width="6.5129%" height="15" fill="rgb(227,119,45)" fg:x="444" fg:w="48"/><text x="60.4942%" y="591.50">smol::spa..</text></g><g><title>smol::spawn::spawn::global (2 samples, 0.27%)</title><rect x="66.4858%" y="565" width="0.2714%" height="15" fill="rgb(205,109,36)" fg:x="490" fg:w="2"/><text x="66.7358%" y="575.50"></text></g><g><title>async_lock::once_cell::OnceCell&lt;T&gt;::get_or_init_blocking (2 samples, 0.27%)</title><rect x="66.4858%" y="549" width="0.2714%" height="15" fill="rgb(205,6,39)" fg:x="490" fg:w="2"/><text x="66.7358%" y="559.50"></text></g><g><title>async_lock::once_cell::OnceCell&lt;T&gt;::get_or_try_init_blocking (2 samples, 0.27%)</title><rect x="66.4858%" y="533" width="0.2714%" height="15" fill="rgb(221,32,16)" fg:x="490" fg:w="2"/><text x="66.7358%" y="543.50"></text></g><g><title>async_lock::once_cell::now_or_never (2 samples, 0.27%)</title><rect x="66.4858%" y="517" width="0.2714%" height="15" fill="rgb(228,144,50)" fg:x="490" fg:w="2"/><text x="66.7358%" y="527.50"></text></g><g><title>async_lock::once_cell::OnceCell&lt;T&gt;::initialize_or_wait::_{{closure}} (2 samples, 0.27%)</title><rect x="66.4858%" y="501" width="0.2714%" height="15" fill="rgb(229,201,53)" fg:x="490" fg:w="2"/><text x="66.7358%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::EventListener&gt; (1 samples, 0.14%)</title><rect x="66.6214%" y="485" width="0.1357%" height="15" fill="rgb(249,153,27)" fg:x="491" fg:w="1"/><text x="66.8714%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::Listener&lt;(),alloc::sync::Arc&lt;event_listener::Inner&lt;()&gt;&gt;&gt;&gt; (1 samples, 0.14%)</title><rect x="66.6214%" y="469" width="0.1357%" height="15" fill="rgb(227,106,25)" fg:x="491" fg:w="1"/><text x="66.8714%" y="479.50"></text></g><g><title>event_listener::_::&lt;impl core::ops::drop::Drop for event_listener::Listener&lt;T,B&gt;&gt;::drop (1 samples, 0.14%)</title><rect x="66.6214%" y="453" width="0.1357%" height="15" fill="rgb(230,65,29)" fg:x="491" fg:w="1"/><text x="66.8714%" y="463.50"></text></g><g><title>event_listener::_::&lt;impl core::ops::drop::Drop for event_listener::Listener&lt;T,B&gt;&gt;::drop::__drop_inner (1 samples, 0.14%)</title><rect x="66.6214%" y="437" width="0.1357%" height="15" fill="rgb(221,57,46)" fg:x="491" fg:w="1"/><text x="66.8714%" y="447.50"></text></g><g><title>event_listener::sys::&lt;impl event_listener::Inner&lt;T&gt;&gt;::remove (1 samples, 0.14%)</title><rect x="66.6214%" y="421" width="0.1357%" height="15" fill="rgb(229,161,17)" fg:x="491" fg:w="1"/><text x="66.8714%" y="431.50"></text></g><g><title>event_listener::sys::Inner&lt;T&gt;::remove (1 samples, 0.14%)</title><rect x="66.6214%" y="405" width="0.1357%" height="15" fill="rgb(222,213,11)" fg:x="491" fg:w="1"/><text x="66.8714%" y="415.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::FromResidual&gt;::from_residual (1 samples, 0.14%)</title><rect x="66.6214%" y="389" width="0.1357%" height="15" fill="rgb(235,35,13)" fg:x="491" fg:w="1"/><text x="66.8714%" y="399.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (1 samples, 0.14%)</title><rect x="66.7571%" y="341" width="0.1357%" height="15" fill="rgb(233,158,34)" fg:x="492" fg:w="1"/><text x="67.0071%" y="351.50"></text></g><g><title>concurrent_queue::unbounded::Block&lt;T&gt;::destroy (1 samples, 0.14%)</title><rect x="67.1642%" y="325" width="0.1357%" height="15" fill="rgb(215,151,48)" fg:x="495" fg:w="1"/><text x="67.4142%" y="335.50"></text></g><g><title>core::mem::drop (1 samples, 0.14%)</title><rect x="67.1642%" y="309" width="0.1357%" height="15" fill="rgb(229,84,14)" fg:x="495" fg:w="1"/><text x="67.4142%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;concurrent_queue::unbounded::Block&lt;async_task::runnable::Runnable&gt;&gt;&gt; (1 samples, 0.14%)</title><rect x="67.1642%" y="293" width="0.1357%" height="15" fill="rgb(229,68,14)" fg:x="495" fg:w="1"/><text x="67.4142%" y="303.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.14%)</title><rect x="67.1642%" y="277" width="0.1357%" height="15" fill="rgb(243,106,26)" fg:x="495" fg:w="1"/><text x="67.4142%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.14%)</title><rect x="67.1642%" y="261" width="0.1357%" height="15" fill="rgb(206,45,38)" fg:x="495" fg:w="1"/><text x="67.4142%" y="271.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.14%)</title><rect x="67.1642%" y="245" width="0.1357%" height="15" fill="rgb(226,6,15)" fg:x="495" fg:w="1"/><text x="67.4142%" y="255.50"></text></g><g><title>__rust_dealloc (1 samples, 0.14%)</title><rect x="67.1642%" y="229" width="0.1357%" height="15" fill="rgb(232,22,54)" fg:x="495" fg:w="1"/><text x="67.4142%" y="239.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (1 samples, 0.14%)</title><rect x="67.2999%" y="325" width="0.1357%" height="15" fill="rgb(229,222,32)" fg:x="496" fg:w="1"/><text x="67.5499%" y="335.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.14%)</title><rect x="67.2999%" y="309" width="0.1357%" height="15" fill="rgb(228,62,29)" fg:x="496" fg:w="1"/><text x="67.5499%" y="319.50"></text></g><g><title>async_executor::steal (6 samples, 0.81%)</title><rect x="66.7571%" y="373" width="0.8141%" height="15" fill="rgb(251,103,34)" fg:x="492" fg:w="6"/><text x="67.0071%" y="383.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (6 samples, 0.81%)</title><rect x="66.7571%" y="357" width="0.8141%" height="15" fill="rgb(233,12,30)" fg:x="492" fg:w="6"/><text x="67.0071%" y="367.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (5 samples, 0.68%)</title><rect x="66.8928%" y="341" width="0.6784%" height="15" fill="rgb(238,52,0)" fg:x="493" fg:w="5"/><text x="67.1428%" y="351.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (1 samples, 0.14%)</title><rect x="67.4355%" y="325" width="0.1357%" height="15" fill="rgb(223,98,5)" fg:x="497" fg:w="1"/><text x="67.6855%" y="335.50"></text></g><g><title>core::sync::atomic::atomic_or (1 samples, 0.14%)</title><rect x="67.4355%" y="309" width="0.1357%" height="15" fill="rgb(228,75,37)" fg:x="497" fg:w="1"/><text x="67.6855%" y="319.50"></text></g><g><title>async_executor::Runner::runnable::_{{closure}}::_{{closure}} (7 samples, 0.95%)</title><rect x="66.7571%" y="389" width="0.9498%" height="15" fill="rgb(205,115,49)" fg:x="492" fg:w="7"/><text x="67.0071%" y="399.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (1 samples, 0.14%)</title><rect x="67.5712%" y="373" width="0.1357%" height="15" fill="rgb(250,154,43)" fg:x="498" fg:w="1"/><text x="67.8212%" y="383.50"></text></g><g><title>std::sys::sync::rwlock::futex::RwLock::read (1 samples, 0.14%)</title><rect x="67.5712%" y="357" width="0.1357%" height="15" fill="rgb(226,43,29)" fg:x="498" fg:w="1"/><text x="67.8212%" y="367.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_err (1 samples, 0.14%)</title><rect x="67.5712%" y="341" width="0.1357%" height="15" fill="rgb(249,228,39)" fg:x="498" fg:w="1"/><text x="67.8212%" y="351.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_ok (1 samples, 0.14%)</title><rect x="67.5712%" y="325" width="0.1357%" height="15" fill="rgb(216,79,43)" fg:x="498" fg:w="1"/><text x="67.8212%" y="335.50"></text></g><g><title>async_executor::State::notify (2 samples, 0.27%)</title><rect x="67.7069%" y="389" width="0.2714%" height="15" fill="rgb(228,95,12)" fg:x="499" fg:w="2"/><text x="67.9569%" y="399.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_ok (2 samples, 0.27%)</title><rect x="67.7069%" y="373" width="0.2714%" height="15" fill="rgb(249,221,15)" fg:x="499" fg:w="2"/><text x="67.9569%" y="383.50"></text></g><g><title>async_executor::Runner::runnable::_{{closure}} (10 samples, 1.36%)</title><rect x="66.7571%" y="453" width="1.3569%" height="15" fill="rgb(233,34,13)" fg:x="492" fg:w="10"/><text x="67.0071%" y="463.50"></text></g><g><title>async_executor::Ticker::runnable_with::_{{closure}} (10 samples, 1.36%)</title><rect x="66.7571%" y="437" width="1.3569%" height="15" fill="rgb(214,103,39)" fg:x="492" fg:w="10"/><text x="67.0071%" y="447.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (10 samples, 1.36%)</title><rect x="66.7571%" y="421" width="1.3569%" height="15" fill="rgb(251,126,39)" fg:x="492" fg:w="10"/><text x="67.0071%" y="431.50"></text></g><g><title>async_executor::Ticker::runnable_with::_{{closure}}::_{{closure}} (10 samples, 1.36%)</title><rect x="66.7571%" y="405" width="1.3569%" height="15" fill="rgb(214,216,36)" fg:x="492" fg:w="10"/><text x="67.0071%" y="415.50"></text></g><g><title>async_executor::Ticker::sleep (1 samples, 0.14%)</title><rect x="67.9783%" y="389" width="0.1357%" height="15" fill="rgb(220,221,8)" fg:x="501" fg:w="1"/><text x="68.2283%" y="399.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (1 samples, 0.14%)</title><rect x="67.9783%" y="373" width="0.1357%" height="15" fill="rgb(240,216,3)" fg:x="501" fg:w="1"/><text x="68.2283%" y="383.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (1 samples, 0.14%)</title><rect x="67.9783%" y="357" width="0.1357%" height="15" fill="rgb(232,218,17)" fg:x="501" fg:w="1"/><text x="68.2283%" y="367.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock_contended (1 samples, 0.14%)</title><rect x="67.9783%" y="341" width="0.1357%" height="15" fill="rgb(229,163,45)" fg:x="501" fg:w="1"/><text x="68.2283%" y="351.50"></text></g><g><title>std::sys::pal::unix::futex::futex_wait (1 samples, 0.14%)</title><rect x="67.9783%" y="325" width="0.1357%" height="15" fill="rgb(231,110,42)" fg:x="501" fg:w="1"/><text x="68.2283%" y="335.50"></text></g><g><title>syscall (1 samples, 0.14%)</title><rect x="67.9783%" y="309" width="0.1357%" height="15" fill="rgb(208,170,48)" fg:x="501" fg:w="1"/><text x="68.2283%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="67.9783%" y="293" width="0.1357%" height="15" fill="rgb(239,116,25)" fg:x="501" fg:w="1"/><text x="68.2283%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="67.9783%" y="277" width="0.1357%" height="15" fill="rgb(219,200,50)" fg:x="501" fg:w="1"/><text x="68.2283%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="67.9783%" y="261" width="0.1357%" height="15" fill="rgb(245,200,0)" fg:x="501" fg:w="1"/><text x="68.2283%" y="271.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (1 samples, 0.14%)</title><rect x="68.2497%" y="421" width="0.1357%" height="15" fill="rgb(245,119,33)" fg:x="503" fg:w="1"/><text x="68.4997%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (1 samples, 0.14%)</title><rect x="68.2497%" y="405" width="0.1357%" height="15" fill="rgb(231,125,12)" fg:x="503" fg:w="1"/><text x="68.4997%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;slab::Slab&lt;core::task::wake::Waker&gt;&gt;&gt; (1 samples, 0.14%)</title><rect x="68.3853%" y="261" width="0.1357%" height="15" fill="rgb(216,96,41)" fg:x="504" fg:w="1"/><text x="68.6353%" y="271.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.14%)</title><rect x="68.3853%" y="245" width="0.1357%" height="15" fill="rgb(248,43,45)" fg:x="504" fg:w="1"/><text x="68.6353%" y="255.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (1 samples, 0.14%)</title><rect x="68.3853%" y="229" width="0.1357%" height="15" fill="rgb(217,222,7)" fg:x="504" fg:w="1"/><text x="68.6353%" y="239.50"></text></g><g><title>slab::Slab&lt;T&gt;::try_remove (2 samples, 0.27%)</title><rect x="68.5210%" y="261" width="0.2714%" height="15" fill="rgb(233,28,6)" fg:x="505" fg:w="2"/><text x="68.7710%" y="271.50"></text></g><g><title>core::mem::replace (2 samples, 0.27%)</title><rect x="68.5210%" y="245" width="0.2714%" height="15" fill="rgb(231,218,15)" fg:x="505" fg:w="2"/><text x="68.7710%" y="255.50"></text></g><g><title>core::ptr::read (2 samples, 0.27%)</title><rect x="68.5210%" y="229" width="0.2714%" height="15" fill="rgb(226,171,48)" fg:x="505" fg:w="2"/><text x="68.7710%" y="239.50"></text></g><g><title>std::sys::pal::unix::futex::futex_wait (5 samples, 0.68%)</title><rect x="68.7924%" y="213" width="0.6784%" height="15" fill="rgb(235,201,9)" fg:x="507" fg:w="5"/><text x="69.0424%" y="223.50"></text></g><g><title>syscall (5 samples, 0.68%)</title><rect x="68.7924%" y="197" width="0.6784%" height="15" fill="rgb(217,80,15)" fg:x="507" fg:w="5"/><text x="69.0424%" y="207.50"></text></g><g><title>[unknown] (5 samples, 0.68%)</title><rect x="68.7924%" y="181" width="0.6784%" height="15" fill="rgb(219,152,8)" fg:x="507" fg:w="5"/><text x="69.0424%" y="191.50"></text></g><g><title>[unknown] (5 samples, 0.68%)</title><rect x="68.7924%" y="165" width="0.6784%" height="15" fill="rgb(243,107,38)" fg:x="507" fg:w="5"/><text x="69.0424%" y="175.50"></text></g><g><title>[unknown] (4 samples, 0.54%)</title><rect x="68.9281%" y="149" width="0.5427%" height="15" fill="rgb(231,17,5)" fg:x="508" fg:w="4"/><text x="69.1781%" y="159.50"></text></g><g><title>[unknown] (4 samples, 0.54%)</title><rect x="68.9281%" y="133" width="0.5427%" height="15" fill="rgb(209,25,54)" fg:x="508" fg:w="4"/><text x="69.1781%" y="143.50"></text></g><g><title>[unknown] (4 samples, 0.54%)</title><rect x="68.9281%" y="117" width="0.5427%" height="15" fill="rgb(219,0,2)" fg:x="508" fg:w="4"/><text x="69.1781%" y="127.50"></text></g><g><title>[unknown] (4 samples, 0.54%)</title><rect x="68.9281%" y="101" width="0.5427%" height="15" fill="rgb(246,9,5)" fg:x="508" fg:w="4"/><text x="69.1781%" y="111.50"></text></g><g><title>[unknown] (3 samples, 0.41%)</title><rect x="69.0638%" y="85" width="0.4071%" height="15" fill="rgb(226,159,4)" fg:x="509" fg:w="3"/><text x="69.3138%" y="95.50"></text></g><g><title>[unknown] (2 samples, 0.27%)</title><rect x="69.1995%" y="69" width="0.2714%" height="15" fill="rgb(219,175,34)" fg:x="510" fg:w="2"/><text x="69.4495%" y="79.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="69.3351%" y="53" width="0.1357%" height="15" fill="rgb(236,10,46)" fg:x="511" fg:w="1"/><text x="69.5851%" y="63.50"></text></g><g><title>&lt;async_executor::CallOnDrop&lt;F&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 2.58%)</title><rect x="68.3853%" y="293" width="2.5780%" height="15" fill="rgb(240,211,16)" fg:x="504" fg:w="19"/><text x="68.6353%" y="303.50">&lt;a..</text></g><g><title>async_executor::Executor::spawn_inner::_{{closure}}::_{{closure}} (19 samples, 2.58%)</title><rect x="68.3853%" y="277" width="2.5780%" height="15" fill="rgb(205,3,43)" fg:x="504" fg:w="19"/><text x="68.6353%" y="287.50">as..</text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (16 samples, 2.17%)</title><rect x="68.7924%" y="261" width="2.1710%" height="15" fill="rgb(245,7,22)" fg:x="507" fg:w="16"/><text x="69.0424%" y="271.50">s..</text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (16 samples, 2.17%)</title><rect x="68.7924%" y="245" width="2.1710%" height="15" fill="rgb(239,132,32)" fg:x="507" fg:w="16"/><text x="69.0424%" y="255.50">s..</text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock_contended (16 samples, 2.17%)</title><rect x="68.7924%" y="229" width="2.1710%" height="15" fill="rgb(228,202,34)" fg:x="507" fg:w="16"/><text x="69.0424%" y="239.50">s..</text></g><g><title>std::sys::sync::mutex::futex::Mutex::spin (11 samples, 1.49%)</title><rect x="69.4708%" y="213" width="1.4925%" height="15" fill="rgb(254,200,22)" fg:x="512" fg:w="11"/><text x="69.7208%" y="223.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (2 samples, 0.27%)</title><rect x="70.6920%" y="197" width="0.2714%" height="15" fill="rgb(219,10,39)" fg:x="521" fg:w="2"/><text x="70.9420%" y="207.50"></text></g><g><title>core::sync::atomic::atomic_load (2 samples, 0.27%)</title><rect x="70.6920%" y="181" width="0.2714%" height="15" fill="rgb(226,210,39)" fg:x="521" fg:w="2"/><text x="70.9420%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_executor::Executor::spawn_inner&lt;(),julia::generate_image_buffer::{{closure}}&gt;::{{closure}}::{{closure}}&gt; (1 samples, 0.14%)</title><rect x="70.9634%" y="293" width="0.1357%" height="15" fill="rgb(208,219,16)" fg:x="523" fg:w="1"/><text x="71.2134%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;async_executor::State&gt;&gt; (1 samples, 0.14%)</title><rect x="70.9634%" y="277" width="0.1357%" height="15" fill="rgb(216,158,51)" fg:x="523" fg:w="1"/><text x="71.2134%" y="287.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.14%)</title><rect x="70.9634%" y="261" width="0.1357%" height="15" fill="rgb(233,14,44)" fg:x="523" fg:w="1"/><text x="71.2134%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_executor::CallOnDrop&lt;async_executor::Executor::spawn_inner&lt;(),julia::generate_image_buffer::{{closure}}&gt;::{{closure}}::{{closure}}&gt;&gt; (22 samples, 2.99%)</title><rect x="68.3853%" y="309" width="2.9851%" height="15" fill="rgb(237,97,39)" fg:x="504" fg:w="22"/><text x="68.6353%" y="319.50">cor..</text></g><g><title>syscall (2 samples, 0.27%)</title><rect x="71.0991%" y="293" width="0.2714%" height="15" fill="rgb(218,198,43)" fg:x="524" fg:w="2"/><text x="71.3491%" y="303.50"></text></g><g><title>[unknown] (2 samples, 0.27%)</title><rect x="71.0991%" y="277" width="0.2714%" height="15" fill="rgb(231,104,20)" fg:x="524" fg:w="2"/><text x="71.3491%" y="287.50"></text></g><g><title>[unknown] (2 samples, 0.27%)</title><rect x="71.0991%" y="261" width="0.2714%" height="15" fill="rgb(254,36,13)" fg:x="524" fg:w="2"/><text x="71.3491%" y="271.50"></text></g><g><title>[unknown] (2 samples, 0.27%)</title><rect x="71.0991%" y="245" width="0.2714%" height="15" fill="rgb(248,14,50)" fg:x="524" fg:w="2"/><text x="71.3491%" y="255.50"></text></g><g><title>[unknown] (2 samples, 0.27%)</title><rect x="71.0991%" y="229" width="0.2714%" height="15" fill="rgb(217,107,29)" fg:x="524" fg:w="2"/><text x="71.3491%" y="239.50"></text></g><g><title>[unknown] (2 samples, 0.27%)</title><rect x="71.0991%" y="213" width="0.2714%" height="15" fill="rgb(251,169,33)" fg:x="524" fg:w="2"/><text x="71.3491%" y="223.50"></text></g><g><title>[unknown] (2 samples, 0.27%)</title><rect x="71.0991%" y="197" width="0.2714%" height="15" fill="rgb(217,108,32)" fg:x="524" fg:w="2"/><text x="71.3491%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;std::sync::mutex::Mutex&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;image::color::Rgb&lt;u8&gt;&gt;&gt;&gt;&gt;&gt; (1 samples, 0.14%)</title><rect x="71.3704%" y="293" width="0.1357%" height="15" fill="rgb(219,66,42)" fg:x="526" fg:w="1"/><text x="71.6204%" y="303.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.14%)</title><rect x="71.3704%" y="277" width="0.1357%" height="15" fill="rgb(206,180,7)" fg:x="526" fg:w="1"/><text x="71.6204%" y="287.50"></text></g><g><title>async_task::runnable::Runnable&lt;M&gt;::run (26 samples, 3.53%)</title><rect x="68.1140%" y="453" width="3.5278%" height="15" fill="rgb(208,226,31)" fg:x="502" fg:w="26"/><text x="68.3640%" y="463.50">asy..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S,M&gt;::run (26 samples, 3.53%)</title><rect x="68.1140%" y="437" width="3.5278%" height="15" fill="rgb(218,26,49)" fg:x="502" fg:w="26"/><text x="68.3640%" y="447.50">asy..</text></g><g><title>std::panic::catch_unwind (24 samples, 3.26%)</title><rect x="68.3853%" y="421" width="3.2564%" height="15" fill="rgb(233,197,48)" fg:x="504" fg:w="24"/><text x="68.6353%" y="431.50">std..</text></g><g><title>std::panicking::try (24 samples, 3.26%)</title><rect x="68.3853%" y="405" width="3.2564%" height="15" fill="rgb(252,181,51)" fg:x="504" fg:w="24"/><text x="68.6353%" y="415.50">std..</text></g><g><title>std::panicking::try::do_call (24 samples, 3.26%)</title><rect x="68.3853%" y="389" width="3.2564%" height="15" fill="rgb(253,90,19)" fg:x="504" fg:w="24"/><text x="68.6353%" y="399.50">std..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (24 samples, 3.26%)</title><rect x="68.3853%" y="373" width="3.2564%" height="15" fill="rgb(215,171,30)" fg:x="504" fg:w="24"/><text x="68.6353%" y="383.50">&lt;co..</text></g><g><title>core::ops::function::FnOnce::call_once (24 samples, 3.26%)</title><rect x="68.3853%" y="357" width="3.2564%" height="15" fill="rgb(214,222,9)" fg:x="504" fg:w="24"/><text x="68.6353%" y="367.50">cor..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S,M&gt;::run::_{{closure}} (24 samples, 3.26%)</title><rect x="68.3853%" y="341" width="3.2564%" height="15" fill="rgb(223,3,22)" fg:x="504" fg:w="24"/><text x="68.6353%" y="351.50">asy..</text></g><g><title>async_executor::Executor::spawn_inner::_{{closure}} (24 samples, 3.26%)</title><rect x="68.3853%" y="325" width="3.2564%" height="15" fill="rgb(225,196,46)" fg:x="504" fg:w="24"/><text x="68.6353%" y="335.50">asy..</text></g><g><title>julia::generate_image_buffer::_{{closure}} (2 samples, 0.27%)</title><rect x="71.3704%" y="309" width="0.2714%" height="15" fill="rgb(209,110,37)" fg:x="526" fg:w="2"/><text x="71.6204%" y="319.50"></text></g><g><title>julia::color_generator::_{{closure}} (1 samples, 0.14%)</title><rect x="71.5061%" y="293" width="0.1357%" height="15" fill="rgb(249,89,12)" fg:x="527" fg:w="1"/><text x="71.7561%" y="303.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::powf (1 samples, 0.14%)</title><rect x="71.5061%" y="277" width="0.1357%" height="15" fill="rgb(226,27,33)" fg:x="527" fg:w="1"/><text x="71.7561%" y="287.50"></text></g><g><title>pow (1 samples, 0.14%)</title><rect x="71.5061%" y="261" width="0.1357%" height="15" fill="rgb(213,82,22)" fg:x="527" fg:w="1"/><text x="71.7561%" y="271.50"></text></g><g><title>[libm.so.6] (1 samples, 0.14%)</title><rect x="71.5061%" y="245" width="0.1357%" height="15" fill="rgb(248,140,0)" fg:x="527" fg:w="1"/><text x="71.7561%" y="255.50"></text></g><g><title>async_executor::Executor::run::_{{closure}} (37 samples, 5.02%)</title><rect x="66.7571%" y="501" width="5.0204%" height="15" fill="rgb(228,106,3)" fg:x="492" fg:w="37"/><text x="67.0071%" y="511.50">async_..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (37 samples, 5.02%)</title><rect x="66.7571%" y="485" width="5.0204%" height="15" fill="rgb(209,23,37)" fg:x="492" fg:w="37"/><text x="67.0071%" y="495.50">&lt;futur..</text></g><g><title>async_executor::Executor::run::_{{closure}}::_{{closure}} (37 samples, 5.02%)</title><rect x="66.7571%" y="469" width="5.0204%" height="15" fill="rgb(241,93,50)" fg:x="492" fg:w="37"/><text x="67.0071%" y="479.50">async_..</text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.14%)</title><rect x="71.6418%" y="453" width="0.1357%" height="15" fill="rgb(253,46,43)" fg:x="528" fg:w="1"/><text x="71.8918%" y="463.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.14%)</title><rect x="71.6418%" y="437" width="0.1357%" height="15" fill="rgb(226,206,43)" fg:x="528" fg:w="1"/><text x="71.8918%" y="447.50"></text></g><g><title>async_io::reactor::ReactorLock::react (1 samples, 0.14%)</title><rect x="71.7775%" y="501" width="0.1357%" height="15" fill="rgb(217,54,7)" fg:x="529" fg:w="1"/><text x="72.0275%" y="511.50"></text></g><g><title>polling::Poller::wait (1 samples, 0.14%)</title><rect x="71.7775%" y="485" width="0.1357%" height="15" fill="rgb(223,5,52)" fg:x="529" fg:w="1"/><text x="72.0275%" y="495.50"></text></g><g><title>polling::epoll::Poller::wait (1 samples, 0.14%)</title><rect x="71.7775%" y="469" width="0.1357%" height="15" fill="rgb(206,52,46)" fg:x="529" fg:w="1"/><text x="72.0275%" y="479.50"></text></g><g><title>rustix::backend::event::epoll::wait (1 samples, 0.14%)</title><rect x="71.7775%" y="453" width="0.1357%" height="15" fill="rgb(253,136,11)" fg:x="529" fg:w="1"/><text x="72.0275%" y="463.50"></text></g><g><title>rustix::backend::event::syscalls::epoll_wait (1 samples, 0.14%)</title><rect x="71.7775%" y="437" width="0.1357%" height="15" fill="rgb(208,106,33)" fg:x="529" fg:w="1"/><text x="72.0275%" y="447.50"></text></g><g><title>rustix::backend::arch::asm::syscall4 (1 samples, 0.14%)</title><rect x="71.7775%" y="421" width="0.1357%" height="15" fill="rgb(206,54,4)" fg:x="529" fg:w="1"/><text x="72.0275%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="71.7775%" y="405" width="0.1357%" height="15" fill="rgb(213,3,15)" fg:x="529" fg:w="1"/><text x="72.0275%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="71.7775%" y="389" width="0.1357%" height="15" fill="rgb(252,211,39)" fg:x="529" fg:w="1"/><text x="72.0275%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="71.7775%" y="373" width="0.1357%" height="15" fill="rgb(223,6,36)" fg:x="529" fg:w="1"/><text x="72.0275%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="71.7775%" y="357" width="0.1357%" height="15" fill="rgb(252,169,45)" fg:x="529" fg:w="1"/><text x="72.0275%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="71.7775%" y="341" width="0.1357%" height="15" fill="rgb(212,48,26)" fg:x="529" fg:w="1"/><text x="72.0275%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="71.7775%" y="325" width="0.1357%" height="15" fill="rgb(251,102,48)" fg:x="529" fg:w="1"/><text x="72.0275%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="71.7775%" y="309" width="0.1357%" height="15" fill="rgb(243,208,16)" fg:x="529" fg:w="1"/><text x="72.0275%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="71.7775%" y="293" width="0.1357%" height="15" fill="rgb(219,96,24)" fg:x="529" fg:w="1"/><text x="72.0275%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="71.7775%" y="277" width="0.1357%" height="15" fill="rgb(219,33,29)" fg:x="529" fg:w="1"/><text x="72.0275%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="71.7775%" y="261" width="0.1357%" height="15" fill="rgb(223,176,5)" fg:x="529" fg:w="1"/><text x="72.0275%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="71.7775%" y="245" width="0.1357%" height="15" fill="rgb(228,140,14)" fg:x="529" fg:w="1"/><text x="72.0275%" y="255.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="71.7775%" y="229" width="0.1357%" height="15" fill="rgb(217,179,31)" fg:x="529" fg:w="1"/><text x="72.0275%" y="239.50"></text></g><g><title>smol-5 (40 samples, 5.43%)</title><rect x="66.7571%" y="869" width="5.4274%" height="15" fill="rgb(230,9,30)" fg:x="492" fg:w="40"/><text x="67.0071%" y="879.50">smol-5</text></g><g><title>clone3 (40 samples, 5.43%)</title><rect x="66.7571%" y="853" width="5.4274%" height="15" fill="rgb(230,136,20)" fg:x="492" fg:w="40"/><text x="67.0071%" y="863.50">clone3</text></g><g><title>start_thread (40 samples, 5.43%)</title><rect x="66.7571%" y="837" width="5.4274%" height="15" fill="rgb(215,210,22)" fg:x="492" fg:w="40"/><text x="67.0071%" y="847.50">start_t..</text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (40 samples, 5.43%)</title><rect x="66.7571%" y="821" width="5.4274%" height="15" fill="rgb(218,43,5)" fg:x="492" fg:w="40"/><text x="67.0071%" y="831.50">std::sy..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (40 samples, 5.43%)</title><rect x="66.7571%" y="805" width="5.4274%" height="15" fill="rgb(216,11,5)" fg:x="492" fg:w="40"/><text x="67.0071%" y="815.50">&lt;alloc:..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (40 samples, 5.43%)</title><rect x="66.7571%" y="789" width="5.4274%" height="15" fill="rgb(209,82,29)" fg:x="492" fg:w="40"/><text x="67.0071%" y="799.50">&lt;alloc:..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (40 samples, 5.43%)</title><rect x="66.7571%" y="773" width="5.4274%" height="15" fill="rgb(244,115,12)" fg:x="492" fg:w="40"/><text x="67.0071%" y="783.50">core::o..</text></g><g><title>std::thread::Builder::spawn_unchecked_::_{{closure}} (40 samples, 5.43%)</title><rect x="66.7571%" y="757" width="5.4274%" height="15" fill="rgb(222,82,18)" fg:x="492" fg:w="40"/><text x="67.0071%" y="767.50">std::th..</text></g><g><title>std::panic::catch_unwind (40 samples, 5.43%)</title><rect x="66.7571%" y="741" width="5.4274%" height="15" fill="rgb(249,227,8)" fg:x="492" fg:w="40"/><text x="67.0071%" y="751.50">std::pa..</text></g><g><title>std::panicking::try (40 samples, 5.43%)</title><rect x="66.7571%" y="725" width="5.4274%" height="15" fill="rgb(253,141,45)" fg:x="492" fg:w="40"/><text x="67.0071%" y="735.50">std::pa..</text></g><g><title>std::panicking::try::do_call (40 samples, 5.43%)</title><rect x="66.7571%" y="709" width="5.4274%" height="15" fill="rgb(234,184,4)" fg:x="492" fg:w="40"/><text x="67.0071%" y="719.50">std::pa..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (40 samples, 5.43%)</title><rect x="66.7571%" y="693" width="5.4274%" height="15" fill="rgb(218,194,23)" fg:x="492" fg:w="40"/><text x="67.0071%" y="703.50">&lt;core::..</text></g><g><title>std::thread::Builder::spawn_unchecked_::_{{closure}}::_{{closure}} (40 samples, 5.43%)</title><rect x="66.7571%" y="677" width="5.4274%" height="15" fill="rgb(235,66,41)" fg:x="492" fg:w="40"/><text x="67.0071%" y="687.50">std::th..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (40 samples, 5.43%)</title><rect x="66.7571%" y="661" width="5.4274%" height="15" fill="rgb(245,217,1)" fg:x="492" fg:w="40"/><text x="67.0071%" y="671.50">std::sy..</text></g><g><title>smol::spawn::spawn::global::_{{closure}}::_{{closure}} (40 samples, 5.43%)</title><rect x="66.7571%" y="645" width="5.4274%" height="15" fill="rgb(229,91,1)" fg:x="492" fg:w="40"/><text x="67.0071%" y="655.50">smol::s..</text></g><g><title>std::panic::catch_unwind (40 samples, 5.43%)</title><rect x="66.7571%" y="629" width="5.4274%" height="15" fill="rgb(207,101,30)" fg:x="492" fg:w="40"/><text x="67.0071%" y="639.50">std::pa..</text></g><g><title>std::panicking::try (40 samples, 5.43%)</title><rect x="66.7571%" y="613" width="5.4274%" height="15" fill="rgb(223,82,49)" fg:x="492" fg:w="40"/><text x="67.0071%" y="623.50">std::pa..</text></g><g><title>std::panicking::try::do_call (40 samples, 5.43%)</title><rect x="66.7571%" y="597" width="5.4274%" height="15" fill="rgb(218,167,17)" fg:x="492" fg:w="40"/><text x="67.0071%" y="607.50">std::pa..</text></g><g><title>smol::spawn::spawn::global::_{{closure}}::_{{closure}}::_{{closure}} (40 samples, 5.43%)</title><rect x="66.7571%" y="581" width="5.4274%" height="15" fill="rgb(208,103,14)" fg:x="492" fg:w="40"/><text x="67.0071%" y="591.50">smol::s..</text></g><g><title>async_io::driver::block_on (40 samples, 5.43%)</title><rect x="66.7571%" y="565" width="5.4274%" height="15" fill="rgb(238,20,8)" fg:x="492" fg:w="40"/><text x="67.0071%" y="575.50">async_i..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (40 samples, 5.43%)</title><rect x="66.7571%" y="549" width="5.4274%" height="15" fill="rgb(218,80,54)" fg:x="492" fg:w="40"/><text x="67.0071%" y="559.50">std::th..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (40 samples, 5.43%)</title><rect x="66.7571%" y="533" width="5.4274%" height="15" fill="rgb(240,144,17)" fg:x="492" fg:w="40"/><text x="67.0071%" y="543.50">std::th..</text></g><g><title>async_io::driver::block_on::_{{closure}} (40 samples, 5.43%)</title><rect x="66.7571%" y="517" width="5.4274%" height="15" fill="rgb(245,27,50)" fg:x="492" fg:w="40"/><text x="67.0071%" y="527.50">async_i..</text></g><g><title>parking::Inner::park (2 samples, 0.27%)</title><rect x="71.9132%" y="501" width="0.2714%" height="15" fill="rgb(251,51,7)" fg:x="530" fg:w="2"/><text x="72.1632%" y="511.50"></text></g><g><title>std::sync::condvar::Condvar::wait (2 samples, 0.27%)</title><rect x="71.9132%" y="485" width="0.2714%" height="15" fill="rgb(245,217,29)" fg:x="530" fg:w="2"/><text x="72.1632%" y="495.50"></text></g><g><title>std::sys::sync::condvar::futex::Condvar::wait (2 samples, 0.27%)</title><rect x="71.9132%" y="469" width="0.2714%" height="15" fill="rgb(221,176,29)" fg:x="530" fg:w="2"/><text x="72.1632%" y="479.50"></text></g><g><title>std::sys::sync::condvar::futex::Condvar::wait_optional_timeout (2 samples, 0.27%)</title><rect x="71.9132%" y="453" width="0.2714%" height="15" fill="rgb(212,180,24)" fg:x="530" fg:w="2"/><text x="72.1632%" y="463.50"></text></g><g><title>std::sys::pal::unix::futex::futex_wait (2 samples, 0.27%)</title><rect x="71.9132%" y="437" width="0.2714%" height="15" fill="rgb(254,24,2)" fg:x="530" fg:w="2"/><text x="72.1632%" y="447.50"></text></g><g><title>syscall (2 samples, 0.27%)</title><rect x="71.9132%" y="421" width="0.2714%" height="15" fill="rgb(230,100,2)" fg:x="530" fg:w="2"/><text x="72.1632%" y="431.50"></text></g><g><title>[unknown] (2 samples, 0.27%)</title><rect x="71.9132%" y="405" width="0.2714%" height="15" fill="rgb(219,142,25)" fg:x="530" fg:w="2"/><text x="72.1632%" y="415.50"></text></g><g><title>[unknown] (2 samples, 0.27%)</title><rect x="71.9132%" y="389" width="0.2714%" height="15" fill="rgb(240,73,43)" fg:x="530" fg:w="2"/><text x="72.1632%" y="399.50"></text></g><g><title>[unknown] (2 samples, 0.27%)</title><rect x="71.9132%" y="373" width="0.2714%" height="15" fill="rgb(214,114,15)" fg:x="530" fg:w="2"/><text x="72.1632%" y="383.50"></text></g><g><title>[unknown] (2 samples, 0.27%)</title><rect x="71.9132%" y="357" width="0.2714%" height="15" fill="rgb(207,130,4)" fg:x="530" fg:w="2"/><text x="72.1632%" y="367.50"></text></g><g><title>[unknown] (2 samples, 0.27%)</title><rect x="71.9132%" y="341" width="0.2714%" height="15" fill="rgb(221,25,40)" fg:x="530" fg:w="2"/><text x="72.1632%" y="351.50"></text></g><g><title>[unknown] (2 samples, 0.27%)</title><rect x="71.9132%" y="325" width="0.2714%" height="15" fill="rgb(241,184,7)" fg:x="530" fg:w="2"/><text x="72.1632%" y="335.50"></text></g><g><title>[unknown] (2 samples, 0.27%)</title><rect x="71.9132%" y="309" width="0.2714%" height="15" fill="rgb(235,159,4)" fg:x="530" fg:w="2"/><text x="72.1632%" y="319.50"></text></g><g><title>[unknown] (2 samples, 0.27%)</title><rect x="71.9132%" y="293" width="0.2714%" height="15" fill="rgb(214,87,48)" fg:x="530" fg:w="2"/><text x="72.1632%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="72.0488%" y="277" width="0.1357%" height="15" fill="rgb(246,198,24)" fg:x="531" fg:w="1"/><text x="72.2988%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="72.0488%" y="261" width="0.1357%" height="15" fill="rgb(209,66,40)" fg:x="531" fg:w="1"/><text x="72.2988%" y="271.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.27%)</title><rect x="72.1845%" y="373" width="0.2714%" height="15" fill="rgb(233,147,39)" fg:x="532" fg:w="2"/><text x="72.4345%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (2 samples, 0.27%)</title><rect x="72.1845%" y="357" width="0.2714%" height="15" fill="rgb(231,145,52)" fg:x="532" fg:w="2"/><text x="72.4345%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.27%)</title><rect x="72.1845%" y="341" width="0.2714%" height="15" fill="rgb(206,20,26)" fg:x="532" fg:w="2"/><text x="72.4345%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::skip::Skip&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.27%)</title><rect x="72.1845%" y="325" width="0.2714%" height="15" fill="rgb(238,220,4)" fg:x="532" fg:w="2"/><text x="72.4345%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.14%)</title><rect x="72.3202%" y="309" width="0.1357%" height="15" fill="rgb(252,195,42)" fg:x="533" fg:w="1"/><text x="72.5702%" y="319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.14%)</title><rect x="72.3202%" y="293" width="0.1357%" height="15" fill="rgb(209,10,6)" fg:x="533" fg:w="1"/><text x="72.5702%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::check::_{{closure}} (1 samples, 0.14%)</title><rect x="72.3202%" y="277" width="0.1357%" height="15" fill="rgb(229,3,52)" fg:x="533" fg:w="1"/><text x="72.5702%" y="287.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::_{{closure}} (1 samples, 0.14%)</title><rect x="72.3202%" y="261" width="0.1357%" height="15" fill="rgb(253,49,37)" fg:x="533" fg:w="1"/><text x="72.5702%" y="271.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.14%)</title><rect x="72.3202%" y="245" width="0.1357%" height="15" fill="rgb(240,103,49)" fg:x="533" fg:w="1"/><text x="72.5702%" y="255.50"></text></g><g><title>async_executor::Runner::runnable::_{{closure}}::_{{closure}}::_{{closure}} (1 samples, 0.14%)</title><rect x="72.3202%" y="229" width="0.1357%" height="15" fill="rgb(250,182,30)" fg:x="533" fg:w="1"/><text x="72.5702%" y="239.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::ptr_eq (1 samples, 0.14%)</title><rect x="72.3202%" y="213" width="0.1357%" height="15" fill="rgb(248,8,30)" fg:x="533" fg:w="1"/><text x="72.5702%" y="223.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::len (1 samples, 0.14%)</title><rect x="72.4559%" y="357" width="0.1357%" height="15" fill="rgb(237,120,30)" fg:x="534" fg:w="1"/><text x="72.7059%" y="367.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::len (1 samples, 0.14%)</title><rect x="72.4559%" y="341" width="0.1357%" height="15" fill="rgb(221,146,34)" fg:x="534" fg:w="1"/><text x="72.7059%" y="351.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.14%)</title><rect x="72.4559%" y="325" width="0.1357%" height="15" fill="rgb(242,55,13)" fg:x="534" fg:w="1"/><text x="72.7059%" y="335.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.14%)</title><rect x="72.4559%" y="309" width="0.1357%" height="15" fill="rgb(242,112,31)" fg:x="534" fg:w="1"/><text x="72.7059%" y="319.50"></text></g><g><title>concurrent_queue::sync::busy_wait (1 samples, 0.14%)</title><rect x="72.5916%" y="325" width="0.1357%" height="15" fill="rgb(249,192,27)" fg:x="535" fg:w="1"/><text x="72.8416%" y="335.50"></text></g><g><title>__sched_yield (1 samples, 0.14%)</title><rect x="72.5916%" y="309" width="0.1357%" height="15" fill="rgb(208,204,44)" fg:x="535" fg:w="1"/><text x="72.8416%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="72.5916%" y="293" width="0.1357%" height="15" fill="rgb(208,93,54)" fg:x="535" fg:w="1"/><text x="72.8416%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="72.5916%" y="277" width="0.1357%" height="15" fill="rgb(242,1,31)" fg:x="535" fg:w="1"/><text x="72.8416%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="72.5916%" y="261" width="0.1357%" height="15" fill="rgb(241,83,25)" fg:x="535" fg:w="1"/><text x="72.8416%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="72.5916%" y="245" width="0.1357%" height="15" fill="rgb(205,169,50)" fg:x="535" fg:w="1"/><text x="72.8416%" y="255.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="72.5916%" y="229" width="0.1357%" height="15" fill="rgb(239,186,37)" fg:x="535" fg:w="1"/><text x="72.8416%" y="239.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (4 samples, 0.54%)</title><rect x="72.5916%" y="357" width="0.5427%" height="15" fill="rgb(205,221,10)" fg:x="535" fg:w="4"/><text x="72.8416%" y="367.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (4 samples, 0.54%)</title><rect x="72.5916%" y="341" width="0.5427%" height="15" fill="rgb(218,196,15)" fg:x="535" fg:w="4"/><text x="72.8416%" y="351.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (3 samples, 0.41%)</title><rect x="72.7273%" y="325" width="0.4071%" height="15" fill="rgb(218,196,35)" fg:x="536" fg:w="3"/><text x="72.9773%" y="335.50"></text></g><g><title>core::sync::atomic::atomic_load (3 samples, 0.41%)</title><rect x="72.7273%" y="309" width="0.4071%" height="15" fill="rgb(233,63,24)" fg:x="536" fg:w="3"/><text x="72.9773%" y="319.50"></text></g><g><title>async_executor::steal (6 samples, 0.81%)</title><rect x="72.4559%" y="373" width="0.8141%" height="15" fill="rgb(225,8,4)" fg:x="534" fg:w="6"/><text x="72.7059%" y="383.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (1 samples, 0.14%)</title><rect x="73.1343%" y="357" width="0.1357%" height="15" fill="rgb(234,105,35)" fg:x="539" fg:w="1"/><text x="73.3843%" y="367.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::push (1 samples, 0.14%)</title><rect x="73.1343%" y="341" width="0.1357%" height="15" fill="rgb(236,21,32)" fg:x="539" fg:w="1"/><text x="73.3843%" y="351.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (1 samples, 0.14%)</title><rect x="73.2700%" y="373" width="0.1357%" height="15" fill="rgb(228,109,6)" fg:x="540" fg:w="1"/><text x="73.5200%" y="383.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (1 samples, 0.14%)</title><rect x="73.2700%" y="357" width="0.1357%" height="15" fill="rgb(229,215,31)" fg:x="540" fg:w="1"/><text x="73.5200%" y="367.50"></text></g><g><title>async_executor::Runner::runnable::_{{closure}}::_{{closure}} (10 samples, 1.36%)</title><rect x="72.1845%" y="389" width="1.3569%" height="15" fill="rgb(221,52,54)" fg:x="532" fg:w="10"/><text x="72.4345%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;concurrent_queue::ConcurrentQueue&lt;async_task::runnable::Runnable&gt;&gt;&gt;&gt;&gt; (1 samples, 0.14%)</title><rect x="73.4057%" y="373" width="0.1357%" height="15" fill="rgb(252,129,43)" fg:x="541" fg:w="1"/><text x="73.6557%" y="383.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.14%)</title><rect x="73.4057%" y="357" width="0.1357%" height="15" fill="rgb(248,183,27)" fg:x="541" fg:w="1"/><text x="73.6557%" y="367.50"></text></g><g><title>std::sys::sync::rwlock::futex::RwLock::read_unlock (1 samples, 0.14%)</title><rect x="73.4057%" y="341" width="0.1357%" height="15" fill="rgb(250,0,22)" fg:x="541" fg:w="1"/><text x="73.6557%" y="351.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_ok (2 samples, 0.27%)</title><rect x="73.5414%" y="373" width="0.2714%" height="15" fill="rgb(213,166,10)" fg:x="542" fg:w="2"/><text x="73.7914%" y="383.50"></text></g><g><title>async_executor::Runner::runnable::_{{closure}} (13 samples, 1.76%)</title><rect x="72.1845%" y="453" width="1.7639%" height="15" fill="rgb(207,163,36)" fg:x="532" fg:w="13"/><text x="72.4345%" y="463.50"></text></g><g><title>async_executor::Ticker::runnable_with::_{{closure}} (13 samples, 1.76%)</title><rect x="72.1845%" y="437" width="1.7639%" height="15" fill="rgb(208,122,22)" fg:x="532" fg:w="13"/><text x="72.4345%" y="447.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (13 samples, 1.76%)</title><rect x="72.1845%" y="421" width="1.7639%" height="15" fill="rgb(207,104,49)" fg:x="532" fg:w="13"/><text x="72.4345%" y="431.50"></text></g><g><title>async_executor::Ticker::runnable_with::_{{closure}}::_{{closure}} (13 samples, 1.76%)</title><rect x="72.1845%" y="405" width="1.7639%" height="15" fill="rgb(248,211,50)" fg:x="532" fg:w="13"/><text x="72.4345%" y="415.50"></text></g><g><title>async_executor::State::notify (3 samples, 0.41%)</title><rect x="73.5414%" y="389" width="0.4071%" height="15" fill="rgb(217,13,45)" fg:x="542" fg:w="3"/><text x="73.7914%" y="399.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (1 samples, 0.14%)</title><rect x="73.8128%" y="373" width="0.1357%" height="15" fill="rgb(211,216,49)" fg:x="544" fg:w="1"/><text x="74.0628%" y="383.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (1 samples, 0.14%)</title><rect x="73.8128%" y="357" width="0.1357%" height="15" fill="rgb(221,58,53)" fg:x="544" fg:w="1"/><text x="74.0628%" y="367.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock_contended (1 samples, 0.14%)</title><rect x="73.8128%" y="341" width="0.1357%" height="15" fill="rgb(220,112,41)" fg:x="544" fg:w="1"/><text x="74.0628%" y="351.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::spin (1 samples, 0.14%)</title><rect x="73.8128%" y="325" width="0.1357%" height="15" fill="rgb(236,38,28)" fg:x="544" fg:w="1"/><text x="74.0628%" y="335.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S,M&gt;::drop_ref (1 samples, 0.14%)</title><rect x="74.3555%" y="421" width="0.1357%" height="15" fill="rgb(227,195,22)" fg:x="548" fg:w="1"/><text x="74.6055%" y="431.50"></text></g><g><title>core::mem::drop (1 samples, 0.14%)</title><rect x="74.6269%" y="261" width="0.1357%" height="15" fill="rgb(214,55,33)" fg:x="550" fg:w="1"/><text x="74.8769%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::task::wake::Waker&gt;&gt; (1 samples, 0.14%)</title><rect x="74.6269%" y="245" width="0.1357%" height="15" fill="rgb(248,80,13)" fg:x="550" fg:w="1"/><text x="74.8769%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (1 samples, 0.14%)</title><rect x="74.6269%" y="229" width="0.1357%" height="15" fill="rgb(238,52,6)" fg:x="550" fg:w="1"/><text x="74.8769%" y="239.50"></text></g><g><title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (1 samples, 0.14%)</title><rect x="74.6269%" y="213" width="0.1357%" height="15" fill="rgb(224,198,47)" fg:x="550" fg:w="1"/><text x="74.8769%" y="223.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S,M&gt;::drop_waker (1 samples, 0.14%)</title><rect x="74.6269%" y="197" width="0.1357%" height="15" fill="rgb(233,171,20)" fg:x="550" fg:w="1"/><text x="74.8769%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;slab::Slab&lt;core::task::wake::Waker&gt;&gt;&gt; (1 samples, 0.14%)</title><rect x="74.7626%" y="261" width="0.1357%" height="15" fill="rgb(241,30,25)" fg:x="551" fg:w="1"/><text x="75.0126%" y="271.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.14%)</title><rect x="74.7626%" y="245" width="0.1357%" height="15" fill="rgb(207,171,38)" fg:x="551" fg:w="1"/><text x="75.0126%" y="255.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (1 samples, 0.14%)</title><rect x="74.7626%" y="229" width="0.1357%" height="15" fill="rgb(234,70,1)" fg:x="551" fg:w="1"/><text x="75.0126%" y="239.50"></text></g><g><title>slab::Slab&lt;T&gt;::try_remove (1 samples, 0.14%)</title><rect x="74.8982%" y="261" width="0.1357%" height="15" fill="rgb(232,178,18)" fg:x="552" fg:w="1"/><text x="75.1482%" y="271.50"></text></g><g><title>core::mem::replace (1 samples, 0.14%)</title><rect x="74.8982%" y="245" width="0.1357%" height="15" fill="rgb(241,78,40)" fg:x="552" fg:w="1"/><text x="75.1482%" y="255.50"></text></g><g><title>core::ptr::read (1 samples, 0.14%)</title><rect x="74.8982%" y="229" width="0.1357%" height="15" fill="rgb(222,35,25)" fg:x="552" fg:w="1"/><text x="75.1482%" y="239.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_err (1 samples, 0.14%)</title><rect x="75.0339%" y="229" width="0.1357%" height="15" fill="rgb(207,92,16)" fg:x="553" fg:w="1"/><text x="75.2839%" y="239.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_ok (1 samples, 0.14%)</title><rect x="75.0339%" y="213" width="0.1357%" height="15" fill="rgb(216,59,51)" fg:x="553" fg:w="1"/><text x="75.2839%" y="223.50"></text></g><g><title>std::sys::pal::unix::futex::futex_wait (4 samples, 0.54%)</title><rect x="75.3053%" y="213" width="0.5427%" height="15" fill="rgb(213,80,28)" fg:x="555" fg:w="4"/><text x="75.5553%" y="223.50"></text></g><g><title>syscall (4 samples, 0.54%)</title><rect x="75.3053%" y="197" width="0.5427%" height="15" fill="rgb(220,93,7)" fg:x="555" fg:w="4"/><text x="75.5553%" y="207.50"></text></g><g><title>[unknown] (4 samples, 0.54%)</title><rect x="75.3053%" y="181" width="0.5427%" height="15" fill="rgb(225,24,44)" fg:x="555" fg:w="4"/><text x="75.5553%" y="191.50"></text></g><g><title>[unknown] (3 samples, 0.41%)</title><rect x="75.4410%" y="165" width="0.4071%" height="15" fill="rgb(243,74,40)" fg:x="556" fg:w="3"/><text x="75.6910%" y="175.50"></text></g><g><title>[unknown] (3 samples, 0.41%)</title><rect x="75.4410%" y="149" width="0.4071%" height="15" fill="rgb(228,39,7)" fg:x="556" fg:w="3"/><text x="75.6910%" y="159.50"></text></g><g><title>[unknown] (3 samples, 0.41%)</title><rect x="75.4410%" y="133" width="0.4071%" height="15" fill="rgb(227,79,8)" fg:x="556" fg:w="3"/><text x="75.6910%" y="143.50"></text></g><g><title>[unknown] (3 samples, 0.41%)</title><rect x="75.4410%" y="117" width="0.4071%" height="15" fill="rgb(236,58,11)" fg:x="556" fg:w="3"/><text x="75.6910%" y="127.50"></text></g><g><title>[unknown] (3 samples, 0.41%)</title><rect x="75.4410%" y="101" width="0.4071%" height="15" fill="rgb(249,63,35)" fg:x="556" fg:w="3"/><text x="75.6910%" y="111.50"></text></g><g><title>[unknown] (3 samples, 0.41%)</title><rect x="75.4410%" y="85" width="0.4071%" height="15" fill="rgb(252,114,16)" fg:x="556" fg:w="3"/><text x="75.6910%" y="95.50"></text></g><g><title>[unknown] (3 samples, 0.41%)</title><rect x="75.4410%" y="69" width="0.4071%" height="15" fill="rgb(254,151,24)" fg:x="556" fg:w="3"/><text x="75.6910%" y="79.50"></text></g><g><title>[unknown] (3 samples, 0.41%)</title><rect x="75.4410%" y="53" width="0.4071%" height="15" fill="rgb(253,54,39)" fg:x="556" fg:w="3"/><text x="75.6910%" y="63.50"></text></g><g><title>[unknown] (3 samples, 0.41%)</title><rect x="75.4410%" y="37" width="0.4071%" height="15" fill="rgb(243,25,45)" fg:x="556" fg:w="3"/><text x="75.6910%" y="47.50"></text></g><g><title>&lt;async_executor::CallOnDrop&lt;F&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 1.76%)</title><rect x="74.6269%" y="293" width="1.7639%" height="15" fill="rgb(234,134,9)" fg:x="550" fg:w="13"/><text x="74.8769%" y="303.50"></text></g><g><title>async_executor::Executor::spawn_inner::_{{closure}}::_{{closure}} (13 samples, 1.76%)</title><rect x="74.6269%" y="277" width="1.7639%" height="15" fill="rgb(227,166,31)" fg:x="550" fg:w="13"/><text x="74.8769%" y="287.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (10 samples, 1.36%)</title><rect x="75.0339%" y="261" width="1.3569%" height="15" fill="rgb(245,143,41)" fg:x="553" fg:w="10"/><text x="75.2839%" y="271.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (10 samples, 1.36%)</title><rect x="75.0339%" y="245" width="1.3569%" height="15" fill="rgb(238,181,32)" fg:x="553" fg:w="10"/><text x="75.2839%" y="255.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock_contended (9 samples, 1.22%)</title><rect x="75.1696%" y="229" width="1.2212%" height="15" fill="rgb(224,113,18)" fg:x="554" fg:w="9"/><text x="75.4196%" y="239.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::spin (4 samples, 0.54%)</title><rect x="75.8480%" y="213" width="0.5427%" height="15" fill="rgb(240,229,28)" fg:x="559" fg:w="4"/><text x="76.0980%" y="223.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (1 samples, 0.14%)</title><rect x="76.2551%" y="197" width="0.1357%" height="15" fill="rgb(250,185,3)" fg:x="562" fg:w="1"/><text x="76.5051%" y="207.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.14%)</title><rect x="76.2551%" y="181" width="0.1357%" height="15" fill="rgb(212,59,25)" fg:x="562" fg:w="1"/><text x="76.5051%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_executor::Executor::spawn_inner&lt;(),julia::generate_image_buffer::{{closure}}&gt;::{{closure}}::{{closure}}&gt; (1 samples, 0.14%)</title><rect x="76.3908%" y="293" width="0.1357%" height="15" fill="rgb(221,87,20)" fg:x="563" fg:w="1"/><text x="76.6408%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;async_executor::State&gt;&gt; (1 samples, 0.14%)</title><rect x="76.3908%" y="277" width="0.1357%" height="15" fill="rgb(213,74,28)" fg:x="563" fg:w="1"/><text x="76.6408%" y="287.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.14%)</title><rect x="76.3908%" y="261" width="0.1357%" height="15" fill="rgb(224,132,34)" fg:x="563" fg:w="1"/><text x="76.6408%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_executor::CallOnDrop&lt;async_executor::Executor::spawn_inner&lt;(),julia::generate_image_buffer::{{closure}}&gt;::{{closure}}::{{closure}}&gt;&gt; (18 samples, 2.44%)</title><rect x="74.6269%" y="309" width="2.4423%" height="15" fill="rgb(222,101,24)" fg:x="550" fg:w="18"/><text x="74.8769%" y="319.50">co..</text></g><g><title>syscall (4 samples, 0.54%)</title><rect x="76.5265%" y="293" width="0.5427%" height="15" fill="rgb(254,142,4)" fg:x="564" fg:w="4"/><text x="76.7765%" y="303.50"></text></g><g><title>[unknown] (4 samples, 0.54%)</title><rect x="76.5265%" y="277" width="0.5427%" height="15" fill="rgb(230,229,49)" fg:x="564" fg:w="4"/><text x="76.7765%" y="287.50"></text></g><g><title>[unknown] (4 samples, 0.54%)</title><rect x="76.5265%" y="261" width="0.5427%" height="15" fill="rgb(238,70,47)" fg:x="564" fg:w="4"/><text x="76.7765%" y="271.50"></text></g><g><title>[unknown] (4 samples, 0.54%)</title><rect x="76.5265%" y="245" width="0.5427%" height="15" fill="rgb(231,160,17)" fg:x="564" fg:w="4"/><text x="76.7765%" y="255.50"></text></g><g><title>[unknown] (4 samples, 0.54%)</title><rect x="76.5265%" y="229" width="0.5427%" height="15" fill="rgb(218,68,53)" fg:x="564" fg:w="4"/><text x="76.7765%" y="239.50"></text></g><g><title>[unknown] (4 samples, 0.54%)</title><rect x="76.5265%" y="213" width="0.5427%" height="15" fill="rgb(236,111,10)" fg:x="564" fg:w="4"/><text x="76.7765%" y="223.50"></text></g><g><title>[unknown] (3 samples, 0.41%)</title><rect x="76.6621%" y="197" width="0.4071%" height="15" fill="rgb(224,34,41)" fg:x="565" fg:w="3"/><text x="76.9121%" y="207.50"></text></g><g><title>[unknown] (3 samples, 0.41%)</title><rect x="76.6621%" y="181" width="0.4071%" height="15" fill="rgb(241,118,19)" fg:x="565" fg:w="3"/><text x="76.9121%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;std::sync::mutex::Mutex&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;image::color::Rgb&lt;u8&gt;&gt;&gt;&gt;&gt;&gt; (2 samples, 0.27%)</title><rect x="77.0692%" y="293" width="0.2714%" height="15" fill="rgb(238,129,25)" fg:x="568" fg:w="2"/><text x="77.3192%" y="303.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.27%)</title><rect x="77.0692%" y="277" width="0.2714%" height="15" fill="rgb(238,22,31)" fg:x="568" fg:w="2"/><text x="77.3192%" y="287.50"></text></g><g><title>&lt;num_complex::Complex&lt;T&gt; as core::ops::arith::Mul&gt;::mul (2 samples, 0.27%)</title><rect x="77.6119%" y="277" width="0.2714%" height="15" fill="rgb(222,174,48)" fg:x="572" fg:w="2"/><text x="77.8619%" y="287.50"></text></g><g><title>&lt;f64 as core::ops::arith::Sub&gt;::sub (2 samples, 0.27%)</title><rect x="77.6119%" y="261" width="0.2714%" height="15" fill="rgb(206,152,40)" fg:x="572" fg:w="2"/><text x="77.8619%" y="271.50"></text></g><g><title>num_complex::Complex&lt;T&gt;::norm (3 samples, 0.41%)</title><rect x="77.8833%" y="277" width="0.4071%" height="15" fill="rgb(218,99,54)" fg:x="574" fg:w="3"/><text x="78.1333%" y="287.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::hypot (3 samples, 0.41%)</title><rect x="77.8833%" y="261" width="0.4071%" height="15" fill="rgb(220,174,26)" fg:x="574" fg:w="3"/><text x="78.1333%" y="271.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::hypot (3 samples, 0.41%)</title><rect x="77.8833%" y="245" width="0.4071%" height="15" fill="rgb(245,116,9)" fg:x="574" fg:w="3"/><text x="78.1333%" y="255.50"></text></g><g><title>hypot (3 samples, 0.41%)</title><rect x="77.8833%" y="229" width="0.4071%" height="15" fill="rgb(209,72,35)" fg:x="574" fg:w="3"/><text x="78.1333%" y="239.50"></text></g><g><title>async_executor::Executor::run::_{{closure}} (46 samples, 6.24%)</title><rect x="72.1845%" y="501" width="6.2415%" height="15" fill="rgb(226,126,21)" fg:x="532" fg:w="46"/><text x="72.4345%" y="511.50">async_ex..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (46 samples, 6.24%)</title><rect x="72.1845%" y="485" width="6.2415%" height="15" fill="rgb(227,192,1)" fg:x="532" fg:w="46"/><text x="72.4345%" y="495.50">&lt;futures..</text></g><g><title>async_executor::Executor::run::_{{closure}}::_{{closure}} (46 samples, 6.24%)</title><rect x="72.1845%" y="469" width="6.2415%" height="15" fill="rgb(237,180,29)" fg:x="532" fg:w="46"/><text x="72.4345%" y="479.50">async_ex..</text></g><g><title>async_task::runnable::Runnable&lt;M&gt;::run (33 samples, 4.48%)</title><rect x="73.9484%" y="453" width="4.4776%" height="15" fill="rgb(230,197,35)" fg:x="545" fg:w="33"/><text x="74.1984%" y="463.50">async..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S,M&gt;::run (32 samples, 4.34%)</title><rect x="74.0841%" y="437" width="4.3419%" height="15" fill="rgb(246,193,31)" fg:x="546" fg:w="32"/><text x="74.3341%" y="447.50">async..</text></g><g><title>std::panic::catch_unwind (29 samples, 3.93%)</title><rect x="74.4912%" y="421" width="3.9349%" height="15" fill="rgb(241,36,4)" fg:x="549" fg:w="29"/><text x="74.7412%" y="431.50">std:..</text></g><g><title>std::panicking::try (29 samples, 3.93%)</title><rect x="74.4912%" y="405" width="3.9349%" height="15" fill="rgb(241,130,17)" fg:x="549" fg:w="29"/><text x="74.7412%" y="415.50">std:..</text></g><g><title>std::panicking::try::do_call (29 samples, 3.93%)</title><rect x="74.4912%" y="389" width="3.9349%" height="15" fill="rgb(206,137,32)" fg:x="549" fg:w="29"/><text x="74.7412%" y="399.50">std:..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (29 samples, 3.93%)</title><rect x="74.4912%" y="373" width="3.9349%" height="15" fill="rgb(237,228,51)" fg:x="549" fg:w="29"/><text x="74.7412%" y="383.50">&lt;cor..</text></g><g><title>core::ops::function::FnOnce::call_once (29 samples, 3.93%)</title><rect x="74.4912%" y="357" width="3.9349%" height="15" fill="rgb(243,6,42)" fg:x="549" fg:w="29"/><text x="74.7412%" y="367.50">core..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S,M&gt;::run::_{{closure}} (29 samples, 3.93%)</title><rect x="74.4912%" y="341" width="3.9349%" height="15" fill="rgb(251,74,28)" fg:x="549" fg:w="29"/><text x="74.7412%" y="351.50">asyn..</text></g><g><title>async_executor::Executor::spawn_inner::_{{closure}} (29 samples, 3.93%)</title><rect x="74.4912%" y="325" width="3.9349%" height="15" fill="rgb(218,20,49)" fg:x="549" fg:w="29"/><text x="74.7412%" y="335.50">asyn..</text></g><g><title>julia::generate_image_buffer::_{{closure}} (10 samples, 1.36%)</title><rect x="77.0692%" y="309" width="1.3569%" height="15" fill="rgb(238,28,14)" fg:x="568" fg:w="10"/><text x="77.3192%" y="319.50"></text></g><g><title>julia::color_generator::_{{closure}} (8 samples, 1.09%)</title><rect x="77.3406%" y="293" width="1.0855%" height="15" fill="rgb(229,40,46)" fg:x="570" fg:w="8"/><text x="77.5906%" y="303.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::powf (1 samples, 0.14%)</title><rect x="78.2904%" y="277" width="0.1357%" height="15" fill="rgb(244,195,20)" fg:x="577" fg:w="1"/><text x="78.5404%" y="287.50"></text></g><g><title>pow (1 samples, 0.14%)</title><rect x="78.2904%" y="261" width="0.1357%" height="15" fill="rgb(253,56,35)" fg:x="577" fg:w="1"/><text x="78.5404%" y="271.50"></text></g><g><title>smol-6 (47 samples, 6.38%)</title><rect x="72.1845%" y="869" width="6.3772%" height="15" fill="rgb(210,149,44)" fg:x="532" fg:w="47"/><text x="72.4345%" y="879.50">smol-6</text></g><g><title>clone3 (47 samples, 6.38%)</title><rect x="72.1845%" y="853" width="6.3772%" height="15" fill="rgb(240,135,12)" fg:x="532" fg:w="47"/><text x="72.4345%" y="863.50">clone3</text></g><g><title>start_thread (47 samples, 6.38%)</title><rect x="72.1845%" y="837" width="6.3772%" height="15" fill="rgb(251,24,50)" fg:x="532" fg:w="47"/><text x="72.4345%" y="847.50">start_th..</text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (47 samples, 6.38%)</title><rect x="72.1845%" y="821" width="6.3772%" height="15" fill="rgb(243,200,47)" fg:x="532" fg:w="47"/><text x="72.4345%" y="831.50">std::sys..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (47 samples, 6.38%)</title><rect x="72.1845%" y="805" width="6.3772%" height="15" fill="rgb(224,166,26)" fg:x="532" fg:w="47"/><text x="72.4345%" y="815.50">&lt;alloc::..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (47 samples, 6.38%)</title><rect x="72.1845%" y="789" width="6.3772%" height="15" fill="rgb(233,0,47)" fg:x="532" fg:w="47"/><text x="72.4345%" y="799.50">&lt;alloc::..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (47 samples, 6.38%)</title><rect x="72.1845%" y="773" width="6.3772%" height="15" fill="rgb(253,80,5)" fg:x="532" fg:w="47"/><text x="72.4345%" y="783.50">core::op..</text></g><g><title>std::thread::Builder::spawn_unchecked_::_{{closure}} (47 samples, 6.38%)</title><rect x="72.1845%" y="757" width="6.3772%" height="15" fill="rgb(214,133,25)" fg:x="532" fg:w="47"/><text x="72.4345%" y="767.50">std::thr..</text></g><g><title>std::panic::catch_unwind (47 samples, 6.38%)</title><rect x="72.1845%" y="741" width="6.3772%" height="15" fill="rgb(209,27,14)" fg:x="532" fg:w="47"/><text x="72.4345%" y="751.50">std::pan..</text></g><g><title>std::panicking::try (47 samples, 6.38%)</title><rect x="72.1845%" y="725" width="6.3772%" height="15" fill="rgb(219,102,51)" fg:x="532" fg:w="47"/><text x="72.4345%" y="735.50">std::pan..</text></g><g><title>std::panicking::try::do_call (47 samples, 6.38%)</title><rect x="72.1845%" y="709" width="6.3772%" height="15" fill="rgb(237,18,16)" fg:x="532" fg:w="47"/><text x="72.4345%" y="719.50">std::pan..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (47 samples, 6.38%)</title><rect x="72.1845%" y="693" width="6.3772%" height="15" fill="rgb(241,85,17)" fg:x="532" fg:w="47"/><text x="72.4345%" y="703.50">&lt;core::p..</text></g><g><title>std::thread::Builder::spawn_unchecked_::_{{closure}}::_{{closure}} (47 samples, 6.38%)</title><rect x="72.1845%" y="677" width="6.3772%" height="15" fill="rgb(236,90,42)" fg:x="532" fg:w="47"/><text x="72.4345%" y="687.50">std::thr..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (47 samples, 6.38%)</title><rect x="72.1845%" y="661" width="6.3772%" height="15" fill="rgb(249,57,21)" fg:x="532" fg:w="47"/><text x="72.4345%" y="671.50">std::sys..</text></g><g><title>smol::spawn::spawn::global::_{{closure}}::_{{closure}} (47 samples, 6.38%)</title><rect x="72.1845%" y="645" width="6.3772%" height="15" fill="rgb(243,12,36)" fg:x="532" fg:w="47"/><text x="72.4345%" y="655.50">smol::sp..</text></g><g><title>std::panic::catch_unwind (47 samples, 6.38%)</title><rect x="72.1845%" y="629" width="6.3772%" height="15" fill="rgb(253,128,47)" fg:x="532" fg:w="47"/><text x="72.4345%" y="639.50">std::pan..</text></g><g><title>std::panicking::try (47 samples, 6.38%)</title><rect x="72.1845%" y="613" width="6.3772%" height="15" fill="rgb(207,33,20)" fg:x="532" fg:w="47"/><text x="72.4345%" y="623.50">std::pan..</text></g><g><title>std::panicking::try::do_call (47 samples, 6.38%)</title><rect x="72.1845%" y="597" width="6.3772%" height="15" fill="rgb(233,215,35)" fg:x="532" fg:w="47"/><text x="72.4345%" y="607.50">std::pan..</text></g><g><title>smol::spawn::spawn::global::_{{closure}}::_{{closure}}::_{{closure}} (47 samples, 6.38%)</title><rect x="72.1845%" y="581" width="6.3772%" height="15" fill="rgb(249,188,52)" fg:x="532" fg:w="47"/><text x="72.4345%" y="591.50">smol::sp..</text></g><g><title>async_io::driver::block_on (47 samples, 6.38%)</title><rect x="72.1845%" y="565" width="6.3772%" height="15" fill="rgb(225,12,32)" fg:x="532" fg:w="47"/><text x="72.4345%" y="575.50">async_io..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (47 samples, 6.38%)</title><rect x="72.1845%" y="549" width="6.3772%" height="15" fill="rgb(247,98,14)" fg:x="532" fg:w="47"/><text x="72.4345%" y="559.50">std::thr..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (47 samples, 6.38%)</title><rect x="72.1845%" y="533" width="6.3772%" height="15" fill="rgb(247,219,48)" fg:x="532" fg:w="47"/><text x="72.4345%" y="543.50">std::thr..</text></g><g><title>async_io::driver::block_on::_{{closure}} (47 samples, 6.38%)</title><rect x="72.1845%" y="517" width="6.3772%" height="15" fill="rgb(253,60,48)" fg:x="532" fg:w="47"/><text x="72.4345%" y="527.50">async_io..</text></g><g><title>parking::Inner::park (1 samples, 0.14%)</title><rect x="78.4261%" y="501" width="0.1357%" height="15" fill="rgb(245,15,52)" fg:x="578" fg:w="1"/><text x="78.6761%" y="511.50"></text></g><g><title>std::sync::condvar::Condvar::wait (1 samples, 0.14%)</title><rect x="78.4261%" y="485" width="0.1357%" height="15" fill="rgb(220,133,28)" fg:x="578" fg:w="1"/><text x="78.6761%" y="495.50"></text></g><g><title>std::sys::sync::condvar::futex::Condvar::wait (1 samples, 0.14%)</title><rect x="78.4261%" y="469" width="0.1357%" height="15" fill="rgb(217,180,4)" fg:x="578" fg:w="1"/><text x="78.6761%" y="479.50"></text></g><g><title>std::sys::sync::condvar::futex::Condvar::wait_optional_timeout (1 samples, 0.14%)</title><rect x="78.4261%" y="453" width="0.1357%" height="15" fill="rgb(251,24,1)" fg:x="578" fg:w="1"/><text x="78.6761%" y="463.50"></text></g><g><title>std::sys::pal::unix::futex::futex_wait (1 samples, 0.14%)</title><rect x="78.4261%" y="437" width="0.1357%" height="15" fill="rgb(212,185,49)" fg:x="578" fg:w="1"/><text x="78.6761%" y="447.50"></text></g><g><title>syscall (1 samples, 0.14%)</title><rect x="78.4261%" y="421" width="0.1357%" height="15" fill="rgb(215,175,22)" fg:x="578" fg:w="1"/><text x="78.6761%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="78.4261%" y="405" width="0.1357%" height="15" fill="rgb(250,205,14)" fg:x="578" fg:w="1"/><text x="78.6761%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="78.4261%" y="389" width="0.1357%" height="15" fill="rgb(225,211,22)" fg:x="578" fg:w="1"/><text x="78.6761%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="78.4261%" y="373" width="0.1357%" height="15" fill="rgb(251,179,42)" fg:x="578" fg:w="1"/><text x="78.6761%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="78.4261%" y="357" width="0.1357%" height="15" fill="rgb(208,216,51)" fg:x="578" fg:w="1"/><text x="78.6761%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="78.4261%" y="341" width="0.1357%" height="15" fill="rgb(235,36,11)" fg:x="578" fg:w="1"/><text x="78.6761%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="78.4261%" y="325" width="0.1357%" height="15" fill="rgb(213,189,28)" fg:x="578" fg:w="1"/><text x="78.6761%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="78.4261%" y="309" width="0.1357%" height="15" fill="rgb(227,203,42)" fg:x="578" fg:w="1"/><text x="78.6761%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="78.4261%" y="293" width="0.1357%" height="15" fill="rgb(244,72,36)" fg:x="578" fg:w="1"/><text x="78.6761%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="78.4261%" y="277" width="0.1357%" height="15" fill="rgb(213,53,17)" fg:x="578" fg:w="1"/><text x="78.6761%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="78.5617%" y="853" width="0.1357%" height="15" fill="rgb(207,167,3)" fg:x="579" fg:w="1"/><text x="78.8117%" y="863.50"></text></g><g><title>async_executor::steal (2 samples, 0.27%)</title><rect x="78.6974%" y="373" width="0.2714%" height="15" fill="rgb(216,98,30)" fg:x="580" fg:w="2"/><text x="78.9474%" y="383.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (2 samples, 0.27%)</title><rect x="78.6974%" y="357" width="0.2714%" height="15" fill="rgb(236,123,15)" fg:x="580" fg:w="2"/><text x="78.9474%" y="367.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (2 samples, 0.27%)</title><rect x="78.6974%" y="341" width="0.2714%" height="15" fill="rgb(248,81,50)" fg:x="580" fg:w="2"/><text x="78.9474%" y="351.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (3 samples, 0.41%)</title><rect x="78.9688%" y="373" width="0.4071%" height="15" fill="rgb(214,120,4)" fg:x="582" fg:w="3"/><text x="79.2188%" y="383.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (2 samples, 0.27%)</title><rect x="79.1045%" y="357" width="0.2714%" height="15" fill="rgb(208,179,34)" fg:x="583" fg:w="2"/><text x="79.3545%" y="367.50"></text></g><g><title>concurrent_queue::unbounded::Block&lt;T&gt;::destroy (1 samples, 0.14%)</title><rect x="79.2402%" y="341" width="0.1357%" height="15" fill="rgb(227,140,7)" fg:x="584" fg:w="1"/><text x="79.4902%" y="351.50"></text></g><g><title>core::mem::drop (1 samples, 0.14%)</title><rect x="79.2402%" y="325" width="0.1357%" height="15" fill="rgb(214,22,6)" fg:x="584" fg:w="1"/><text x="79.4902%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;concurrent_queue::unbounded::Block&lt;async_task::runnable::Runnable&gt;&gt;&gt; (1 samples, 0.14%)</title><rect x="79.2402%" y="309" width="0.1357%" height="15" fill="rgb(207,137,27)" fg:x="584" fg:w="1"/><text x="79.4902%" y="319.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.14%)</title><rect x="79.2402%" y="293" width="0.1357%" height="15" fill="rgb(210,8,46)" fg:x="584" fg:w="1"/><text x="79.4902%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.14%)</title><rect x="79.2402%" y="277" width="0.1357%" height="15" fill="rgb(240,16,54)" fg:x="584" fg:w="1"/><text x="79.4902%" y="287.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.14%)</title><rect x="79.2402%" y="261" width="0.1357%" height="15" fill="rgb(211,209,29)" fg:x="584" fg:w="1"/><text x="79.4902%" y="271.50"></text></g><g><title>cfree@GLIBC_2.2.5 (1 samples, 0.14%)</title><rect x="79.2402%" y="245" width="0.1357%" height="15" fill="rgb(226,228,24)" fg:x="584" fg:w="1"/><text x="79.4902%" y="255.50"></text></g><g><title>__lll_lock_wake_private (1 samples, 0.14%)</title><rect x="79.2402%" y="229" width="0.1357%" height="15" fill="rgb(222,84,9)" fg:x="584" fg:w="1"/><text x="79.4902%" y="239.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="79.2402%" y="213" width="0.1357%" height="15" fill="rgb(234,203,30)" fg:x="584" fg:w="1"/><text x="79.4902%" y="223.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="79.2402%" y="197" width="0.1357%" height="15" fill="rgb(238,109,14)" fg:x="584" fg:w="1"/><text x="79.4902%" y="207.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="79.2402%" y="181" width="0.1357%" height="15" fill="rgb(233,206,34)" fg:x="584" fg:w="1"/><text x="79.4902%" y="191.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="79.2402%" y="165" width="0.1357%" height="15" fill="rgb(220,167,47)" fg:x="584" fg:w="1"/><text x="79.4902%" y="175.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="79.2402%" y="149" width="0.1357%" height="15" fill="rgb(238,105,10)" fg:x="584" fg:w="1"/><text x="79.4902%" y="159.50"></text></g><g><title>async_executor::Runner::runnable::_{{closure}}::_{{closure}} (6 samples, 0.81%)</title><rect x="78.6974%" y="389" width="0.8141%" height="15" fill="rgb(213,227,17)" fg:x="580" fg:w="6"/><text x="78.9474%" y="399.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (1 samples, 0.14%)</title><rect x="79.3758%" y="373" width="0.1357%" height="15" fill="rgb(217,132,38)" fg:x="585" fg:w="1"/><text x="79.6258%" y="383.50"></text></g><g><title>std::sys::sync::rwlock::futex::RwLock::read (1 samples, 0.14%)</title><rect x="79.3758%" y="357" width="0.1357%" height="15" fill="rgb(242,146,4)" fg:x="585" fg:w="1"/><text x="79.6258%" y="367.50"></text></g><g><title>std::sys::sync::rwlock::futex::is_read_lockable (1 samples, 0.14%)</title><rect x="79.3758%" y="341" width="0.1357%" height="15" fill="rgb(212,61,9)" fg:x="585" fg:w="1"/><text x="79.6258%" y="351.50"></text></g><g><title>async_executor::State::notify (1 samples, 0.14%)</title><rect x="79.5115%" y="389" width="0.1357%" height="15" fill="rgb(247,126,22)" fg:x="586" fg:w="1"/><text x="79.7615%" y="399.50"></text></g><g><title>core::task::wake::Waker::wake (1 samples, 0.14%)</title><rect x="79.5115%" y="373" width="0.1357%" height="15" fill="rgb(220,196,2)" fg:x="586" fg:w="1"/><text x="79.7615%" y="383.50"></text></g><g><title>&lt;async_io::driver::block_on::BlockOnWaker as alloc::task::Wake&gt;::wake (1 samples, 0.14%)</title><rect x="79.5115%" y="357" width="0.1357%" height="15" fill="rgb(208,46,4)" fg:x="586" fg:w="1"/><text x="79.7615%" y="367.50"></text></g><g><title>&lt;async_io::driver::block_on::BlockOnWaker as alloc::task::Wake&gt;::wake_by_ref (1 samples, 0.14%)</title><rect x="79.5115%" y="341" width="0.1357%" height="15" fill="rgb(252,104,46)" fg:x="586" fg:w="1"/><text x="79.7615%" y="351.50"></text></g><g><title>parking::Inner::unpark (1 samples, 0.14%)</title><rect x="79.5115%" y="325" width="0.1357%" height="15" fill="rgb(237,152,48)" fg:x="586" fg:w="1"/><text x="79.7615%" y="335.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (1 samples, 0.14%)</title><rect x="79.5115%" y="309" width="0.1357%" height="15" fill="rgb(221,59,37)" fg:x="586" fg:w="1"/><text x="79.7615%" y="319.50"></text></g><g><title>core::sync::atomic::atomic_swap (1 samples, 0.14%)</title><rect x="79.5115%" y="293" width="0.1357%" height="15" fill="rgb(209,202,51)" fg:x="586" fg:w="1"/><text x="79.7615%" y="303.50"></text></g><g><title>async_executor::Ticker::sleep (1 samples, 0.14%)</title><rect x="79.6472%" y="389" width="0.1357%" height="15" fill="rgb(228,81,30)" fg:x="587" fg:w="1"/><text x="79.8972%" y="399.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (1 samples, 0.14%)</title><rect x="79.6472%" y="373" width="0.1357%" height="15" fill="rgb(227,42,39)" fg:x="587" fg:w="1"/><text x="79.8972%" y="383.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (1 samples, 0.14%)</title><rect x="79.6472%" y="357" width="0.1357%" height="15" fill="rgb(221,26,2)" fg:x="587" fg:w="1"/><text x="79.8972%" y="367.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock_contended (1 samples, 0.14%)</title><rect x="79.6472%" y="341" width="0.1357%" height="15" fill="rgb(254,61,31)" fg:x="587" fg:w="1"/><text x="79.8972%" y="351.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::spin (1 samples, 0.14%)</title><rect x="79.6472%" y="325" width="0.1357%" height="15" fill="rgb(222,173,38)" fg:x="587" fg:w="1"/><text x="79.8972%" y="335.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (1 samples, 0.14%)</title><rect x="79.6472%" y="309" width="0.1357%" height="15" fill="rgb(218,50,12)" fg:x="587" fg:w="1"/><text x="79.8972%" y="319.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.14%)</title><rect x="79.6472%" y="293" width="0.1357%" height="15" fill="rgb(223,88,40)" fg:x="587" fg:w="1"/><text x="79.8972%" y="303.50"></text></g><g><title>async_executor::Runner::runnable::_{{closure}} (9 samples, 1.22%)</title><rect x="78.6974%" y="453" width="1.2212%" height="15" fill="rgb(237,54,19)" fg:x="580" fg:w="9"/><text x="78.9474%" y="463.50"></text></g><g><title>async_executor::Ticker::runnable_with::_{{closure}} (9 samples, 1.22%)</title><rect x="78.6974%" y="437" width="1.2212%" height="15" fill="rgb(251,129,25)" fg:x="580" fg:w="9"/><text x="78.9474%" y="447.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (9 samples, 1.22%)</title><rect x="78.6974%" y="421" width="1.2212%" height="15" fill="rgb(238,97,19)" fg:x="580" fg:w="9"/><text x="78.9474%" y="431.50"></text></g><g><title>async_executor::Ticker::runnable_with::_{{closure}}::_{{closure}} (9 samples, 1.22%)</title><rect x="78.6974%" y="405" width="1.2212%" height="15" fill="rgb(240,169,18)" fg:x="580" fg:w="9"/><text x="78.9474%" y="415.50"></text></g><g><title>async_executor::Ticker::wake (1 samples, 0.14%)</title><rect x="79.7829%" y="389" width="0.1357%" height="15" fill="rgb(230,187,49)" fg:x="588" fg:w="1"/><text x="80.0329%" y="399.50"></text></g><g><title>async_executor::Sleepers::remove (1 samples, 0.14%)</title><rect x="79.7829%" y="373" width="0.1357%" height="15" fill="rgb(209,44,26)" fg:x="588" fg:w="1"/><text x="80.0329%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;slab::Slab&lt;core::task::wake::Waker&gt;&gt;&gt; (4 samples, 0.54%)</title><rect x="79.9186%" y="261" width="0.5427%" height="15" fill="rgb(244,0,6)" fg:x="589" fg:w="4"/><text x="80.1686%" y="271.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.54%)</title><rect x="79.9186%" y="245" width="0.5427%" height="15" fill="rgb(248,18,21)" fg:x="589" fg:w="4"/><text x="80.1686%" y="255.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (4 samples, 0.54%)</title><rect x="79.9186%" y="229" width="0.5427%" height="15" fill="rgb(245,180,19)" fg:x="589" fg:w="4"/><text x="80.1686%" y="239.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (2 samples, 0.27%)</title><rect x="80.4613%" y="245" width="0.2714%" height="15" fill="rgb(252,118,36)" fg:x="593" fg:w="2"/><text x="80.7113%" y="255.50"></text></g><g><title>std::sync::poison::Flag::guard (2 samples, 0.27%)</title><rect x="80.4613%" y="229" width="0.2714%" height="15" fill="rgb(210,224,19)" fg:x="593" fg:w="2"/><text x="80.7113%" y="239.50"></text></g><g><title>std::thread::panicking (1 samples, 0.14%)</title><rect x="80.5970%" y="213" width="0.1357%" height="15" fill="rgb(218,30,24)" fg:x="594" fg:w="1"/><text x="80.8470%" y="223.50"></text></g><g><title>std::panicking::panicking (1 samples, 0.14%)</title><rect x="80.5970%" y="197" width="0.1357%" height="15" fill="rgb(219,75,50)" fg:x="594" fg:w="1"/><text x="80.8470%" y="207.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (1 samples, 0.14%)</title><rect x="80.5970%" y="181" width="0.1357%" height="15" fill="rgb(234,72,50)" fg:x="594" fg:w="1"/><text x="80.8470%" y="191.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.14%)</title><rect x="80.5970%" y="165" width="0.1357%" height="15" fill="rgb(219,100,48)" fg:x="594" fg:w="1"/><text x="80.8470%" y="175.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.14%)</title><rect x="80.5970%" y="149" width="0.1357%" height="15" fill="rgb(253,5,41)" fg:x="594" fg:w="1"/><text x="80.8470%" y="159.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_err (2 samples, 0.27%)</title><rect x="80.7327%" y="229" width="0.2714%" height="15" fill="rgb(247,181,11)" fg:x="595" fg:w="2"/><text x="80.9827%" y="239.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_ok (2 samples, 0.27%)</title><rect x="80.7327%" y="213" width="0.2714%" height="15" fill="rgb(222,223,25)" fg:x="595" fg:w="2"/><text x="80.9827%" y="223.50"></text></g><g><title>std::sys::pal::unix::futex::futex_wait (4 samples, 0.54%)</title><rect x="81.0041%" y="213" width="0.5427%" height="15" fill="rgb(214,198,28)" fg:x="597" fg:w="4"/><text x="81.2541%" y="223.50"></text></g><g><title>syscall (4 samples, 0.54%)</title><rect x="81.0041%" y="197" width="0.5427%" height="15" fill="rgb(230,46,43)" fg:x="597" fg:w="4"/><text x="81.2541%" y="207.50"></text></g><g><title>[unknown] (4 samples, 0.54%)</title><rect x="81.0041%" y="181" width="0.5427%" height="15" fill="rgb(233,65,53)" fg:x="597" fg:w="4"/><text x="81.2541%" y="191.50"></text></g><g><title>[unknown] (4 samples, 0.54%)</title><rect x="81.0041%" y="165" width="0.5427%" height="15" fill="rgb(221,121,27)" fg:x="597" fg:w="4"/><text x="81.2541%" y="175.50"></text></g><g><title>[unknown] (3 samples, 0.41%)</title><rect x="81.1398%" y="149" width="0.4071%" height="15" fill="rgb(247,70,47)" fg:x="598" fg:w="3"/><text x="81.3898%" y="159.50"></text></g><g><title>[unknown] (2 samples, 0.27%)</title><rect x="81.2754%" y="133" width="0.2714%" height="15" fill="rgb(228,85,35)" fg:x="599" fg:w="2"/><text x="81.5254%" y="143.50"></text></g><g><title>[unknown] (2 samples, 0.27%)</title><rect x="81.2754%" y="117" width="0.2714%" height="15" fill="rgb(209,50,18)" fg:x="599" fg:w="2"/><text x="81.5254%" y="127.50"></text></g><g><title>[unknown] (2 samples, 0.27%)</title><rect x="81.2754%" y="101" width="0.2714%" height="15" fill="rgb(250,19,35)" fg:x="599" fg:w="2"/><text x="81.5254%" y="111.50"></text></g><g><title>[unknown] (2 samples, 0.27%)</title><rect x="81.2754%" y="85" width="0.2714%" height="15" fill="rgb(253,107,29)" fg:x="599" fg:w="2"/><text x="81.5254%" y="95.50"></text></g><g><title>[unknown] (2 samples, 0.27%)</title><rect x="81.2754%" y="69" width="0.2714%" height="15" fill="rgb(252,179,29)" fg:x="599" fg:w="2"/><text x="81.5254%" y="79.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="81.4111%" y="53" width="0.1357%" height="15" fill="rgb(238,194,6)" fg:x="600" fg:w="1"/><text x="81.6611%" y="63.50"></text></g><g><title>&lt;async_executor::CallOnDrop&lt;F&gt; as core::ops::drop::Drop&gt;::drop (26 samples, 3.53%)</title><rect x="79.9186%" y="293" width="3.5278%" height="15" fill="rgb(238,164,29)" fg:x="589" fg:w="26"/><text x="80.1686%" y="303.50">&lt;as..</text></g><g><title>async_executor::Executor::spawn_inner::_{{closure}}::_{{closure}} (26 samples, 3.53%)</title><rect x="79.9186%" y="277" width="3.5278%" height="15" fill="rgb(224,25,9)" fg:x="589" fg:w="26"/><text x="80.1686%" y="287.50">asy..</text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (22 samples, 2.99%)</title><rect x="80.4613%" y="261" width="2.9851%" height="15" fill="rgb(244,153,23)" fg:x="593" fg:w="22"/><text x="80.7113%" y="271.50">std..</text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (20 samples, 2.71%)</title><rect x="80.7327%" y="245" width="2.7137%" height="15" fill="rgb(212,203,14)" fg:x="595" fg:w="20"/><text x="80.9827%" y="255.50">st..</text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock_contended (18 samples, 2.44%)</title><rect x="81.0041%" y="229" width="2.4423%" height="15" fill="rgb(220,164,20)" fg:x="597" fg:w="18"/><text x="81.2541%" y="239.50">st..</text></g><g><title>std::sys::sync::mutex::futex::Mutex::spin (14 samples, 1.90%)</title><rect x="81.5468%" y="213" width="1.8996%" height="15" fill="rgb(222,203,48)" fg:x="601" fg:w="14"/><text x="81.7968%" y="223.50">s..</text></g><g><title>core::sync::atomic::AtomicU32::load (2 samples, 0.27%)</title><rect x="83.1750%" y="197" width="0.2714%" height="15" fill="rgb(215,159,22)" fg:x="613" fg:w="2"/><text x="83.4250%" y="207.50"></text></g><g><title>core::sync::atomic::atomic_load (2 samples, 0.27%)</title><rect x="83.1750%" y="181" width="0.2714%" height="15" fill="rgb(216,183,47)" fg:x="613" fg:w="2"/><text x="83.4250%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_executor::CallOnDrop&lt;async_executor::Executor::spawn_inner&lt;(),julia::generate_image_buffer::{{closure}}&gt;::{{closure}}::{{closure}}&gt;&gt; (31 samples, 4.21%)</title><rect x="79.9186%" y="309" width="4.2062%" height="15" fill="rgb(229,195,25)" fg:x="589" fg:w="31"/><text x="80.1686%" y="319.50">core:..</text></g><g><title>syscall (5 samples, 0.68%)</title><rect x="83.4464%" y="293" width="0.6784%" height="15" fill="rgb(224,132,51)" fg:x="615" fg:w="5"/><text x="83.6964%" y="303.50"></text></g><g><title>[unknown] (5 samples, 0.68%)</title><rect x="83.4464%" y="277" width="0.6784%" height="15" fill="rgb(240,63,7)" fg:x="615" fg:w="5"/><text x="83.6964%" y="287.50"></text></g><g><title>[unknown] (5 samples, 0.68%)</title><rect x="83.4464%" y="261" width="0.6784%" height="15" fill="rgb(249,182,41)" fg:x="615" fg:w="5"/><text x="83.6964%" y="271.50"></text></g><g><title>[unknown] (5 samples, 0.68%)</title><rect x="83.4464%" y="245" width="0.6784%" height="15" fill="rgb(243,47,26)" fg:x="615" fg:w="5"/><text x="83.6964%" y="255.50"></text></g><g><title>[unknown] (3 samples, 0.41%)</title><rect x="83.7178%" y="229" width="0.4071%" height="15" fill="rgb(233,48,2)" fg:x="617" fg:w="3"/><text x="83.9678%" y="239.50"></text></g><g><title>[unknown] (3 samples, 0.41%)</title><rect x="83.7178%" y="213" width="0.4071%" height="15" fill="rgb(244,165,34)" fg:x="617" fg:w="3"/><text x="83.9678%" y="223.50"></text></g><g><title>[unknown] (2 samples, 0.27%)</title><rect x="83.8535%" y="197" width="0.2714%" height="15" fill="rgb(207,89,7)" fg:x="618" fg:w="2"/><text x="84.1035%" y="207.50"></text></g><g><title>[unknown] (2 samples, 0.27%)</title><rect x="83.8535%" y="181" width="0.2714%" height="15" fill="rgb(244,117,36)" fg:x="618" fg:w="2"/><text x="84.1035%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;image::color::Rgb&lt;u8&gt;&gt;&gt;&gt;&gt; (1 samples, 0.14%)</title><rect x="84.1248%" y="293" width="0.1357%" height="15" fill="rgb(226,144,34)" fg:x="620" fg:w="1"/><text x="84.3748%" y="303.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.14%)</title><rect x="84.1248%" y="277" width="0.1357%" height="15" fill="rgb(213,23,19)" fg:x="620" fg:w="1"/><text x="84.3748%" y="287.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (1 samples, 0.14%)</title><rect x="84.1248%" y="261" width="0.1357%" height="15" fill="rgb(217,75,12)" fg:x="620" fg:w="1"/><text x="84.3748%" y="271.50"></text></g><g><title>num_complex::Complex&lt;T&gt;::norm (7 samples, 0.95%)</title><rect x="84.2605%" y="277" width="0.9498%" height="15" fill="rgb(224,159,17)" fg:x="621" fg:w="7"/><text x="84.5105%" y="287.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::hypot (7 samples, 0.95%)</title><rect x="84.2605%" y="261" width="0.9498%" height="15" fill="rgb(217,118,1)" fg:x="621" fg:w="7"/><text x="84.5105%" y="271.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::hypot (7 samples, 0.95%)</title><rect x="84.2605%" y="245" width="0.9498%" height="15" fill="rgb(232,180,48)" fg:x="621" fg:w="7"/><text x="84.5105%" y="255.50"></text></g><g><title>hypot (7 samples, 0.95%)</title><rect x="84.2605%" y="229" width="0.9498%" height="15" fill="rgb(230,27,33)" fg:x="621" fg:w="7"/><text x="84.5105%" y="239.50"></text></g><g><title>async_executor::Executor::run::_{{closure}} (51 samples, 6.92%)</title><rect x="78.6974%" y="501" width="6.9199%" height="15" fill="rgb(205,31,21)" fg:x="580" fg:w="51"/><text x="78.9474%" y="511.50">async_exe..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (51 samples, 6.92%)</title><rect x="78.6974%" y="485" width="6.9199%" height="15" fill="rgb(253,59,4)" fg:x="580" fg:w="51"/><text x="78.9474%" y="495.50">&lt;futures_..</text></g><g><title>async_executor::Executor::run::_{{closure}}::_{{closure}} (51 samples, 6.92%)</title><rect x="78.6974%" y="469" width="6.9199%" height="15" fill="rgb(224,201,9)" fg:x="580" fg:w="51"/><text x="78.9474%" y="479.50">async_exe..</text></g><g><title>async_task::runnable::Runnable&lt;M&gt;::run (42 samples, 5.70%)</title><rect x="79.9186%" y="453" width="5.6988%" height="15" fill="rgb(229,206,30)" fg:x="589" fg:w="42"/><text x="80.1686%" y="463.50">async_t..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S,M&gt;::run (42 samples, 5.70%)</title><rect x="79.9186%" y="437" width="5.6988%" height="15" fill="rgb(212,67,47)" fg:x="589" fg:w="42"/><text x="80.1686%" y="447.50">async_t..</text></g><g><title>std::panic::catch_unwind (42 samples, 5.70%)</title><rect x="79.9186%" y="421" width="5.6988%" height="15" fill="rgb(211,96,50)" fg:x="589" fg:w="42"/><text x="80.1686%" y="431.50">std::pa..</text></g><g><title>std::panicking::try (42 samples, 5.70%)</title><rect x="79.9186%" y="405" width="5.6988%" height="15" fill="rgb(252,114,18)" fg:x="589" fg:w="42"/><text x="80.1686%" y="415.50">std::pa..</text></g><g><title>std::panicking::try::do_call (42 samples, 5.70%)</title><rect x="79.9186%" y="389" width="5.6988%" height="15" fill="rgb(223,58,37)" fg:x="589" fg:w="42"/><text x="80.1686%" y="399.50">std::pa..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (42 samples, 5.70%)</title><rect x="79.9186%" y="373" width="5.6988%" height="15" fill="rgb(237,70,4)" fg:x="589" fg:w="42"/><text x="80.1686%" y="383.50">&lt;core::..</text></g><g><title>core::ops::function::FnOnce::call_once (42 samples, 5.70%)</title><rect x="79.9186%" y="357" width="5.6988%" height="15" fill="rgb(244,85,46)" fg:x="589" fg:w="42"/><text x="80.1686%" y="367.50">core::o..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S,M&gt;::run::_{{closure}} (42 samples, 5.70%)</title><rect x="79.9186%" y="341" width="5.6988%" height="15" fill="rgb(223,39,52)" fg:x="589" fg:w="42"/><text x="80.1686%" y="351.50">async_t..</text></g><g><title>async_executor::Executor::spawn_inner::_{{closure}} (42 samples, 5.70%)</title><rect x="79.9186%" y="325" width="5.6988%" height="15" fill="rgb(218,200,14)" fg:x="589" fg:w="42"/><text x="80.1686%" y="335.50">async_e..</text></g><g><title>julia::generate_image_buffer::_{{closure}} (11 samples, 1.49%)</title><rect x="84.1248%" y="309" width="1.4925%" height="15" fill="rgb(208,171,16)" fg:x="620" fg:w="11"/><text x="84.3748%" y="319.50"></text></g><g><title>julia::color_generator::_{{closure}} (10 samples, 1.36%)</title><rect x="84.2605%" y="293" width="1.3569%" height="15" fill="rgb(234,200,18)" fg:x="621" fg:w="10"/><text x="84.5105%" y="303.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::powf (3 samples, 0.41%)</title><rect x="85.2103%" y="277" width="0.4071%" height="15" fill="rgb(228,45,11)" fg:x="628" fg:w="3"/><text x="85.4603%" y="287.50"></text></g><g><title>pow (3 samples, 0.41%)</title><rect x="85.2103%" y="261" width="0.4071%" height="15" fill="rgb(237,182,11)" fg:x="628" fg:w="3"/><text x="85.4603%" y="271.50"></text></g><g><title>[libm.so.6] (3 samples, 0.41%)</title><rect x="85.2103%" y="245" width="0.4071%" height="15" fill="rgb(241,175,49)" fg:x="628" fg:w="3"/><text x="85.4603%" y="255.50"></text></g><g><title>async_io::reactor::ReactorLock::react (1 samples, 0.14%)</title><rect x="85.6174%" y="501" width="0.1357%" height="15" fill="rgb(247,38,35)" fg:x="631" fg:w="1"/><text x="85.8674%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::new (1 samples, 0.14%)</title><rect x="85.6174%" y="485" width="0.1357%" height="15" fill="rgb(228,39,49)" fg:x="631" fg:w="1"/><text x="85.8674%" y="495.50"></text></g><g><title>smol-7 (55 samples, 7.46%)</title><rect x="78.5617%" y="869" width="7.4627%" height="15" fill="rgb(226,101,26)" fg:x="579" fg:w="55"/><text x="78.8117%" y="879.50">smol-7</text></g><g><title>clone3 (54 samples, 7.33%)</title><rect x="78.6974%" y="853" width="7.3270%" height="15" fill="rgb(206,141,19)" fg:x="580" fg:w="54"/><text x="78.9474%" y="863.50">clone3</text></g><g><title>start_thread (54 samples, 7.33%)</title><rect x="78.6974%" y="837" width="7.3270%" height="15" fill="rgb(211,200,13)" fg:x="580" fg:w="54"/><text x="78.9474%" y="847.50">start_thre..</text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (54 samples, 7.33%)</title><rect x="78.6974%" y="821" width="7.3270%" height="15" fill="rgb(241,121,6)" fg:x="580" fg:w="54"/><text x="78.9474%" y="831.50">std::sys::..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (54 samples, 7.33%)</title><rect x="78.6974%" y="805" width="7.3270%" height="15" fill="rgb(234,221,29)" fg:x="580" fg:w="54"/><text x="78.9474%" y="815.50">&lt;alloc::bo..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (54 samples, 7.33%)</title><rect x="78.6974%" y="789" width="7.3270%" height="15" fill="rgb(229,136,5)" fg:x="580" fg:w="54"/><text x="78.9474%" y="799.50">&lt;alloc::bo..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (54 samples, 7.33%)</title><rect x="78.6974%" y="773" width="7.3270%" height="15" fill="rgb(238,36,11)" fg:x="580" fg:w="54"/><text x="78.9474%" y="783.50">core::ops:..</text></g><g><title>std::thread::Builder::spawn_unchecked_::_{{closure}} (54 samples, 7.33%)</title><rect x="78.6974%" y="757" width="7.3270%" height="15" fill="rgb(251,55,41)" fg:x="580" fg:w="54"/><text x="78.9474%" y="767.50">std::threa..</text></g><g><title>std::panic::catch_unwind (54 samples, 7.33%)</title><rect x="78.6974%" y="741" width="7.3270%" height="15" fill="rgb(242,34,40)" fg:x="580" fg:w="54"/><text x="78.9474%" y="751.50">std::panic..</text></g><g><title>std::panicking::try (54 samples, 7.33%)</title><rect x="78.6974%" y="725" width="7.3270%" height="15" fill="rgb(215,42,17)" fg:x="580" fg:w="54"/><text x="78.9474%" y="735.50">std::panic..</text></g><g><title>std::panicking::try::do_call (54 samples, 7.33%)</title><rect x="78.6974%" y="709" width="7.3270%" height="15" fill="rgb(207,44,46)" fg:x="580" fg:w="54"/><text x="78.9474%" y="719.50">std::panic..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (54 samples, 7.33%)</title><rect x="78.6974%" y="693" width="7.3270%" height="15" fill="rgb(211,206,28)" fg:x="580" fg:w="54"/><text x="78.9474%" y="703.50">&lt;core::pan..</text></g><g><title>std::thread::Builder::spawn_unchecked_::_{{closure}}::_{{closure}} (54 samples, 7.33%)</title><rect x="78.6974%" y="677" width="7.3270%" height="15" fill="rgb(237,167,16)" fg:x="580" fg:w="54"/><text x="78.9474%" y="687.50">std::threa..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (54 samples, 7.33%)</title><rect x="78.6974%" y="661" width="7.3270%" height="15" fill="rgb(233,66,6)" fg:x="580" fg:w="54"/><text x="78.9474%" y="671.50">std::sys_c..</text></g><g><title>smol::spawn::spawn::global::_{{closure}}::_{{closure}} (54 samples, 7.33%)</title><rect x="78.6974%" y="645" width="7.3270%" height="15" fill="rgb(246,123,29)" fg:x="580" fg:w="54"/><text x="78.9474%" y="655.50">smol::spaw..</text></g><g><title>std::panic::catch_unwind (54 samples, 7.33%)</title><rect x="78.6974%" y="629" width="7.3270%" height="15" fill="rgb(209,62,40)" fg:x="580" fg:w="54"/><text x="78.9474%" y="639.50">std::panic..</text></g><g><title>std::panicking::try (54 samples, 7.33%)</title><rect x="78.6974%" y="613" width="7.3270%" height="15" fill="rgb(218,4,25)" fg:x="580" fg:w="54"/><text x="78.9474%" y="623.50">std::panic..</text></g><g><title>std::panicking::try::do_call (54 samples, 7.33%)</title><rect x="78.6974%" y="597" width="7.3270%" height="15" fill="rgb(253,91,49)" fg:x="580" fg:w="54"/><text x="78.9474%" y="607.50">std::panic..</text></g><g><title>smol::spawn::spawn::global::_{{closure}}::_{{closure}}::_{{closure}} (54 samples, 7.33%)</title><rect x="78.6974%" y="581" width="7.3270%" height="15" fill="rgb(228,155,29)" fg:x="580" fg:w="54"/><text x="78.9474%" y="591.50">smol::spaw..</text></g><g><title>async_io::driver::block_on (54 samples, 7.33%)</title><rect x="78.6974%" y="565" width="7.3270%" height="15" fill="rgb(243,57,37)" fg:x="580" fg:w="54"/><text x="78.9474%" y="575.50">async_io::..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (54 samples, 7.33%)</title><rect x="78.6974%" y="549" width="7.3270%" height="15" fill="rgb(244,167,17)" fg:x="580" fg:w="54"/><text x="78.9474%" y="559.50">std::threa..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (54 samples, 7.33%)</title><rect x="78.6974%" y="533" width="7.3270%" height="15" fill="rgb(207,181,38)" fg:x="580" fg:w="54"/><text x="78.9474%" y="543.50">std::threa..</text></g><g><title>async_io::driver::block_on::_{{closure}} (54 samples, 7.33%)</title><rect x="78.6974%" y="517" width="7.3270%" height="15" fill="rgb(211,8,23)" fg:x="580" fg:w="54"/><text x="78.9474%" y="527.50">async_io::..</text></g><g><title>parking::Inner::park (2 samples, 0.27%)</title><rect x="85.7531%" y="501" width="0.2714%" height="15" fill="rgb(235,11,44)" fg:x="632" fg:w="2"/><text x="86.0031%" y="511.50"></text></g><g><title>std::sync::condvar::Condvar::wait (2 samples, 0.27%)</title><rect x="85.7531%" y="485" width="0.2714%" height="15" fill="rgb(248,18,52)" fg:x="632" fg:w="2"/><text x="86.0031%" y="495.50"></text></g><g><title>std::sys::sync::condvar::futex::Condvar::wait (2 samples, 0.27%)</title><rect x="85.7531%" y="469" width="0.2714%" height="15" fill="rgb(208,4,7)" fg:x="632" fg:w="2"/><text x="86.0031%" y="479.50"></text></g><g><title>std::sys::sync::condvar::futex::Condvar::wait_optional_timeout (2 samples, 0.27%)</title><rect x="85.7531%" y="453" width="0.2714%" height="15" fill="rgb(240,17,39)" fg:x="632" fg:w="2"/><text x="86.0031%" y="463.50"></text></g><g><title>std::sys::pal::unix::futex::futex_wait (2 samples, 0.27%)</title><rect x="85.7531%" y="437" width="0.2714%" height="15" fill="rgb(207,170,3)" fg:x="632" fg:w="2"/><text x="86.0031%" y="447.50"></text></g><g><title>syscall (2 samples, 0.27%)</title><rect x="85.7531%" y="421" width="0.2714%" height="15" fill="rgb(236,100,52)" fg:x="632" fg:w="2"/><text x="86.0031%" y="431.50"></text></g><g><title>[unknown] (2 samples, 0.27%)</title><rect x="85.7531%" y="405" width="0.2714%" height="15" fill="rgb(246,78,51)" fg:x="632" fg:w="2"/><text x="86.0031%" y="415.50"></text></g><g><title>[unknown] (2 samples, 0.27%)</title><rect x="85.7531%" y="389" width="0.2714%" height="15" fill="rgb(211,17,15)" fg:x="632" fg:w="2"/><text x="86.0031%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="85.8887%" y="373" width="0.1357%" height="15" fill="rgb(209,59,46)" fg:x="633" fg:w="1"/><text x="86.1387%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="85.8887%" y="357" width="0.1357%" height="15" fill="rgb(210,92,25)" fg:x="633" fg:w="1"/><text x="86.1387%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="85.8887%" y="341" width="0.1357%" height="15" fill="rgb(238,174,52)" fg:x="633" fg:w="1"/><text x="86.1387%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="85.8887%" y="325" width="0.1357%" height="15" fill="rgb(230,73,7)" fg:x="633" fg:w="1"/><text x="86.1387%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="85.8887%" y="309" width="0.1357%" height="15" fill="rgb(243,124,40)" fg:x="633" fg:w="1"/><text x="86.1387%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="85.8887%" y="293" width="0.1357%" height="15" fill="rgb(244,170,11)" fg:x="633" fg:w="1"/><text x="86.1387%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="86.0244%" y="853" width="0.1357%" height="15" fill="rgb(207,114,54)" fg:x="634" fg:w="1"/><text x="86.2744%" y="863.50"></text></g><g><title>[unknown] (2 samples, 0.27%)</title><rect x="86.1601%" y="821" width="0.2714%" height="15" fill="rgb(205,42,20)" fg:x="635" fg:w="2"/><text x="86.4101%" y="831.50"></text></g><g><title>[unknown] (2 samples, 0.27%)</title><rect x="86.1601%" y="805" width="0.2714%" height="15" fill="rgb(230,30,28)" fg:x="635" fg:w="2"/><text x="86.4101%" y="815.50"></text></g><g><title>[unknown] (2 samples, 0.27%)</title><rect x="86.1601%" y="789" width="0.2714%" height="15" fill="rgb(205,73,54)" fg:x="635" fg:w="2"/><text x="86.4101%" y="799.50"></text></g><g><title>[unknown] (2 samples, 0.27%)</title><rect x="86.1601%" y="773" width="0.2714%" height="15" fill="rgb(254,227,23)" fg:x="635" fg:w="2"/><text x="86.4101%" y="783.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="86.2958%" y="757" width="0.1357%" height="15" fill="rgb(228,202,34)" fg:x="636" fg:w="1"/><text x="86.5458%" y="767.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::len (1 samples, 0.14%)</title><rect x="86.5672%" y="357" width="0.1357%" height="15" fill="rgb(222,225,37)" fg:x="638" fg:w="1"/><text x="86.8172%" y="367.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::len (1 samples, 0.14%)</title><rect x="86.5672%" y="341" width="0.1357%" height="15" fill="rgb(221,14,54)" fg:x="638" fg:w="1"/><text x="86.8172%" y="351.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.14%)</title><rect x="86.5672%" y="325" width="0.1357%" height="15" fill="rgb(254,102,2)" fg:x="638" fg:w="1"/><text x="86.8172%" y="335.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.14%)</title><rect x="86.5672%" y="309" width="0.1357%" height="15" fill="rgb(232,104,17)" fg:x="638" fg:w="1"/><text x="86.8172%" y="319.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (1 samples, 0.14%)</title><rect x="86.7028%" y="341" width="0.1357%" height="15" fill="rgb(250,220,14)" fg:x="639" fg:w="1"/><text x="86.9528%" y="351.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (4 samples, 0.54%)</title><rect x="86.7028%" y="357" width="0.5427%" height="15" fill="rgb(241,158,9)" fg:x="639" fg:w="4"/><text x="86.9528%" y="367.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (3 samples, 0.41%)</title><rect x="86.8385%" y="341" width="0.4071%" height="15" fill="rgb(246,9,43)" fg:x="640" fg:w="3"/><text x="87.0885%" y="351.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (2 samples, 0.27%)</title><rect x="86.9742%" y="325" width="0.2714%" height="15" fill="rgb(206,73,33)" fg:x="641" fg:w="2"/><text x="87.2242%" y="335.50"></text></g><g><title>core::sync::atomic::atomic_load (2 samples, 0.27%)</title><rect x="86.9742%" y="309" width="0.2714%" height="15" fill="rgb(222,79,8)" fg:x="641" fg:w="2"/><text x="87.2242%" y="319.50"></text></g><g><title>async_executor::steal (6 samples, 0.81%)</title><rect x="86.5672%" y="373" width="0.8141%" height="15" fill="rgb(234,8,54)" fg:x="638" fg:w="6"/><text x="86.8172%" y="383.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (1 samples, 0.14%)</title><rect x="87.2456%" y="357" width="0.1357%" height="15" fill="rgb(209,134,38)" fg:x="643" fg:w="1"/><text x="87.4956%" y="367.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::push (1 samples, 0.14%)</title><rect x="87.2456%" y="341" width="0.1357%" height="15" fill="rgb(230,127,29)" fg:x="643" fg:w="1"/><text x="87.4956%" y="351.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (1 samples, 0.14%)</title><rect x="87.2456%" y="325" width="0.1357%" height="15" fill="rgb(242,44,41)" fg:x="643" fg:w="1"/><text x="87.4956%" y="335.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (1 samples, 0.14%)</title><rect x="87.2456%" y="309" width="0.1357%" height="15" fill="rgb(222,56,43)" fg:x="643" fg:w="1"/><text x="87.4956%" y="319.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (1 samples, 0.14%)</title><rect x="87.3813%" y="357" width="0.1357%" height="15" fill="rgb(238,39,47)" fg:x="644" fg:w="1"/><text x="87.6313%" y="367.50"></text></g><g><title>async_executor::Runner::runnable::_{{closure}}::_{{closure}} (9 samples, 1.22%)</title><rect x="86.4315%" y="389" width="1.2212%" height="15" fill="rgb(226,79,43)" fg:x="637" fg:w="9"/><text x="86.6815%" y="399.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (2 samples, 0.27%)</title><rect x="87.3813%" y="373" width="0.2714%" height="15" fill="rgb(242,105,53)" fg:x="644" fg:w="2"/><text x="87.6313%" y="383.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (1 samples, 0.14%)</title><rect x="87.5170%" y="357" width="0.1357%" height="15" fill="rgb(251,132,46)" fg:x="645" fg:w="1"/><text x="87.7670%" y="367.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (1 samples, 0.14%)</title><rect x="87.5170%" y="341" width="0.1357%" height="15" fill="rgb(231,77,14)" fg:x="645" fg:w="1"/><text x="87.7670%" y="351.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.14%)</title><rect x="87.5170%" y="325" width="0.1357%" height="15" fill="rgb(240,135,9)" fg:x="645" fg:w="1"/><text x="87.7670%" y="335.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_ok (1 samples, 0.14%)</title><rect x="87.6526%" y="373" width="0.1357%" height="15" fill="rgb(248,109,14)" fg:x="646" fg:w="1"/><text x="87.9026%" y="383.50"></text></g><g><title>async_executor::Ticker::runnable_with::_{{closure}} (11 samples, 1.49%)</title><rect x="86.4315%" y="437" width="1.4925%" height="15" fill="rgb(227,146,52)" fg:x="637" fg:w="11"/><text x="86.6815%" y="447.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (11 samples, 1.49%)</title><rect x="86.4315%" y="421" width="1.4925%" height="15" fill="rgb(232,54,3)" fg:x="637" fg:w="11"/><text x="86.6815%" y="431.50"></text></g><g><title>async_executor::Ticker::runnable_with::_{{closure}}::_{{closure}} (11 samples, 1.49%)</title><rect x="86.4315%" y="405" width="1.4925%" height="15" fill="rgb(229,201,43)" fg:x="637" fg:w="11"/><text x="86.6815%" y="415.50"></text></g><g><title>async_executor::State::notify (2 samples, 0.27%)</title><rect x="87.6526%" y="389" width="0.2714%" height="15" fill="rgb(252,161,33)" fg:x="646" fg:w="2"/><text x="87.9026%" y="399.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (1 samples, 0.14%)</title><rect x="87.7883%" y="373" width="0.1357%" height="15" fill="rgb(226,146,40)" fg:x="647" fg:w="1"/><text x="88.0383%" y="383.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (1 samples, 0.14%)</title><rect x="87.7883%" y="357" width="0.1357%" height="15" fill="rgb(219,47,25)" fg:x="647" fg:w="1"/><text x="88.0383%" y="367.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_err (1 samples, 0.14%)</title><rect x="87.7883%" y="341" width="0.1357%" height="15" fill="rgb(250,135,13)" fg:x="647" fg:w="1"/><text x="88.0383%" y="351.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_ok (1 samples, 0.14%)</title><rect x="87.7883%" y="325" width="0.1357%" height="15" fill="rgb(219,229,18)" fg:x="647" fg:w="1"/><text x="88.0383%" y="335.50"></text></g><g><title>async_executor::Runner::runnable::_{{closure}} (12 samples, 1.63%)</title><rect x="86.4315%" y="453" width="1.6282%" height="15" fill="rgb(217,152,27)" fg:x="637" fg:w="12"/><text x="86.6815%" y="463.50"></text></g><g><title>async_executor::steal (1 samples, 0.14%)</title><rect x="87.9240%" y="437" width="0.1357%" height="15" fill="rgb(225,71,47)" fg:x="648" fg:w="1"/><text x="88.1740%" y="447.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (1 samples, 0.14%)</title><rect x="87.9240%" y="421" width="0.1357%" height="15" fill="rgb(220,139,14)" fg:x="648" fg:w="1"/><text x="88.1740%" y="431.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (1 samples, 0.14%)</title><rect x="87.9240%" y="405" width="0.1357%" height="15" fill="rgb(247,54,32)" fg:x="648" fg:w="1"/><text x="88.1740%" y="415.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (1 samples, 0.14%)</title><rect x="87.9240%" y="389" width="0.1357%" height="15" fill="rgb(252,131,39)" fg:x="648" fg:w="1"/><text x="88.1740%" y="399.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.14%)</title><rect x="87.9240%" y="373" width="0.1357%" height="15" fill="rgb(210,108,39)" fg:x="648" fg:w="1"/><text x="88.1740%" y="383.50"></text></g><g><title>core::mem::drop (1 samples, 0.14%)</title><rect x="88.1954%" y="261" width="0.1357%" height="15" fill="rgb(205,23,29)" fg:x="650" fg:w="1"/><text x="88.4454%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::task::wake::Waker&gt;&gt; (1 samples, 0.14%)</title><rect x="88.1954%" y="245" width="0.1357%" height="15" fill="rgb(246,139,46)" fg:x="650" fg:w="1"/><text x="88.4454%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (1 samples, 0.14%)</title><rect x="88.1954%" y="229" width="0.1357%" height="15" fill="rgb(250,81,26)" fg:x="650" fg:w="1"/><text x="88.4454%" y="239.50"></text></g><g><title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (1 samples, 0.14%)</title><rect x="88.1954%" y="213" width="0.1357%" height="15" fill="rgb(214,104,7)" fg:x="650" fg:w="1"/><text x="88.4454%" y="223.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S,M&gt;::drop_waker (1 samples, 0.14%)</title><rect x="88.1954%" y="197" width="0.1357%" height="15" fill="rgb(233,189,8)" fg:x="650" fg:w="1"/><text x="88.4454%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;slab::Slab&lt;core::task::wake::Waker&gt;&gt;&gt; (2 samples, 0.27%)</title><rect x="88.3311%" y="261" width="0.2714%" height="15" fill="rgb(228,141,17)" fg:x="651" fg:w="2"/><text x="88.5811%" y="271.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.27%)</title><rect x="88.3311%" y="245" width="0.2714%" height="15" fill="rgb(247,157,1)" fg:x="651" fg:w="2"/><text x="88.5811%" y="255.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (2 samples, 0.27%)</title><rect x="88.3311%" y="229" width="0.2714%" height="15" fill="rgb(249,225,5)" fg:x="651" fg:w="2"/><text x="88.5811%" y="239.50"></text></g><g><title>slab::Slab&lt;T&gt;::try_remove (3 samples, 0.41%)</title><rect x="88.6024%" y="261" width="0.4071%" height="15" fill="rgb(242,55,13)" fg:x="653" fg:w="3"/><text x="88.8524%" y="271.50"></text></g><g><title>core::mem::replace (1 samples, 0.14%)</title><rect x="88.8738%" y="245" width="0.1357%" height="15" fill="rgb(230,49,50)" fg:x="655" fg:w="1"/><text x="89.1238%" y="255.50"></text></g><g><title>core::ptr::write (1 samples, 0.14%)</title><rect x="88.8738%" y="229" width="0.1357%" height="15" fill="rgb(241,111,38)" fg:x="655" fg:w="1"/><text x="89.1238%" y="239.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_err (1 samples, 0.14%)</title><rect x="89.0095%" y="229" width="0.1357%" height="15" fill="rgb(252,155,4)" fg:x="656" fg:w="1"/><text x="89.2595%" y="239.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_ok (1 samples, 0.14%)</title><rect x="89.0095%" y="213" width="0.1357%" height="15" fill="rgb(212,69,32)" fg:x="656" fg:w="1"/><text x="89.2595%" y="223.50"></text></g><g><title>std::sys::pal::unix::futex::futex_wait (6 samples, 0.81%)</title><rect x="89.1452%" y="213" width="0.8141%" height="15" fill="rgb(243,107,47)" fg:x="657" fg:w="6"/><text x="89.3952%" y="223.50"></text></g><g><title>syscall (6 samples, 0.81%)</title><rect x="89.1452%" y="197" width="0.8141%" height="15" fill="rgb(247,130,12)" fg:x="657" fg:w="6"/><text x="89.3952%" y="207.50"></text></g><g><title>[unknown] (6 samples, 0.81%)</title><rect x="89.1452%" y="181" width="0.8141%" height="15" fill="rgb(233,74,16)" fg:x="657" fg:w="6"/><text x="89.3952%" y="191.50"></text></g><g><title>[unknown] (6 samples, 0.81%)</title><rect x="89.1452%" y="165" width="0.8141%" height="15" fill="rgb(208,58,18)" fg:x="657" fg:w="6"/><text x="89.3952%" y="175.50"></text></g><g><title>[unknown] (5 samples, 0.68%)</title><rect x="89.2809%" y="149" width="0.6784%" height="15" fill="rgb(242,225,1)" fg:x="658" fg:w="5"/><text x="89.5309%" y="159.50"></text></g><g><title>[unknown] (4 samples, 0.54%)</title><rect x="89.4166%" y="133" width="0.5427%" height="15" fill="rgb(249,39,40)" fg:x="659" fg:w="4"/><text x="89.6666%" y="143.50"></text></g><g><title>[unknown] (4 samples, 0.54%)</title><rect x="89.4166%" y="117" width="0.5427%" height="15" fill="rgb(207,72,44)" fg:x="659" fg:w="4"/><text x="89.6666%" y="127.50"></text></g><g><title>[unknown] (3 samples, 0.41%)</title><rect x="89.5522%" y="101" width="0.4071%" height="15" fill="rgb(215,193,12)" fg:x="660" fg:w="3"/><text x="89.8022%" y="111.50"></text></g><g><title>[unknown] (3 samples, 0.41%)</title><rect x="89.5522%" y="85" width="0.4071%" height="15" fill="rgb(248,41,39)" fg:x="660" fg:w="3"/><text x="89.8022%" y="95.50"></text></g><g><title>[unknown] (3 samples, 0.41%)</title><rect x="89.5522%" y="69" width="0.4071%" height="15" fill="rgb(253,85,4)" fg:x="660" fg:w="3"/><text x="89.8022%" y="79.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="89.8236%" y="53" width="0.1357%" height="15" fill="rgb(243,70,31)" fg:x="662" fg:w="1"/><text x="90.0736%" y="63.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="89.8236%" y="37" width="0.1357%" height="15" fill="rgb(253,195,26)" fg:x="662" fg:w="1"/><text x="90.0736%" y="47.50"></text></g><g><title>&lt;async_executor::CallOnDrop&lt;F&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 2.31%)</title><rect x="88.1954%" y="293" width="2.3066%" height="15" fill="rgb(243,42,11)" fg:x="650" fg:w="17"/><text x="88.4454%" y="303.50">&lt;..</text></g><g><title>async_executor::Executor::spawn_inner::_{{closure}}::_{{closure}} (17 samples, 2.31%)</title><rect x="88.1954%" y="277" width="2.3066%" height="15" fill="rgb(239,66,17)" fg:x="650" fg:w="17"/><text x="88.4454%" y="287.50">a..</text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (11 samples, 1.49%)</title><rect x="89.0095%" y="261" width="1.4925%" height="15" fill="rgb(217,132,21)" fg:x="656" fg:w="11"/><text x="89.2595%" y="271.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (11 samples, 1.49%)</title><rect x="89.0095%" y="245" width="1.4925%" height="15" fill="rgb(252,202,21)" fg:x="656" fg:w="11"/><text x="89.2595%" y="255.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock_contended (10 samples, 1.36%)</title><rect x="89.1452%" y="229" width="1.3569%" height="15" fill="rgb(233,98,36)" fg:x="657" fg:w="10"/><text x="89.3952%" y="239.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::spin (4 samples, 0.54%)</title><rect x="89.9593%" y="213" width="0.5427%" height="15" fill="rgb(216,153,54)" fg:x="663" fg:w="4"/><text x="90.2093%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_executor::CallOnDrop&lt;async_executor::Executor::spawn_inner&lt;(),julia::generate_image_buffer::{{closure}}&gt;::{{closure}}::{{closure}}&gt;&gt; (21 samples, 2.85%)</title><rect x="88.1954%" y="309" width="2.8494%" height="15" fill="rgb(250,99,7)" fg:x="650" fg:w="21"/><text x="88.4454%" y="319.50">co..</text></g><g><title>syscall (4 samples, 0.54%)</title><rect x="90.5020%" y="293" width="0.5427%" height="15" fill="rgb(207,56,50)" fg:x="667" fg:w="4"/><text x="90.7520%" y="303.50"></text></g><g><title>[unknown] (4 samples, 0.54%)</title><rect x="90.5020%" y="277" width="0.5427%" height="15" fill="rgb(244,61,34)" fg:x="667" fg:w="4"/><text x="90.7520%" y="287.50"></text></g><g><title>[unknown] (3 samples, 0.41%)</title><rect x="90.6377%" y="261" width="0.4071%" height="15" fill="rgb(241,50,38)" fg:x="668" fg:w="3"/><text x="90.8877%" y="271.50"></text></g><g><title>[unknown] (3 samples, 0.41%)</title><rect x="90.6377%" y="245" width="0.4071%" height="15" fill="rgb(212,166,30)" fg:x="668" fg:w="3"/><text x="90.8877%" y="255.50"></text></g><g><title>[unknown] (3 samples, 0.41%)</title><rect x="90.6377%" y="229" width="0.4071%" height="15" fill="rgb(249,127,32)" fg:x="668" fg:w="3"/><text x="90.8877%" y="239.50"></text></g><g><title>[unknown] (3 samples, 0.41%)</title><rect x="90.6377%" y="213" width="0.4071%" height="15" fill="rgb(209,103,0)" fg:x="668" fg:w="3"/><text x="90.8877%" y="223.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="90.9091%" y="197" width="0.1357%" height="15" fill="rgb(238,209,51)" fg:x="670" fg:w="1"/><text x="91.1591%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;image::color::Rgb&lt;u8&gt;&gt;&gt;&gt;&gt; (1 samples, 0.14%)</title><rect x="91.1805%" y="293" width="0.1357%" height="15" fill="rgb(237,56,23)" fg:x="672" fg:w="1"/><text x="91.4305%" y="303.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.14%)</title><rect x="91.1805%" y="277" width="0.1357%" height="15" fill="rgb(215,153,46)" fg:x="672" fg:w="1"/><text x="91.4305%" y="287.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (1 samples, 0.14%)</title><rect x="91.1805%" y="261" width="0.1357%" height="15" fill="rgb(224,49,31)" fg:x="672" fg:w="1"/><text x="91.4305%" y="271.50"></text></g><g><title>num_complex::Complex&lt;T&gt;::norm (4 samples, 0.54%)</title><rect x="91.5875%" y="277" width="0.5427%" height="15" fill="rgb(250,18,42)" fg:x="675" fg:w="4"/><text x="91.8375%" y="287.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::hypot (4 samples, 0.54%)</title><rect x="91.5875%" y="261" width="0.5427%" height="15" fill="rgb(215,176,39)" fg:x="675" fg:w="4"/><text x="91.8375%" y="271.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::hypot (4 samples, 0.54%)</title><rect x="91.5875%" y="245" width="0.5427%" height="15" fill="rgb(223,77,29)" fg:x="675" fg:w="4"/><text x="91.8375%" y="255.50"></text></g><g><title>hypot (4 samples, 0.54%)</title><rect x="91.5875%" y="229" width="0.5427%" height="15" fill="rgb(234,94,52)" fg:x="675" fg:w="4"/><text x="91.8375%" y="239.50"></text></g><g><title>julia::color_generator::_{{closure}} (10 samples, 1.36%)</title><rect x="91.3161%" y="293" width="1.3569%" height="15" fill="rgb(220,154,50)" fg:x="673" fg:w="10"/><text x="91.5661%" y="303.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::powf (4 samples, 0.54%)</title><rect x="92.1303%" y="277" width="0.5427%" height="15" fill="rgb(212,11,10)" fg:x="679" fg:w="4"/><text x="92.3803%" y="287.50"></text></g><g><title>pow (4 samples, 0.54%)</title><rect x="92.1303%" y="261" width="0.5427%" height="15" fill="rgb(205,166,19)" fg:x="679" fg:w="4"/><text x="92.3803%" y="271.50"></text></g><g><title>[libm.so.6] (4 samples, 0.54%)</title><rect x="92.1303%" y="245" width="0.5427%" height="15" fill="rgb(244,198,16)" fg:x="679" fg:w="4"/><text x="92.3803%" y="255.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (47 samples, 6.38%)</title><rect x="86.4315%" y="485" width="6.3772%" height="15" fill="rgb(219,69,12)" fg:x="637" fg:w="47"/><text x="86.6815%" y="495.50">&lt;futures..</text></g><g><title>async_executor::Executor::run::_{{closure}}::_{{closure}} (47 samples, 6.38%)</title><rect x="86.4315%" y="469" width="6.3772%" height="15" fill="rgb(245,30,7)" fg:x="637" fg:w="47"/><text x="86.6815%" y="479.50">async_ex..</text></g><g><title>async_task::runnable::Runnable&lt;M&gt;::run (35 samples, 4.75%)</title><rect x="88.0597%" y="453" width="4.7490%" height="15" fill="rgb(218,221,48)" fg:x="649" fg:w="35"/><text x="88.3097%" y="463.50">async_..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S,M&gt;::run (35 samples, 4.75%)</title><rect x="88.0597%" y="437" width="4.7490%" height="15" fill="rgb(216,66,15)" fg:x="649" fg:w="35"/><text x="88.3097%" y="447.50">async_..</text></g><g><title>std::panic::catch_unwind (35 samples, 4.75%)</title><rect x="88.0597%" y="421" width="4.7490%" height="15" fill="rgb(226,122,50)" fg:x="649" fg:w="35"/><text x="88.3097%" y="431.50">std::p..</text></g><g><title>std::panicking::try (35 samples, 4.75%)</title><rect x="88.0597%" y="405" width="4.7490%" height="15" fill="rgb(239,156,16)" fg:x="649" fg:w="35"/><text x="88.3097%" y="415.50">std::p..</text></g><g><title>std::panicking::try::do_call (35 samples, 4.75%)</title><rect x="88.0597%" y="389" width="4.7490%" height="15" fill="rgb(224,27,38)" fg:x="649" fg:w="35"/><text x="88.3097%" y="399.50">std::p..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (35 samples, 4.75%)</title><rect x="88.0597%" y="373" width="4.7490%" height="15" fill="rgb(224,39,27)" fg:x="649" fg:w="35"/><text x="88.3097%" y="383.50">&lt;core:..</text></g><g><title>core::ops::function::FnOnce::call_once (35 samples, 4.75%)</title><rect x="88.0597%" y="357" width="4.7490%" height="15" fill="rgb(215,92,29)" fg:x="649" fg:w="35"/><text x="88.3097%" y="367.50">core::..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S,M&gt;::run::_{{closure}} (35 samples, 4.75%)</title><rect x="88.0597%" y="341" width="4.7490%" height="15" fill="rgb(207,159,16)" fg:x="649" fg:w="35"/><text x="88.3097%" y="351.50">async_..</text></g><g><title>async_executor::Executor::spawn_inner::_{{closure}} (35 samples, 4.75%)</title><rect x="88.0597%" y="325" width="4.7490%" height="15" fill="rgb(238,163,47)" fg:x="649" fg:w="35"/><text x="88.3097%" y="335.50">async_..</text></g><g><title>julia::generate_image_buffer::_{{closure}} (13 samples, 1.76%)</title><rect x="91.0448%" y="309" width="1.7639%" height="15" fill="rgb(219,91,49)" fg:x="671" fg:w="13"/><text x="91.2948%" y="319.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (1 samples, 0.14%)</title><rect x="92.6730%" y="293" width="0.1357%" height="15" fill="rgb(227,167,31)" fg:x="683" fg:w="1"/><text x="92.9230%" y="303.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (1 samples, 0.14%)</title><rect x="92.6730%" y="277" width="0.1357%" height="15" fill="rgb(234,80,54)" fg:x="683" fg:w="1"/><text x="92.9230%" y="287.50"></text></g><g><title>std::sync::poison::Flag::guard (1 samples, 0.14%)</title><rect x="92.6730%" y="261" width="0.1357%" height="15" fill="rgb(212,114,2)" fg:x="683" fg:w="1"/><text x="92.9230%" y="271.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (48 samples, 6.51%)</title><rect x="86.4315%" y="805" width="6.5129%" height="15" fill="rgb(234,50,24)" fg:x="637" fg:w="48"/><text x="86.6815%" y="815.50">&lt;alloc::b..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (48 samples, 6.51%)</title><rect x="86.4315%" y="789" width="6.5129%" height="15" fill="rgb(221,68,8)" fg:x="637" fg:w="48"/><text x="86.6815%" y="799.50">&lt;alloc::b..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (48 samples, 6.51%)</title><rect x="86.4315%" y="773" width="6.5129%" height="15" fill="rgb(254,180,31)" fg:x="637" fg:w="48"/><text x="86.6815%" y="783.50">core::ops..</text></g><g><title>std::thread::Builder::spawn_unchecked_::_{{closure}} (48 samples, 6.51%)</title><rect x="86.4315%" y="757" width="6.5129%" height="15" fill="rgb(247,130,50)" fg:x="637" fg:w="48"/><text x="86.6815%" y="767.50">std::thre..</text></g><g><title>std::panic::catch_unwind (48 samples, 6.51%)</title><rect x="86.4315%" y="741" width="6.5129%" height="15" fill="rgb(211,109,4)" fg:x="637" fg:w="48"/><text x="86.6815%" y="751.50">std::pani..</text></g><g><title>std::panicking::try (48 samples, 6.51%)</title><rect x="86.4315%" y="725" width="6.5129%" height="15" fill="rgb(238,50,21)" fg:x="637" fg:w="48"/><text x="86.6815%" y="735.50">std::pani..</text></g><g><title>std::panicking::try::do_call (48 samples, 6.51%)</title><rect x="86.4315%" y="709" width="6.5129%" height="15" fill="rgb(225,57,45)" fg:x="637" fg:w="48"/><text x="86.6815%" y="719.50">std::pani..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (48 samples, 6.51%)</title><rect x="86.4315%" y="693" width="6.5129%" height="15" fill="rgb(209,196,50)" fg:x="637" fg:w="48"/><text x="86.6815%" y="703.50">&lt;core::pa..</text></g><g><title>std::thread::Builder::spawn_unchecked_::_{{closure}}::_{{closure}} (48 samples, 6.51%)</title><rect x="86.4315%" y="677" width="6.5129%" height="15" fill="rgb(242,140,13)" fg:x="637" fg:w="48"/><text x="86.6815%" y="687.50">std::thre..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (48 samples, 6.51%)</title><rect x="86.4315%" y="661" width="6.5129%" height="15" fill="rgb(217,111,7)" fg:x="637" fg:w="48"/><text x="86.6815%" y="671.50">std::sys_..</text></g><g><title>smol::spawn::spawn::global::_{{closure}}::_{{closure}} (48 samples, 6.51%)</title><rect x="86.4315%" y="645" width="6.5129%" height="15" fill="rgb(253,193,51)" fg:x="637" fg:w="48"/><text x="86.6815%" y="655.50">smol::spa..</text></g><g><title>std::panic::catch_unwind (48 samples, 6.51%)</title><rect x="86.4315%" y="629" width="6.5129%" height="15" fill="rgb(252,70,29)" fg:x="637" fg:w="48"/><text x="86.6815%" y="639.50">std::pani..</text></g><g><title>std::panicking::try (48 samples, 6.51%)</title><rect x="86.4315%" y="613" width="6.5129%" height="15" fill="rgb(232,127,12)" fg:x="637" fg:w="48"/><text x="86.6815%" y="623.50">std::pani..</text></g><g><title>std::panicking::try::do_call (48 samples, 6.51%)</title><rect x="86.4315%" y="597" width="6.5129%" height="15" fill="rgb(211,180,21)" fg:x="637" fg:w="48"/><text x="86.6815%" y="607.50">std::pani..</text></g><g><title>smol::spawn::spawn::global::_{{closure}}::_{{closure}}::_{{closure}} (48 samples, 6.51%)</title><rect x="86.4315%" y="581" width="6.5129%" height="15" fill="rgb(229,72,13)" fg:x="637" fg:w="48"/><text x="86.6815%" y="591.50">smol::spa..</text></g><g><title>async_io::driver::block_on (48 samples, 6.51%)</title><rect x="86.4315%" y="565" width="6.5129%" height="15" fill="rgb(240,211,49)" fg:x="637" fg:w="48"/><text x="86.6815%" y="575.50">async_io:..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (48 samples, 6.51%)</title><rect x="86.4315%" y="549" width="6.5129%" height="15" fill="rgb(219,149,40)" fg:x="637" fg:w="48"/><text x="86.6815%" y="559.50">std::thre..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (48 samples, 6.51%)</title><rect x="86.4315%" y="533" width="6.5129%" height="15" fill="rgb(210,127,46)" fg:x="637" fg:w="48"/><text x="86.6815%" y="543.50">std::thre..</text></g><g><title>async_io::driver::block_on::_{{closure}} (48 samples, 6.51%)</title><rect x="86.4315%" y="517" width="6.5129%" height="15" fill="rgb(220,106,7)" fg:x="637" fg:w="48"/><text x="86.6815%" y="527.50">async_io:..</text></g><g><title>async_executor::Executor::run::_{{closure}} (48 samples, 6.51%)</title><rect x="86.4315%" y="501" width="6.5129%" height="15" fill="rgb(249,31,22)" fg:x="637" fg:w="48"/><text x="86.6815%" y="511.50">async_exe..</text></g><g><title>fastrand::global_rng::&lt;impl fastrand::Rng&gt;::new (1 samples, 0.14%)</title><rect x="92.8087%" y="485" width="0.1357%" height="15" fill="rgb(253,1,49)" fg:x="684" fg:w="1"/><text x="93.0587%" y="495.50"></text></g><g><title>fastrand::global_rng::try_with_rng (1 samples, 0.14%)</title><rect x="92.8087%" y="469" width="0.1357%" height="15" fill="rgb(227,144,33)" fg:x="684" fg:w="1"/><text x="93.0587%" y="479.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.14%)</title><rect x="92.8087%" y="453" width="0.1357%" height="15" fill="rgb(249,163,44)" fg:x="684" fg:w="1"/><text x="93.0587%" y="463.50"></text></g><g><title>fastrand::global_rng::RNG::__getit (1 samples, 0.14%)</title><rect x="92.8087%" y="437" width="0.1357%" height="15" fill="rgb(234,15,39)" fg:x="684" fg:w="1"/><text x="93.0587%" y="447.50"></text></g><g><title>std::sys::thread_local::fast_local::Key&lt;T&gt;::get (1 samples, 0.14%)</title><rect x="92.8087%" y="421" width="0.1357%" height="15" fill="rgb(207,66,16)" fg:x="684" fg:w="1"/><text x="93.0587%" y="431.50"></text></g><g><title>std::sys::thread_local::fast_local::Key&lt;T&gt;::try_initialize (1 samples, 0.14%)</title><rect x="92.8087%" y="405" width="0.1357%" height="15" fill="rgb(233,112,24)" fg:x="684" fg:w="1"/><text x="93.0587%" y="415.50"></text></g><g><title>std::sys::thread_local::lazy::LazyKeyInner&lt;T&gt;::initialize (1 samples, 0.14%)</title><rect x="92.8087%" y="389" width="0.1357%" height="15" fill="rgb(230,90,22)" fg:x="684" fg:w="1"/><text x="93.0587%" y="399.50"></text></g><g><title>fastrand::global_rng::RNG::__getit::_{{closure}} (1 samples, 0.14%)</title><rect x="92.8087%" y="373" width="0.1357%" height="15" fill="rgb(229,61,13)" fg:x="684" fg:w="1"/><text x="93.0587%" y="383.50"></text></g><g><title>fastrand::global_rng::RNG::__init (1 samples, 0.14%)</title><rect x="92.8087%" y="357" width="0.1357%" height="15" fill="rgb(225,57,24)" fg:x="684" fg:w="1"/><text x="93.0587%" y="367.50"></text></g><g><title>fastrand::global_rng::random_seed (1 samples, 0.14%)</title><rect x="92.8087%" y="341" width="0.1357%" height="15" fill="rgb(208,169,48)" fg:x="684" fg:w="1"/><text x="93.0587%" y="351.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (1 samples, 0.14%)</title><rect x="92.8087%" y="325" width="0.1357%" height="15" fill="rgb(244,218,51)" fg:x="684" fg:w="1"/><text x="93.0587%" y="335.50"></text></g><g><title>clock_gettime@@GLIBC_2.17 (1 samples, 0.14%)</title><rect x="92.8087%" y="309" width="0.1357%" height="15" fill="rgb(214,148,10)" fg:x="684" fg:w="1"/><text x="93.0587%" y="319.50"></text></g><g><title>__vdso_clock_gettime (1 samples, 0.14%)</title><rect x="92.8087%" y="293" width="0.1357%" height="15" fill="rgb(225,174,27)" fg:x="684" fg:w="1"/><text x="93.0587%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="92.8087%" y="277" width="0.1357%" height="15" fill="rgb(230,96,26)" fg:x="684" fg:w="1"/><text x="93.0587%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="92.8087%" y="261" width="0.1357%" height="15" fill="rgb(232,10,30)" fg:x="684" fg:w="1"/><text x="93.0587%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="92.8087%" y="245" width="0.1357%" height="15" fill="rgb(222,8,50)" fg:x="684" fg:w="1"/><text x="93.0587%" y="255.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="92.8087%" y="229" width="0.1357%" height="15" fill="rgb(213,81,27)" fg:x="684" fg:w="1"/><text x="93.0587%" y="239.50"></text></g><g><title>std::sys::pal::unix::stack_overflow::imp::current_guard (2 samples, 0.27%)</title><rect x="92.9444%" y="773" width="0.2714%" height="15" fill="rgb(245,50,10)" fg:x="685" fg:w="2"/><text x="93.1944%" y="783.50"></text></g><g><title>pthread_getattr_np@@GLIBC_2.32 (2 samples, 0.27%)</title><rect x="92.9444%" y="757" width="0.2714%" height="15" fill="rgb(216,100,18)" fg:x="685" fg:w="2"/><text x="93.1944%" y="767.50"></text></g><g><title>malloc (2 samples, 0.27%)</title><rect x="92.9444%" y="741" width="0.2714%" height="15" fill="rgb(236,147,54)" fg:x="685" fg:w="2"/><text x="93.1944%" y="751.50"></text></g><g><title>tcache_init.part.0 (1 samples, 0.14%)</title><rect x="93.0801%" y="725" width="0.1357%" height="15" fill="rgb(205,143,26)" fg:x="686" fg:w="1"/><text x="93.3301%" y="735.50"></text></g><g><title>arena_get2.part.0 (1 samples, 0.14%)</title><rect x="93.0801%" y="709" width="0.1357%" height="15" fill="rgb(236,26,9)" fg:x="686" fg:w="1"/><text x="93.3301%" y="719.50"></text></g><g><title>alloc_new_heap (1 samples, 0.14%)</title><rect x="93.0801%" y="693" width="0.1357%" height="15" fill="rgb(221,165,53)" fg:x="686" fg:w="1"/><text x="93.3301%" y="703.50"></text></g><g><title>__mmap (1 samples, 0.14%)</title><rect x="93.0801%" y="677" width="0.1357%" height="15" fill="rgb(214,110,17)" fg:x="686" fg:w="1"/><text x="93.3301%" y="687.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="93.0801%" y="661" width="0.1357%" height="15" fill="rgb(237,197,12)" fg:x="686" fg:w="1"/><text x="93.3301%" y="671.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="93.0801%" y="645" width="0.1357%" height="15" fill="rgb(205,84,17)" fg:x="686" fg:w="1"/><text x="93.3301%" y="655.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="93.0801%" y="629" width="0.1357%" height="15" fill="rgb(237,18,45)" fg:x="686" fg:w="1"/><text x="93.3301%" y="639.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="93.0801%" y="613" width="0.1357%" height="15" fill="rgb(221,87,14)" fg:x="686" fg:w="1"/><text x="93.3301%" y="623.50"></text></g><g><title>smol-8 (54 samples, 7.33%)</title><rect x="86.0244%" y="869" width="7.3270%" height="15" fill="rgb(238,186,15)" fg:x="634" fg:w="54"/><text x="86.2744%" y="879.50">smol-8</text></g><g><title>clone3 (53 samples, 7.19%)</title><rect x="86.1601%" y="853" width="7.1913%" height="15" fill="rgb(208,115,11)" fg:x="635" fg:w="53"/><text x="86.4101%" y="863.50">clone3</text></g><g><title>start_thread (53 samples, 7.19%)</title><rect x="86.1601%" y="837" width="7.1913%" height="15" fill="rgb(254,175,0)" fg:x="635" fg:w="53"/><text x="86.4101%" y="847.50">start_thre..</text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (51 samples, 6.92%)</title><rect x="86.4315%" y="821" width="6.9199%" height="15" fill="rgb(227,24,42)" fg:x="637" fg:w="51"/><text x="86.6815%" y="831.50">std::sys:..</text></g><g><title>std::sys::pal::unix::stack_overflow::Handler::new (3 samples, 0.41%)</title><rect x="92.9444%" y="805" width="0.4071%" height="15" fill="rgb(223,211,37)" fg:x="685" fg:w="3"/><text x="93.1944%" y="815.50"></text></g><g><title>std::sys::pal::unix::stack_overflow::imp::make_handler (3 samples, 0.41%)</title><rect x="92.9444%" y="789" width="0.4071%" height="15" fill="rgb(235,49,27)" fg:x="685" fg:w="3"/><text x="93.1944%" y="799.50"></text></g><g><title>std::sys::pal::unix::stack_overflow::imp::get_stack (1 samples, 0.14%)</title><rect x="93.2157%" y="773" width="0.1357%" height="15" fill="rgb(254,97,51)" fg:x="687" fg:w="1"/><text x="93.4657%" y="783.50"></text></g><g><title>__mmap (1 samples, 0.14%)</title><rect x="93.2157%" y="757" width="0.1357%" height="15" fill="rgb(249,51,40)" fg:x="687" fg:w="1"/><text x="93.4657%" y="767.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="93.2157%" y="741" width="0.1357%" height="15" fill="rgb(210,128,45)" fg:x="687" fg:w="1"/><text x="93.4657%" y="751.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="93.2157%" y="725" width="0.1357%" height="15" fill="rgb(224,137,50)" fg:x="687" fg:w="1"/><text x="93.4657%" y="735.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="93.2157%" y="709" width="0.1357%" height="15" fill="rgb(242,15,9)" fg:x="687" fg:w="1"/><text x="93.4657%" y="719.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="93.2157%" y="693" width="0.1357%" height="15" fill="rgb(233,187,41)" fg:x="687" fg:w="1"/><text x="93.4657%" y="703.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (3 samples, 0.41%)</title><rect x="93.3514%" y="357" width="0.4071%" height="15" fill="rgb(227,2,29)" fg:x="688" fg:w="3"/><text x="93.6014%" y="367.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (2 samples, 0.27%)</title><rect x="93.4871%" y="341" width="0.2714%" height="15" fill="rgb(222,70,3)" fg:x="689" fg:w="2"/><text x="93.7371%" y="351.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (1 samples, 0.14%)</title><rect x="93.6228%" y="325" width="0.1357%" height="15" fill="rgb(213,11,42)" fg:x="690" fg:w="1"/><text x="93.8728%" y="335.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.14%)</title><rect x="93.6228%" y="309" width="0.1357%" height="15" fill="rgb(225,150,9)" fg:x="690" fg:w="1"/><text x="93.8728%" y="319.50"></text></g><g><title>async_executor::steal (4 samples, 0.54%)</title><rect x="93.3514%" y="373" width="0.5427%" height="15" fill="rgb(230,162,45)" fg:x="688" fg:w="4"/><text x="93.6014%" y="383.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (1 samples, 0.14%)</title><rect x="93.7585%" y="357" width="0.1357%" height="15" fill="rgb(222,14,52)" fg:x="691" fg:w="1"/><text x="94.0085%" y="367.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::push (1 samples, 0.14%)</title><rect x="93.7585%" y="341" width="0.1357%" height="15" fill="rgb(254,198,14)" fg:x="691" fg:w="1"/><text x="94.0085%" y="351.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (1 samples, 0.14%)</title><rect x="93.7585%" y="325" width="0.1357%" height="15" fill="rgb(220,217,30)" fg:x="691" fg:w="1"/><text x="94.0085%" y="335.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (1 samples, 0.14%)</title><rect x="93.7585%" y="309" width="0.1357%" height="15" fill="rgb(215,146,41)" fg:x="691" fg:w="1"/><text x="94.0085%" y="319.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (1 samples, 0.14%)</title><rect x="93.8942%" y="373" width="0.1357%" height="15" fill="rgb(217,27,36)" fg:x="692" fg:w="1"/><text x="94.1442%" y="383.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (1 samples, 0.14%)</title><rect x="93.8942%" y="357" width="0.1357%" height="15" fill="rgb(219,218,39)" fg:x="692" fg:w="1"/><text x="94.1442%" y="367.50"></text></g><g><title>concurrent_queue::unbounded::Block&lt;T&gt;::destroy (1 samples, 0.14%)</title><rect x="93.8942%" y="341" width="0.1357%" height="15" fill="rgb(219,4,42)" fg:x="692" fg:w="1"/><text x="94.1442%" y="351.50"></text></g><g><title>core::mem::drop (1 samples, 0.14%)</title><rect x="93.8942%" y="325" width="0.1357%" height="15" fill="rgb(249,119,36)" fg:x="692" fg:w="1"/><text x="94.1442%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;concurrent_queue::unbounded::Block&lt;async_task::runnable::Runnable&gt;&gt;&gt; (1 samples, 0.14%)</title><rect x="93.8942%" y="309" width="0.1357%" height="15" fill="rgb(209,23,33)" fg:x="692" fg:w="1"/><text x="94.1442%" y="319.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.14%)</title><rect x="93.8942%" y="293" width="0.1357%" height="15" fill="rgb(211,10,0)" fg:x="692" fg:w="1"/><text x="94.1442%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.14%)</title><rect x="93.8942%" y="277" width="0.1357%" height="15" fill="rgb(208,99,37)" fg:x="692" fg:w="1"/><text x="94.1442%" y="287.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.14%)</title><rect x="93.8942%" y="261" width="0.1357%" height="15" fill="rgb(213,132,31)" fg:x="692" fg:w="1"/><text x="94.1442%" y="271.50"></text></g><g><title>cfree@GLIBC_2.2.5 (1 samples, 0.14%)</title><rect x="93.8942%" y="245" width="0.1357%" height="15" fill="rgb(243,129,40)" fg:x="692" fg:w="1"/><text x="94.1442%" y="255.50"></text></g><g><title>__lll_lock_wake_private (1 samples, 0.14%)</title><rect x="93.8942%" y="229" width="0.1357%" height="15" fill="rgb(210,66,33)" fg:x="692" fg:w="1"/><text x="94.1442%" y="239.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="93.8942%" y="213" width="0.1357%" height="15" fill="rgb(209,189,4)" fg:x="692" fg:w="1"/><text x="94.1442%" y="223.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="93.8942%" y="197" width="0.1357%" height="15" fill="rgb(214,107,37)" fg:x="692" fg:w="1"/><text x="94.1442%" y="207.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="93.8942%" y="181" width="0.1357%" height="15" fill="rgb(245,88,54)" fg:x="692" fg:w="1"/><text x="94.1442%" y="191.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="93.8942%" y="165" width="0.1357%" height="15" fill="rgb(205,146,20)" fg:x="692" fg:w="1"/><text x="94.1442%" y="175.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="93.8942%" y="149" width="0.1357%" height="15" fill="rgb(220,161,25)" fg:x="692" fg:w="1"/><text x="94.1442%" y="159.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="93.8942%" y="133" width="0.1357%" height="15" fill="rgb(215,152,15)" fg:x="692" fg:w="1"/><text x="94.1442%" y="143.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="93.8942%" y="117" width="0.1357%" height="15" fill="rgb(233,192,44)" fg:x="692" fg:w="1"/><text x="94.1442%" y="127.50"></text></g><g><title>async_executor::Runner::runnable::_{{closure}}::_{{closure}} (6 samples, 0.81%)</title><rect x="93.3514%" y="389" width="0.8141%" height="15" fill="rgb(240,170,46)" fg:x="688" fg:w="6"/><text x="93.6014%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;concurrent_queue::ConcurrentQueue&lt;async_task::runnable::Runnable&gt;&gt;&gt;&gt;&gt; (1 samples, 0.14%)</title><rect x="94.0299%" y="373" width="0.1357%" height="15" fill="rgb(207,104,33)" fg:x="693" fg:w="1"/><text x="94.2799%" y="383.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.14%)</title><rect x="94.0299%" y="357" width="0.1357%" height="15" fill="rgb(219,21,39)" fg:x="693" fg:w="1"/><text x="94.2799%" y="367.50"></text></g><g><title>std::sys::sync::rwlock::futex::RwLock::read_unlock (1 samples, 0.14%)</title><rect x="94.0299%" y="341" width="0.1357%" height="15" fill="rgb(214,133,29)" fg:x="693" fg:w="1"/><text x="94.2799%" y="351.50"></text></g><g><title>async_executor::Runner::runnable::_{{closure}} (7 samples, 0.95%)</title><rect x="93.3514%" y="453" width="0.9498%" height="15" fill="rgb(226,93,6)" fg:x="688" fg:w="7"/><text x="93.6014%" y="463.50"></text></g><g><title>async_executor::Ticker::runnable_with::_{{closure}} (7 samples, 0.95%)</title><rect x="93.3514%" y="437" width="0.9498%" height="15" fill="rgb(252,222,34)" fg:x="688" fg:w="7"/><text x="93.6014%" y="447.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (7 samples, 0.95%)</title><rect x="93.3514%" y="421" width="0.9498%" height="15" fill="rgb(252,92,48)" fg:x="688" fg:w="7"/><text x="93.6014%" y="431.50"></text></g><g><title>async_executor::Ticker::runnable_with::_{{closure}}::_{{closure}} (7 samples, 0.95%)</title><rect x="93.3514%" y="405" width="0.9498%" height="15" fill="rgb(245,223,24)" fg:x="688" fg:w="7"/><text x="93.6014%" y="415.50"></text></g><g><title>async_executor::Ticker::sleep (1 samples, 0.14%)</title><rect x="94.1655%" y="389" width="0.1357%" height="15" fill="rgb(205,176,3)" fg:x="694" fg:w="1"/><text x="94.4155%" y="399.50"></text></g><g><title>async_executor::Sleepers::insert (1 samples, 0.14%)</title><rect x="94.1655%" y="373" width="0.1357%" height="15" fill="rgb(235,151,15)" fg:x="694" fg:w="1"/><text x="94.4155%" y="383.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (1 samples, 0.14%)</title><rect x="94.1655%" y="357" width="0.1357%" height="15" fill="rgb(237,209,11)" fg:x="694" fg:w="1"/><text x="94.4155%" y="367.50"></text></g><g><title>alloc::task::raw_waker::clone_waker (1 samples, 0.14%)</title><rect x="94.1655%" y="341" width="0.1357%" height="15" fill="rgb(243,227,24)" fg:x="694" fg:w="1"/><text x="94.4155%" y="351.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::increment_strong_count (1 samples, 0.14%)</title><rect x="94.1655%" y="325" width="0.1357%" height="15" fill="rgb(239,193,16)" fg:x="694" fg:w="1"/><text x="94.4155%" y="335.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::increment_strong_count_in (1 samples, 0.14%)</title><rect x="94.1655%" y="309" width="0.1357%" height="15" fill="rgb(231,27,9)" fg:x="694" fg:w="1"/><text x="94.4155%" y="319.50"></text></g><g><title>&lt;core::mem::manually_drop::ManuallyDrop&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.14%)</title><rect x="94.1655%" y="293" width="0.1357%" height="15" fill="rgb(219,169,10)" fg:x="694" fg:w="1"/><text x="94.4155%" y="303.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.14%)</title><rect x="94.1655%" y="277" width="0.1357%" height="15" fill="rgb(244,229,43)" fg:x="694" fg:w="1"/><text x="94.4155%" y="287.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S,M&gt;::from_ptr (1 samples, 0.14%)</title><rect x="94.3012%" y="421" width="0.1357%" height="15" fill="rgb(254,38,20)" fg:x="695" fg:w="1"/><text x="94.5512%" y="431.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.14%)</title><rect x="94.3012%" y="405" width="0.1357%" height="15" fill="rgb(250,47,30)" fg:x="695" fg:w="1"/><text x="94.5512%" y="415.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (1 samples, 0.14%)</title><rect x="94.4369%" y="421" width="0.1357%" height="15" fill="rgb(224,124,36)" fg:x="696" fg:w="1"/><text x="94.6869%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (1 samples, 0.14%)</title><rect x="94.4369%" y="405" width="0.1357%" height="15" fill="rgb(246,68,51)" fg:x="696" fg:w="1"/><text x="94.6869%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;slab::Slab&lt;core::task::wake::Waker&gt;&gt;&gt; (1 samples, 0.14%)</title><rect x="94.5726%" y="261" width="0.1357%" height="15" fill="rgb(253,43,49)" fg:x="697" fg:w="1"/><text x="94.8226%" y="271.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.14%)</title><rect x="94.5726%" y="245" width="0.1357%" height="15" fill="rgb(219,54,36)" fg:x="697" fg:w="1"/><text x="94.8226%" y="255.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (1 samples, 0.14%)</title><rect x="94.5726%" y="229" width="0.1357%" height="15" fill="rgb(227,133,34)" fg:x="697" fg:w="1"/><text x="94.8226%" y="239.50"></text></g><g><title>slab::Slab&lt;T&gt;::try_remove (1 samples, 0.14%)</title><rect x="94.7083%" y="261" width="0.1357%" height="15" fill="rgb(247,227,15)" fg:x="698" fg:w="1"/><text x="94.9583%" y="271.50"></text></g><g><title>core::mem::replace (1 samples, 0.14%)</title><rect x="94.7083%" y="245" width="0.1357%" height="15" fill="rgb(229,96,14)" fg:x="698" fg:w="1"/><text x="94.9583%" y="255.50"></text></g><g><title>core::ptr::read (1 samples, 0.14%)</title><rect x="94.7083%" y="229" width="0.1357%" height="15" fill="rgb(220,79,17)" fg:x="698" fg:w="1"/><text x="94.9583%" y="239.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_err (1 samples, 0.14%)</title><rect x="94.8440%" y="229" width="0.1357%" height="15" fill="rgb(205,131,53)" fg:x="699" fg:w="1"/><text x="95.0940%" y="239.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_ok (1 samples, 0.14%)</title><rect x="94.8440%" y="213" width="0.1357%" height="15" fill="rgb(209,50,29)" fg:x="699" fg:w="1"/><text x="95.0940%" y="223.50"></text></g><g><title>std::sys::pal::unix::futex::futex_wait (8 samples, 1.09%)</title><rect x="95.3867%" y="213" width="1.0855%" height="15" fill="rgb(245,86,46)" fg:x="703" fg:w="8"/><text x="95.6367%" y="223.50"></text></g><g><title>syscall (7 samples, 0.95%)</title><rect x="95.5224%" y="197" width="0.9498%" height="15" fill="rgb(235,66,46)" fg:x="704" fg:w="7"/><text x="95.7724%" y="207.50"></text></g><g><title>[unknown] (7 samples, 0.95%)</title><rect x="95.5224%" y="181" width="0.9498%" height="15" fill="rgb(232,148,31)" fg:x="704" fg:w="7"/><text x="95.7724%" y="191.50"></text></g><g><title>[unknown] (7 samples, 0.95%)</title><rect x="95.5224%" y="165" width="0.9498%" height="15" fill="rgb(217,149,8)" fg:x="704" fg:w="7"/><text x="95.7724%" y="175.50"></text></g><g><title>[unknown] (7 samples, 0.95%)</title><rect x="95.5224%" y="149" width="0.9498%" height="15" fill="rgb(209,183,11)" fg:x="704" fg:w="7"/><text x="95.7724%" y="159.50"></text></g><g><title>[unknown] (6 samples, 0.81%)</title><rect x="95.6581%" y="133" width="0.8141%" height="15" fill="rgb(208,55,20)" fg:x="705" fg:w="6"/><text x="95.9081%" y="143.50"></text></g><g><title>[unknown] (6 samples, 0.81%)</title><rect x="95.6581%" y="117" width="0.8141%" height="15" fill="rgb(218,39,14)" fg:x="705" fg:w="6"/><text x="95.9081%" y="127.50"></text></g><g><title>[unknown] (6 samples, 0.81%)</title><rect x="95.6581%" y="101" width="0.8141%" height="15" fill="rgb(216,169,33)" fg:x="705" fg:w="6"/><text x="95.9081%" y="111.50"></text></g><g><title>[unknown] (6 samples, 0.81%)</title><rect x="95.6581%" y="85" width="0.8141%" height="15" fill="rgb(233,80,24)" fg:x="705" fg:w="6"/><text x="95.9081%" y="95.50"></text></g><g><title>[unknown] (5 samples, 0.68%)</title><rect x="95.7938%" y="69" width="0.6784%" height="15" fill="rgb(213,179,31)" fg:x="706" fg:w="5"/><text x="96.0438%" y="79.50"></text></g><g><title>[unknown] (4 samples, 0.54%)</title><rect x="95.9294%" y="53" width="0.5427%" height="15" fill="rgb(209,19,5)" fg:x="707" fg:w="4"/><text x="96.1794%" y="63.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="96.3365%" y="37" width="0.1357%" height="15" fill="rgb(219,18,35)" fg:x="710" fg:w="1"/><text x="96.5865%" y="47.50"></text></g><g><title>&lt;async_executor::CallOnDrop&lt;F&gt; as core::ops::drop::Drop&gt;::drop (20 samples, 2.71%)</title><rect x="94.5726%" y="293" width="2.7137%" height="15" fill="rgb(209,169,16)" fg:x="697" fg:w="20"/><text x="94.8226%" y="303.50">&lt;a..</text></g><g><title>async_executor::Executor::spawn_inner::_{{closure}}::_{{closure}} (20 samples, 2.71%)</title><rect x="94.5726%" y="277" width="2.7137%" height="15" fill="rgb(245,90,51)" fg:x="697" fg:w="20"/><text x="94.8226%" y="287.50">as..</text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (18 samples, 2.44%)</title><rect x="94.8440%" y="261" width="2.4423%" height="15" fill="rgb(220,99,45)" fg:x="699" fg:w="18"/><text x="95.0940%" y="271.50">st..</text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (18 samples, 2.44%)</title><rect x="94.8440%" y="245" width="2.4423%" height="15" fill="rgb(249,89,25)" fg:x="699" fg:w="18"/><text x="95.0940%" y="255.50">st..</text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock_contended (17 samples, 2.31%)</title><rect x="94.9796%" y="229" width="2.3066%" height="15" fill="rgb(239,193,0)" fg:x="700" fg:w="17"/><text x="95.2296%" y="239.50">s..</text></g><g><title>std::sys::sync::mutex::futex::Mutex::spin (6 samples, 0.81%)</title><rect x="96.4722%" y="213" width="0.8141%" height="15" fill="rgb(231,126,1)" fg:x="711" fg:w="6"/><text x="96.7222%" y="223.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (1 samples, 0.14%)</title><rect x="97.1506%" y="197" width="0.1357%" height="15" fill="rgb(243,166,3)" fg:x="716" fg:w="1"/><text x="97.4006%" y="207.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.14%)</title><rect x="97.1506%" y="181" width="0.1357%" height="15" fill="rgb(223,22,34)" fg:x="716" fg:w="1"/><text x="97.4006%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_executor::CallOnDrop&lt;async_executor::Executor::spawn_inner&lt;(),julia::generate_image_buffer::{{closure}}&gt;::{{closure}}::{{closure}}&gt;&gt; (24 samples, 3.26%)</title><rect x="94.5726%" y="309" width="3.2564%" height="15" fill="rgb(251,52,51)" fg:x="697" fg:w="24"/><text x="94.8226%" y="319.50">cor..</text></g><g><title>syscall (4 samples, 0.54%)</title><rect x="97.2863%" y="293" width="0.5427%" height="15" fill="rgb(221,165,28)" fg:x="717" fg:w="4"/><text x="97.5363%" y="303.50"></text></g><g><title>[unknown] (4 samples, 0.54%)</title><rect x="97.2863%" y="277" width="0.5427%" height="15" fill="rgb(218,121,47)" fg:x="717" fg:w="4"/><text x="97.5363%" y="287.50"></text></g><g><title>[unknown] (3 samples, 0.41%)</title><rect x="97.4220%" y="261" width="0.4071%" height="15" fill="rgb(209,120,9)" fg:x="718" fg:w="3"/><text x="97.6720%" y="271.50"></text></g><g><title>[unknown] (3 samples, 0.41%)</title><rect x="97.4220%" y="245" width="0.4071%" height="15" fill="rgb(236,68,12)" fg:x="718" fg:w="3"/><text x="97.6720%" y="255.50"></text></g><g><title>[unknown] (3 samples, 0.41%)</title><rect x="97.4220%" y="229" width="0.4071%" height="15" fill="rgb(225,194,26)" fg:x="718" fg:w="3"/><text x="97.6720%" y="239.50"></text></g><g><title>[unknown] (3 samples, 0.41%)</title><rect x="97.4220%" y="213" width="0.4071%" height="15" fill="rgb(231,84,39)" fg:x="718" fg:w="3"/><text x="97.6720%" y="223.50"></text></g><g><title>[unknown] (2 samples, 0.27%)</title><rect x="97.5577%" y="197" width="0.2714%" height="15" fill="rgb(210,11,45)" fg:x="719" fg:w="2"/><text x="97.8077%" y="207.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="97.6934%" y="181" width="0.1357%" height="15" fill="rgb(224,54,52)" fg:x="720" fg:w="1"/><text x="97.9434%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;std::sync::mutex::Mutex&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;image::color::Rgb&lt;u8&gt;&gt;&gt;&gt;&gt;&gt; (1 samples, 0.14%)</title><rect x="97.8290%" y="293" width="0.1357%" height="15" fill="rgb(238,102,14)" fg:x="721" fg:w="1"/><text x="98.0790%" y="303.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.14%)</title><rect x="97.8290%" y="277" width="0.1357%" height="15" fill="rgb(243,160,52)" fg:x="721" fg:w="1"/><text x="98.0790%" y="287.50"></text></g><g><title>num_complex::Complex&lt;T&gt;::norm (5 samples, 0.68%)</title><rect x="98.1004%" y="277" width="0.6784%" height="15" fill="rgb(216,114,19)" fg:x="723" fg:w="5"/><text x="98.3504%" y="287.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::hypot (5 samples, 0.68%)</title><rect x="98.1004%" y="261" width="0.6784%" height="15" fill="rgb(244,166,37)" fg:x="723" fg:w="5"/><text x="98.3504%" y="271.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::hypot (5 samples, 0.68%)</title><rect x="98.1004%" y="245" width="0.6784%" height="15" fill="rgb(246,29,44)" fg:x="723" fg:w="5"/><text x="98.3504%" y="255.50"></text></g><g><title>hypot (5 samples, 0.68%)</title><rect x="98.1004%" y="229" width="0.6784%" height="15" fill="rgb(215,56,53)" fg:x="723" fg:w="5"/><text x="98.3504%" y="239.50"></text></g><g><title>julia::color_generator::_{{closure}} (8 samples, 1.09%)</title><rect x="97.9647%" y="293" width="1.0855%" height="15" fill="rgb(217,60,2)" fg:x="722" fg:w="8"/><text x="98.2147%" y="303.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::powf (2 samples, 0.27%)</title><rect x="98.7788%" y="277" width="0.2714%" height="15" fill="rgb(207,26,24)" fg:x="728" fg:w="2"/><text x="99.0288%" y="287.50"></text></g><g><title>pow (2 samples, 0.27%)</title><rect x="98.7788%" y="261" width="0.2714%" height="15" fill="rgb(252,210,15)" fg:x="728" fg:w="2"/><text x="99.0288%" y="271.50"></text></g><g><title>[libm.so.6] (2 samples, 0.27%)</title><rect x="98.7788%" y="245" width="0.2714%" height="15" fill="rgb(253,209,26)" fg:x="728" fg:w="2"/><text x="99.0288%" y="255.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_err (1 samples, 0.14%)</title><rect x="99.0502%" y="261" width="0.1357%" height="15" fill="rgb(238,170,14)" fg:x="730" fg:w="1"/><text x="99.3002%" y="271.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_ok (1 samples, 0.14%)</title><rect x="99.0502%" y="245" width="0.1357%" height="15" fill="rgb(216,178,15)" fg:x="730" fg:w="1"/><text x="99.3002%" y="255.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (44 samples, 5.97%)</title><rect x="93.3514%" y="485" width="5.9701%" height="15" fill="rgb(250,197,2)" fg:x="688" fg:w="44"/><text x="93.6014%" y="495.50">&lt;futures..</text></g><g><title>async_executor::Executor::run::_{{closure}}::_{{closure}} (44 samples, 5.97%)</title><rect x="93.3514%" y="469" width="5.9701%" height="15" fill="rgb(212,70,42)" fg:x="688" fg:w="44"/><text x="93.6014%" y="479.50">async_ex..</text></g><g><title>async_task::runnable::Runnable&lt;M&gt;::run (37 samples, 5.02%)</title><rect x="94.3012%" y="453" width="5.0204%" height="15" fill="rgb(227,213,9)" fg:x="695" fg:w="37"/><text x="94.5512%" y="463.50">async_..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S,M&gt;::run (37 samples, 5.02%)</title><rect x="94.3012%" y="437" width="5.0204%" height="15" fill="rgb(245,99,25)" fg:x="695" fg:w="37"/><text x="94.5512%" y="447.50">async_..</text></g><g><title>std::panic::catch_unwind (35 samples, 4.75%)</title><rect x="94.5726%" y="421" width="4.7490%" height="15" fill="rgb(250,82,29)" fg:x="697" fg:w="35"/><text x="94.8226%" y="431.50">std::p..</text></g><g><title>std::panicking::try (35 samples, 4.75%)</title><rect x="94.5726%" y="405" width="4.7490%" height="15" fill="rgb(241,226,54)" fg:x="697" fg:w="35"/><text x="94.8226%" y="415.50">std::p..</text></g><g><title>std::panicking::try::do_call (35 samples, 4.75%)</title><rect x="94.5726%" y="389" width="4.7490%" height="15" fill="rgb(221,99,41)" fg:x="697" fg:w="35"/><text x="94.8226%" y="399.50">std::p..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (35 samples, 4.75%)</title><rect x="94.5726%" y="373" width="4.7490%" height="15" fill="rgb(213,90,21)" fg:x="697" fg:w="35"/><text x="94.8226%" y="383.50">&lt;core:..</text></g><g><title>core::ops::function::FnOnce::call_once (35 samples, 4.75%)</title><rect x="94.5726%" y="357" width="4.7490%" height="15" fill="rgb(205,208,24)" fg:x="697" fg:w="35"/><text x="94.8226%" y="367.50">core::..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S,M&gt;::run::_{{closure}} (35 samples, 4.75%)</title><rect x="94.5726%" y="341" width="4.7490%" height="15" fill="rgb(246,31,12)" fg:x="697" fg:w="35"/><text x="94.8226%" y="351.50">async_..</text></g><g><title>async_executor::Executor::spawn_inner::_{{closure}} (35 samples, 4.75%)</title><rect x="94.5726%" y="325" width="4.7490%" height="15" fill="rgb(213,154,6)" fg:x="697" fg:w="35"/><text x="94.8226%" y="335.50">async_..</text></g><g><title>julia::generate_image_buffer::_{{closure}} (11 samples, 1.49%)</title><rect x="97.8290%" y="309" width="1.4925%" height="15" fill="rgb(222,163,29)" fg:x="721" fg:w="11"/><text x="98.0790%" y="319.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (2 samples, 0.27%)</title><rect x="99.0502%" y="293" width="0.2714%" height="15" fill="rgb(227,201,8)" fg:x="730" fg:w="2"/><text x="99.3002%" y="303.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (2 samples, 0.27%)</title><rect x="99.0502%" y="277" width="0.2714%" height="15" fill="rgb(233,9,32)" fg:x="730" fg:w="2"/><text x="99.3002%" y="287.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock_contended (1 samples, 0.14%)</title><rect x="99.1859%" y="261" width="0.1357%" height="15" fill="rgb(217,54,24)" fg:x="731" fg:w="1"/><text x="99.4359%" y="271.50"></text></g><g><title>async_executor::Executor::run::_{{closure}} (45 samples, 6.11%)</title><rect x="93.3514%" y="501" width="6.1058%" height="15" fill="rgb(235,192,0)" fg:x="688" fg:w="45"/><text x="93.6014%" y="511.50">async_ex..</text></g><g><title>parking::Inner::park (1 samples, 0.14%)</title><rect x="99.3216%" y="485" width="0.1357%" height="15" fill="rgb(235,45,9)" fg:x="732" fg:w="1"/><text x="99.5716%" y="495.50"></text></g><g><title>std::sync::condvar::Condvar::wait (1 samples, 0.14%)</title><rect x="99.3216%" y="469" width="0.1357%" height="15" fill="rgb(246,42,40)" fg:x="732" fg:w="1"/><text x="99.5716%" y="479.50"></text></g><g><title>std::sys::sync::condvar::futex::Condvar::wait (1 samples, 0.14%)</title><rect x="99.3216%" y="453" width="0.1357%" height="15" fill="rgb(248,111,24)" fg:x="732" fg:w="1"/><text x="99.5716%" y="463.50"></text></g><g><title>std::sys::sync::condvar::futex::Condvar::wait_optional_timeout (1 samples, 0.14%)</title><rect x="99.3216%" y="437" width="0.1357%" height="15" fill="rgb(249,65,22)" fg:x="732" fg:w="1"/><text x="99.5716%" y="447.50"></text></g><g><title>std::sys::pal::unix::futex::futex_wait (1 samples, 0.14%)</title><rect x="99.3216%" y="421" width="0.1357%" height="15" fill="rgb(238,111,51)" fg:x="732" fg:w="1"/><text x="99.5716%" y="431.50"></text></g><g><title>syscall (1 samples, 0.14%)</title><rect x="99.3216%" y="405" width="0.1357%" height="15" fill="rgb(250,118,22)" fg:x="732" fg:w="1"/><text x="99.5716%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="99.3216%" y="389" width="0.1357%" height="15" fill="rgb(234,84,26)" fg:x="732" fg:w="1"/><text x="99.5716%" y="399.50"></text></g><g><title>async_io::reactor::Reactor::try_lock (1 samples, 0.14%)</title><rect x="99.4573%" y="501" width="0.1357%" height="15" fill="rgb(243,172,12)" fg:x="733" fg:w="1"/><text x="99.7073%" y="511.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::try_lock (1 samples, 0.14%)</title><rect x="99.4573%" y="485" width="0.1357%" height="15" fill="rgb(236,150,49)" fg:x="733" fg:w="1"/><text x="99.7073%" y="495.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::try_lock (1 samples, 0.14%)</title><rect x="99.4573%" y="469" width="0.1357%" height="15" fill="rgb(225,197,26)" fg:x="733" fg:w="1"/><text x="99.7073%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (1 samples, 0.14%)</title><rect x="99.4573%" y="453" width="0.1357%" height="15" fill="rgb(214,17,42)" fg:x="733" fg:w="1"/><text x="99.7073%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1 samples, 0.14%)</title><rect x="99.4573%" y="437" width="0.1357%" height="15" fill="rgb(224,165,40)" fg:x="733" fg:w="1"/><text x="99.7073%" y="447.50"></text></g><g><title>all (737 samples, 100%)</title><rect x="0.0000%" y="885" width="100.0000%" height="15" fill="rgb(246,100,4)" fg:x="0" fg:w="737"/><text x="0.2500%" y="895.50"></text></g><g><title>smol-9 (49 samples, 6.65%)</title><rect x="93.3514%" y="869" width="6.6486%" height="15" fill="rgb(222,103,0)" fg:x="688" fg:w="49"/><text x="93.6014%" y="879.50">smol-9</text></g><g><title>clone3 (49 samples, 6.65%)</title><rect x="93.3514%" y="853" width="6.6486%" height="15" fill="rgb(227,189,26)" fg:x="688" fg:w="49"/><text x="93.6014%" y="863.50">clone3</text></g><g><title>start_thread (49 samples, 6.65%)</title><rect x="93.3514%" y="837" width="6.6486%" height="15" fill="rgb(214,202,17)" fg:x="688" fg:w="49"/><text x="93.6014%" y="847.50">start_thr..</text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (49 samples, 6.65%)</title><rect x="93.3514%" y="821" width="6.6486%" height="15" fill="rgb(229,111,3)" fg:x="688" fg:w="49"/><text x="93.6014%" y="831.50">std::sys:..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (49 samples, 6.65%)</title><rect x="93.3514%" y="805" width="6.6486%" height="15" fill="rgb(229,172,15)" fg:x="688" fg:w="49"/><text x="93.6014%" y="815.50">&lt;alloc::b..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (49 samples, 6.65%)</title><rect x="93.3514%" y="789" width="6.6486%" height="15" fill="rgb(230,224,35)" fg:x="688" fg:w="49"/><text x="93.6014%" y="799.50">&lt;alloc::b..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (49 samples, 6.65%)</title><rect x="93.3514%" y="773" width="6.6486%" height="15" fill="rgb(251,141,6)" fg:x="688" fg:w="49"/><text x="93.6014%" y="783.50">core::ops..</text></g><g><title>std::thread::Builder::spawn_unchecked_::_{{closure}} (49 samples, 6.65%)</title><rect x="93.3514%" y="757" width="6.6486%" height="15" fill="rgb(225,208,6)" fg:x="688" fg:w="49"/><text x="93.6014%" y="767.50">std::thre..</text></g><g><title>std::panic::catch_unwind (49 samples, 6.65%)</title><rect x="93.3514%" y="741" width="6.6486%" height="15" fill="rgb(246,181,16)" fg:x="688" fg:w="49"/><text x="93.6014%" y="751.50">std::pani..</text></g><g><title>std::panicking::try (49 samples, 6.65%)</title><rect x="93.3514%" y="725" width="6.6486%" height="15" fill="rgb(227,129,36)" fg:x="688" fg:w="49"/><text x="93.6014%" y="735.50">std::pani..</text></g><g><title>std::panicking::try::do_call (49 samples, 6.65%)</title><rect x="93.3514%" y="709" width="6.6486%" height="15" fill="rgb(248,117,24)" fg:x="688" fg:w="49"/><text x="93.6014%" y="719.50">std::pani..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (49 samples, 6.65%)</title><rect x="93.3514%" y="693" width="6.6486%" height="15" fill="rgb(214,185,35)" fg:x="688" fg:w="49"/><text x="93.6014%" y="703.50">&lt;core::pa..</text></g><g><title>std::thread::Builder::spawn_unchecked_::_{{closure}}::_{{closure}} (49 samples, 6.65%)</title><rect x="93.3514%" y="677" width="6.6486%" height="15" fill="rgb(236,150,34)" fg:x="688" fg:w="49"/><text x="93.6014%" y="687.50">std::thre..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (49 samples, 6.65%)</title><rect x="93.3514%" y="661" width="6.6486%" height="15" fill="rgb(243,228,27)" fg:x="688" fg:w="49"/><text x="93.6014%" y="671.50">std::sys_..</text></g><g><title>smol::spawn::spawn::global::_{{closure}}::_{{closure}} (49 samples, 6.65%)</title><rect x="93.3514%" y="645" width="6.6486%" height="15" fill="rgb(245,77,44)" fg:x="688" fg:w="49"/><text x="93.6014%" y="655.50">smol::spa..</text></g><g><title>std::panic::catch_unwind (49 samples, 6.65%)</title><rect x="93.3514%" y="629" width="6.6486%" height="15" fill="rgb(235,214,42)" fg:x="688" fg:w="49"/><text x="93.6014%" y="639.50">std::pani..</text></g><g><title>std::panicking::try (49 samples, 6.65%)</title><rect x="93.3514%" y="613" width="6.6486%" height="15" fill="rgb(221,74,3)" fg:x="688" fg:w="49"/><text x="93.6014%" y="623.50">std::pani..</text></g><g><title>std::panicking::try::do_call (49 samples, 6.65%)</title><rect x="93.3514%" y="597" width="6.6486%" height="15" fill="rgb(206,121,29)" fg:x="688" fg:w="49"/><text x="93.6014%" y="607.50">std::pani..</text></g><g><title>smol::spawn::spawn::global::_{{closure}}::_{{closure}}::_{{closure}} (49 samples, 6.65%)</title><rect x="93.3514%" y="581" width="6.6486%" height="15" fill="rgb(249,131,53)" fg:x="688" fg:w="49"/><text x="93.6014%" y="591.50">smol::spa..</text></g><g><title>async_io::driver::block_on (49 samples, 6.65%)</title><rect x="93.3514%" y="565" width="6.6486%" height="15" fill="rgb(236,170,29)" fg:x="688" fg:w="49"/><text x="93.6014%" y="575.50">async_io:..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (49 samples, 6.65%)</title><rect x="93.3514%" y="549" width="6.6486%" height="15" fill="rgb(247,96,15)" fg:x="688" fg:w="49"/><text x="93.6014%" y="559.50">std::thre..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (49 samples, 6.65%)</title><rect x="93.3514%" y="533" width="6.6486%" height="15" fill="rgb(211,210,7)" fg:x="688" fg:w="49"/><text x="93.6014%" y="543.50">std::thre..</text></g><g><title>async_io::driver::block_on::_{{closure}} (49 samples, 6.65%)</title><rect x="93.3514%" y="517" width="6.6486%" height="15" fill="rgb(240,88,50)" fg:x="688" fg:w="49"/><text x="93.6014%" y="527.50">async_io:..</text></g><g><title>parking::Inner::park (3 samples, 0.41%)</title><rect x="99.5929%" y="501" width="0.4071%" height="15" fill="rgb(209,229,26)" fg:x="734" fg:w="3"/><text x="99.8429%" y="511.50"></text></g><g><title>std::sync::condvar::Condvar::wait (3 samples, 0.41%)</title><rect x="99.5929%" y="485" width="0.4071%" height="15" fill="rgb(210,68,23)" fg:x="734" fg:w="3"/><text x="99.8429%" y="495.50"></text></g><g><title>std::sys::sync::condvar::futex::Condvar::wait (3 samples, 0.41%)</title><rect x="99.5929%" y="469" width="0.4071%" height="15" fill="rgb(229,180,13)" fg:x="734" fg:w="3"/><text x="99.8429%" y="479.50"></text></g><g><title>std::sys::sync::condvar::futex::Condvar::wait_optional_timeout (3 samples, 0.41%)</title><rect x="99.5929%" y="453" width="0.4071%" height="15" fill="rgb(236,53,44)" fg:x="734" fg:w="3"/><text x="99.8429%" y="463.50"></text></g><g><title>std::sys::pal::unix::futex::futex_wait (3 samples, 0.41%)</title><rect x="99.5929%" y="437" width="0.4071%" height="15" fill="rgb(244,214,29)" fg:x="734" fg:w="3"/><text x="99.8429%" y="447.50"></text></g><g><title>syscall (3 samples, 0.41%)</title><rect x="99.5929%" y="421" width="0.4071%" height="15" fill="rgb(220,75,29)" fg:x="734" fg:w="3"/><text x="99.8429%" y="431.50"></text></g><g><title>[unknown] (3 samples, 0.41%)</title><rect x="99.5929%" y="405" width="0.4071%" height="15" fill="rgb(214,183,37)" fg:x="734" fg:w="3"/><text x="99.8429%" y="415.50"></text></g><g><title>[unknown] (3 samples, 0.41%)</title><rect x="99.5929%" y="389" width="0.4071%" height="15" fill="rgb(239,117,29)" fg:x="734" fg:w="3"/><text x="99.8429%" y="399.50"></text></g><g><title>[unknown] (2 samples, 0.27%)</title><rect x="99.7286%" y="373" width="0.2714%" height="15" fill="rgb(237,171,35)" fg:x="735" fg:w="2"/><text x="99.9786%" y="383.50"></text></g><g><title>[unknown] (2 samples, 0.27%)</title><rect x="99.7286%" y="357" width="0.2714%" height="15" fill="rgb(229,178,53)" fg:x="735" fg:w="2"/><text x="99.9786%" y="367.50"></text></g><g><title>[unknown] (2 samples, 0.27%)</title><rect x="99.7286%" y="341" width="0.2714%" height="15" fill="rgb(210,102,19)" fg:x="735" fg:w="2"/><text x="99.9786%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="99.8643%" y="325" width="0.1357%" height="15" fill="rgb(235,127,22)" fg:x="736" fg:w="1"/><text x="100.1143%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="99.8643%" y="309" width="0.1357%" height="15" fill="rgb(244,31,31)" fg:x="736" fg:w="1"/><text x="100.1143%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="99.8643%" y="293" width="0.1357%" height="15" fill="rgb(231,43,21)" fg:x="736" fg:w="1"/><text x="100.1143%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="99.8643%" y="277" width="0.1357%" height="15" fill="rgb(217,131,35)" fg:x="736" fg:w="1"/><text x="100.1143%" y="287.50"></text></g></svg></svg>